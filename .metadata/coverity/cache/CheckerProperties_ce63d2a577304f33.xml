<?xml version="1.0" encoding="UTF-8" ?><com.coverity.desktop.model.cim.cache.CheckerPropertiesCacheRecord>
  <cacheKey>
    <serverName>amaria</serverName>
    <cimUsername>admin</cimUsername>
    <pluginVersion>eclipse-gilroy1-push-3238.73.115</pluginVersion>
    <cimVersion>20de050 im-gilroy1-push-11391.150.322</cimVersion>
    <userLocale>en_US</userLocale>
  </cacheKey>
  <schemaVersion>2</schemaVersion>
  <lastUpdateTimestamp>
    <iMillis>1408377889797</iMillis>
    <iChronology class="org.joda.time.chrono.GregorianChronology" serialization="custom">
      <unserializable-parents/>
      <org.joda.time.chrono.AssembledChronology>
        <default>
          <iBase class="org.joda.time.chrono.ZonedChronology" serialization="custom">
            <unserializable-parents/>
            <org.joda.time.chrono.AssembledChronology>
              <default>
                <iBase class="org.joda.time.chrono.GregorianChronology" serialization="custom">
                  <unserializable-parents/>
                  <org.joda.time.chrono.AssembledChronology>
                    <default/>
                  </org.joda.time.chrono.AssembledChronology>
                  <org.joda.time.chrono.BasicChronology>
                    <default>
                      <iMinDaysInFirstWeek>4</iMinDaysInFirstWeek>
                    </default>
                  </org.joda.time.chrono.BasicChronology>
                </iBase>
                <iParam class="org.joda.time.tz.FixedDateTimeZone" resolves-to="org.joda.time.DateTimeZone$Stub" serialization="custom">
                  <org.joda.time.DateTimeZone_-Stub>
                    <string>-07:00</string>
                  </org.joda.time.DateTimeZone_-Stub>
                </iParam>
              </default>
            </org.joda.time.chrono.AssembledChronology>
          </iBase>
        </default>
      </org.joda.time.chrono.AssembledChronology>
      <org.joda.time.chrono.BasicChronology>
        <default>
          <iMinDaysInFirstWeek>4</iMinDaysInFirstWeek>
        </default>
      </org.joda.time.chrono.BasicChronology>
    </iChronology>
  </lastUpdateTimestamp>
  <checkerProperties>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SWAPPED_ARGUMENTS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>683</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function call will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>The arguments to a function call are provided in the wrong order.</subcategoryLongDescription>
      <subcategoryShortDescription>Arguments in wrong order</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SWAPPED_ARGUMENTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>683</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function call will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>The arguments to a function call are provided in the wrong order.</subcategoryLongDescription>
      <subcategoryShortDescription>Arguments in wrong order</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A naive attempt to determine the lexical ordering of two BSTRs using &lt;, &lt;=, &gt;, or &gt;= will actually only compare two pointers, yielding a meaningless result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparison of two BSTRs for other than equality</subcategoryLongDescription>
      <subcategoryShortDescription>Bad COM BSTR comparison</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.NE_NON_BSTR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The special memory management used by BSTR makes it unlikely that a simple equality comparison with any other type will yield the desired result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparison of BSTR to other than BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR inequality with non-BSTR</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.THREADING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>thread_run</subcategory>
      </checkerSubcategoryId>
      <cweCategory>572</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The code will be run in the calling thread, instead of creating a new thread.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling Thread.run does not actually create a thread</subcategoryLongDescription>
      <subcategoryShortDescription>Direct call to Thread.run</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>double_close</subcategory>
      </checkerSubcategoryId>
      <cweCategory>672</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The second close operation will fail.  This may also be indicative of other earlier failed operations on the same handle.</subcategoryLocalEffect>
      <subcategoryLongDescription>A resource handle or descriptor is closed more than once</subcategoryLongDescription>
      <subcategoryShortDescription>Double close</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ALLOC_FREE_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>762</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Depending on the difference between the correct and incorrect allocator, there may be a resource leak or memory corruption.</subcategoryLocalEffect>
      <subcategoryLongDescription>A resource is freed using the wrong deallocator</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect deallocator used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHROOT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>243</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If a call to chroot is not followed by a call to chdir(&quot;/&quot;) the chroot jail confinement can be violated.</subcategoryLocalEffect>
      <subcategoryLongDescription>A call to chroot followed by an operation that may escape from the chroot jail</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure chroot</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHROOT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>243</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If a call to chroot is not followed by a call to chdir(&quot;/&quot;) the chroot jail confinement can be violated.</subcategoryLocalEffect>
      <subcategoryLongDescription>A call to chroot followed by an operation that may escape from the chroot jail</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure chroot</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OPEN_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The permissions on the file created will be arbitrary and possibly insecure.</subcategoryLocalEffect>
      <subcategoryLongDescription>The open system call may create a file, but no permissions are specified</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure file permissions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OPEN_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The permissions on the file created will be arbitrary and possibly insecure.</subcategoryLocalEffect>
      <subcategoryLongDescription>The open system call may create a file, but no permissions are specified</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure file permissions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A NoSuchElementException is thrown if the container backing the iterator does not have the expected elements.</subcategoryLocalEffect>
      <subcategoryLongDescription>A call to next() or previous() on an iterator that may not have a next or previous element</subcategoryLongDescription>
      <subcategoryShortDescription>Iterator out of range</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A NoSuchElementException is thrown if the container backing the iterator does not have the expected elements.</subcategoryLocalEffect>
      <subcategoryLongDescription>A call to next() or previous() on an iterator that may not have a next or previous element</subcategoryLongDescription>
      <subcategoryShortDescription>Iterator out of range</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JDBC_CONNECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>664</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A java.sql.SQLException may be thrown, or the connection will not perform the expected operation, or the database connection will remain open and unused, reducing the future availability of other connections.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling commit on an auto-commit Connection, or calling certain methods on closed connections causes an exception, or leak of a database connection, which should be closed after use</subcategoryLongDescription>
      <subcategoryShortDescription>JDBC connection state error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JDBC_CONNECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>666</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A java.sql.SQLException may be thrown, or the connection will not perform the expected operation.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling commit on an auto-commit Connection, or calling certain methods on closed connections causes an exception</subcategoryLongDescription>
      <subcategoryShortDescription>JDBC connection state error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>lock_assert</subcategory>
      </checkerSubcategoryId>
      <cweCategory>617</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program would halt at the lock assertion statement.</subcategoryLocalEffect>
      <subcategoryLongDescription>A lock assertion fails because a lock is not held on a path where it is asserted</subcategoryLongDescription>
      <subcategoryShortDescription>Lock assertion failure</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VARARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Memory may be corrupted by forgetting to begin and end variable argument processing.</subcategoryLocalEffect>
      <subcategoryLongDescription>Incorrect usage of variable argument macros; use va_start or va_copy to begin processing and va_end to finish</subcategoryLongDescription>
      <subcategoryShortDescription>Missing varargs init or cleanup</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VARARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Memory may be corrupted by forgetting to begin and end variable argument processing.</subcategoryLocalEffect>
      <subcategoryLongDescription>Incorrect usage of variable argument macros; use va_start or va_copy to begin processing and va_end to finish</subcategoryLongDescription>
      <subcategoryShortDescription>Missing varargs init or cleanup</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>comparator_misuse</subcategory>
      </checkerSubcategoryId>
      <cweCategory>253</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The return value may be misinterpreted if the function returns an unexpected value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A memcmp-style function is used assuming that it returns -1, 0, or 1.</subcategoryLongDescription>
      <subcategoryShortDescription>Misuse of memcmp-style function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STREAM_FORMAT_STATE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The next output operation may not expect the stream format state being altered, resulting in incorrectly formatted output.</subcategoryLocalEffect>
      <subcategoryLongDescription>Not restoring the stream format state of an ostream</subcategoryLongDescription>
      <subcategoryShortDescription>Not restoring ostream format</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORM_ABANDONED_TRANSIENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>New data is not stored in the database.</subcategoryLocalEffect>
      <subcategoryLongDescription>New objects are not persisted.</subcategoryLongDescription>
      <subcategoryShortDescription>ORM persistence error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORM_LOST_UPDATE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>In-memory changes are not stored in the database.</subcategoryLocalEffect>
      <subcategoryLongDescription>New or modified objects are not persisted.</subcategoryLongDescription>
      <subcategoryShortDescription>ORM persistence error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORM_LOAD_NULL_CHECK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>253</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Use of a proxy for a non-existent object will throw an exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>A possibly proxy object is pointlessly tested for null.</subcategoryLongDescription>
      <subcategoryShortDescription>ORM usage error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>overlapping_buffer</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Results in an undefined behavior</subcategoryLocalEffect>
      <subcategoryLongDescription>Buffers may be overlapping in a string copy function</subcategoryLongDescription>
      <subcategoryShortDescription>Overlapping buffer in memory copy</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.TOO_FEW_PRINTF_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>685</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The number of arguments to printf does not match the format string</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg count mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.TOO_FEW_PRINTF_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>685</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The number of arguments to printf does not match the format string</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg count mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.TOO_MANY_PRINTF_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>685</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The number of arguments to printf does not match the format string</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg count mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.TOO_MANY_PRINTF_ARGS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>685</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If there are too many arguments, some values will be ignored; if there are too few, undefined behavior may result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The number of arguments to printf does not match the format string</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg count mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.PRINTF_ARG_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>686</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value will be misinterpreted by printf, causing incorrect output and possibly out-of-bounds memory access.</subcategoryLocalEffect>
      <subcategoryLongDescription>A printf format string does not match the types of one of the arguments</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg type mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.PRINTF_ARG_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>686</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value will be misinterpreted by printf, causing incorrect output and possibly out-of-bounds memory access.</subcategoryLocalEffect>
      <subcategoryLongDescription>A printf format string does not match the types of one of the arguments</subcategoryLongDescription>
      <subcategoryShortDescription>Printf arg type mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BAD_PRINTF_FORMAT_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>628</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The format string may be interpreted incorrectly by printf, causing undefined behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>A printf format string contains an unrecognized format specifier</subcategoryLongDescription>
      <subcategoryShortDescription>Printf format string issue</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BAD_PRINTF_FORMAT_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>628</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The format string may be interpreted incorrectly by printf, causing undefined behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>A printf format string contains an unrecognized format specifier</subcategoryLongDescription>
      <subcategoryShortDescription>Printf format string issue</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STREAM_FORMAT_STATE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The next output operation may not expect the altered or incorrect stream format state, resulting in incorrectly formatted output.</subcategoryLocalEffect>
      <subcategoryLongDescription>Not restoring the stream format state of an ostream or setf called with invalid format state</subcategoryLongDescription>
      <subcategoryShortDescription>Stream format state error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>multiple_pushes</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This violates the Symbian convention that a function can only push 0 or 1 objects onto the cleanup stack; this possibly indicates a logic error or incorrect Symbian API usage.</subcategoryLocalEffect>
      <subcategoryLongDescription>A function pushes more than one object onto the cleanup stack in at least one possible execution</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - several objects pushed</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bad_pop_arg</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Wrong object expected to be popped; this likely indicates a logic error or a missing or extra push to the cleanup stack.</subcategoryLocalEffect>
      <subcategoryLongDescription>The cleanup stack is not empty at the end of the function, or function pops elements incorrectly</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - wrong object popped</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHAR_IO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>197</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>It will not be possible to distinguish between EOF and a valid character.</subcategoryLocalEffect>
      <subcategoryLongDescription>Stdio character-oriented I/O functions return int values such as EOF not representable by char variables</subcategoryLongDescription>
      <subcategoryShortDescription>Truncated stdio return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHAR_IO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>197</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>It will not be possible to distinguish between EOF and a valid character.</subcategoryLocalEffect>
      <subcategoryLongDescription>Stdio character-oriented I/O functions return int values such as EOF not representable by char variables</subcategoryLongDescription>
      <subcategoryShortDescription>Truncated stdio return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REGEX_CONFUSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The string manipulation will return incorrect results for some inputs.</subcategoryLocalEffect>
      <subcategoryLongDescription>A string intended to be matched literally is instead treated as a regular expression, changing its meaning.</subcategoryLongDescription>
      <subcategoryShortDescription>Unintended regular expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STREAM_FORMAT_STATE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>suspicious_setf_mask</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Usually this error is caused by an analysis imprecision, but a true bug may indicate an incorrect mask.</subcategoryLocalEffect>
      <subcategoryLongDescription>setf (or a similar) was called, but the argument was not recognized as being composed of valid format state bits</subcategoryLongDescription>
      <subcategoryShortDescription>Unknown mask in setf</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNMODIFIABLE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attempt to modify the collection will result in an UnsupportedOperationException being thrown.</subcategoryLocalEffect>
      <subcategoryLongDescription>Attempt to modify a collection that is wrapped by an unmodifiable adapter</subcategoryLongDescription>
      <subcategoryShortDescription>Unmodifiable collection error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNMODIFIABLE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attempt to modify the collection will result in an UnsupportedOperationException being thrown.</subcategoryLocalEffect>
      <subcategoryLongDescription>Attempt to modify a collection that is wrapped by an unmodifiable adapter</subcategoryLongDescription>
      <subcategoryShortDescription>Unmodifiable collection error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HIBERNATE_BAD_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>bad_equals</subcategory>
      </checkerSubcategoryId>
      <cweCategory>596</cweCategory>
      <eventSetCaptions>
        <string>Bad equals() definition</string>
        <string>Collection access using transient entity</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Collections and other objects which depend on equals() may not behave as expected.</subcategoryLocalEffect>
      <subcategoryLongDescription>The result of equals() depends on an entity&apos;s primary database key</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe dependence on database key</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HIBERNATE_BAD_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>bad_hashcode</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Bad hashCode() definition</string>
        <string>Collection access using transient entity</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Collections and other objects which depend on hashCode() may not behave as expected.</subcategoryLocalEffect>
      <subcategoryLongDescription>The result of hashCode() depends on an entity&apos;s primary database key</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe dependence on database key</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HIBERNATE_BAD_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Bad hashCode() definition</string>
        <string>Collection access using transient entity</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Collections and other objects which depend on hashCode() may not behave as expected.</subcategoryLocalEffect>
      <subcategoryLongDescription>The result of hashCode() depends on an entity&apos;s primary database key</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe dependence on database key</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>use_after_close</subcategory>
      </checkerSubcategoryId>
      <cweCategory>672</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Operations on closed handles will fail.</subcategoryLocalEffect>
      <subcategoryLongDescription>A resource handle or descriptor is used after being closed</subcategoryLongDescription>
      <subcategoryShortDescription>Use after close</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.CODING_STYLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>382</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Shutting down the application may be an avenue for denial of service (DoS) attacks, or unexpected service halt.</subcategoryLocalEffect>
      <subcategoryLongDescription>System.exit and Runtime.exit should not be called in libraries, J2EE applications, and many other applications</subcategoryLongDescription>
      <subcategoryShortDescription>Use of System.exit() or similar</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.CODING_STYLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>382</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Shutting down the application may be an avenue for denial of service (DoS) attacks, or unexpected service halt.</subcategoryLocalEffect>
      <subcategoryLongDescription>System.exit and Runtime.exit should not be called in libraries, J2EE applications, and many other applications</subcategoryLongDescription>
      <subcategoryShortDescription>Use of System.exit() or similar</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>672</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Attempting to use previously freed resources might result in data corruption, nonsensical results, or runtime exceptions.</subcategoryLocalEffect>
      <subcategoryLongDescription>Use of an object after its resources have been released</subcategoryLongDescription>
      <subcategoryShortDescription>Use of freed resources</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>672</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Attempting to use previously freed resources might result in data corruption, nonsensical results, or runtime exceptions.</subcategoryLocalEffect>
      <subcategoryLongDescription>Use of an object after its resources have been released</subcategoryLongDescription>
      <subcategoryShortDescription>Use of freed resources</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INVALIDATE_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Undefined behavior may result; the program may crash or subtly misbehave.</subcategoryLocalEffect>
      <subcategoryLongDescription>An invalid or past-the-end iterator is being used</subcategoryLongDescription>
      <subcategoryShortDescription>Using invalid iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INVALIDATE_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Undefined behavior may result; the program may crash or subtly misbehave.</subcategoryLocalEffect>
      <subcategoryLongDescription>An invalid or past-the-end iterator is being used</subcategoryLongDescription>
      <subcategoryShortDescription>Using invalid iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INVALIDATE_ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A concurrent modification exception may result, the container may be corrupted, or the iterator may return incorrect data.</subcategoryLocalEffect>
      <subcategoryLongDescription>An iterator is being used after the source container of the iterator is modified</subcategoryLongDescription>
      <subcategoryShortDescription>Using invalid iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INVALIDATE_ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A concurrent modification exception may result, the container may be corrupted, or the iterator may return incorrect data.</subcategoryLocalEffect>
      <subcategoryLongDescription>An iterator is being used after the source container of the iterator is modified</subcategoryLongDescription>
      <subcategoryShortDescription>Using invalid iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>API usage errors</category>
      <categoryDescription>API usage errors</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRONG_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function call will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>Some methods such as Boolean.getBoolean and Integer.getInteger are easily misunderstood to parse their string arguments. Instead, they load a system property named by the argument and parse the property value.</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong method called</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Build system issues</category>
      <categoryDescription>Build system issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INCLUDE_RECURSION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Compilation errors or even run-time errors (in the presence of function overloading) can result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Recursion in included header files</subcategoryLongDescription>
      <subcategoryShortDescription>Recursion in included headers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Build system issues</category>
      <categoryDescription>Build system issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INCLUDE_RECURSION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Compilation errors or even run-time errors (in the presence of function overloading) can result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Recursion in included header files</subcategoryLongDescription>
      <subcategoryShortDescription>Recursion in included headers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Build system issues</category>
      <categoryDescription>Build system issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HFA</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Unnecessary header files may slow down build performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>A header file was included but none of its contents were used in the rest of the source file</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary header file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Build system issues</category>
      <categoryDescription>Build system issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HFA</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Unnecessary header files may slow down build performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>A header file was included but none of its contents were used in the rest of the source file</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary header file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CLASSCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The downcast may fail and throw an invalid cast exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Object of one type put into a container, but then later downcast to a different type when extracted</subcategoryLongDescription>
      <subcategoryShortDescription>Downcast exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CLASSCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The downcast may fail and throw an invalid cast exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Object of one type put into a container, but then later downcast to a different type when extracted</subcategoryLongDescription>
      <subcategoryShortDescription>Downcast exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_CLASSCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Either the compatibility check is unnecessary, or the downcast may fail and throw an invalid cast exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Object is checked for compatibility with a particular subtype, but then later downcast without a check</subcategoryLongDescription>
      <subcategoryShortDescription>Downcast exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_CLASSCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Either the compatibility check is unnecessary, or the downcast may fail and throw an invalid cast exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Object is checked for compatibility with a particular subtype, but then later downcast without a check</subcategoryLongDescription>
      <subcategoryShortDescription>Downcast exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The method will not be called when virtual dispatch is used, this may cause the class to not perform as expected.</subcategoryLocalEffect>
      <subcategoryLongDescription>Virtual function does not override parent method because of type signature mismatch, usually due to const</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The method will not be called when virtual dispatch is used, this may cause the class to not perform as expected.</subcategoryLocalEffect>
      <subcategoryLongDescription>Virtual function does not override parent method because of type signature mismatch, usually due to const</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>case</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Likely a failed attempt at overriding the superclass method; the superclass method will be called in virtual dispatch.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method does not override the superclass method because the names differ in capitalization</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Likely a failed attempt at overriding the superclass method; the superclass method will be called in virtual dispatch.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method does not override the superclass method because the names differ in capitalization or because one or more argument types differ by package</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Likely a failed attempt at overriding the superclass method; the superclass method will be called in virtual dispatch.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method does not override the superclass method because the names differ in capitalization or because one or more argument types differ by package</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_OVERRIDE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>package</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Likely a failed attempt at overriding the superclass method; the superclass method will be called in virtual dispatch.</subcategoryLocalEffect>
      <subcategoryLongDescription>The method differs from a method in the superclass method because one or more argument types differ by package</subcategoryLongDescription>
      <subcategoryShortDescription>Failed to override method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CALL_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>clone</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Failure to call super.clone may result in the wrong object type being created when cloning subclasses.</subcategoryLocalEffect>
      <subcategoryLongDescription>All implementations of Object.clone are required to call super.clone to allocate the new object</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to call super.clone()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CALL_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>finalize</subcategory>
      </checkerSubcategoryId>
      <cweCategory>568</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The superclass may not get a chance to finalize, possibly leaking resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>It is good practice to call super.finalize in finalize methods</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to call super.finalize()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CALL_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Missing super call</string>
        <string>Examples where other classes call the super implementation</string>
        <string>Implementation of superclass method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Whatever action the superclass method implements will not occur, if the superclass call is actually required.</subcategoryLocalEffect>
      <subcategoryLongDescription>Overrider does not call the superclass method, even though most other overriders do or all overriders of this method should</subcategoryLongDescription>
      <subcategoryShortDescription>Missing call to superclass</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CALL_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Missing super call</string>
        <string>Examples where other classes call the super implementation</string>
        <string>Implementation of superclass method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Whatever action the superclass method implements will not occur, if the superclass call is actually required.</subcategoryLocalEffect>
      <subcategoryLongDescription>Overrider does not call the superclass method, even though most other overriders do</subcategoryLongDescription>
      <subcategoryShortDescription>Missing call to superclass</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VIRTUAL_IN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>665</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A subclass that implements the virtual method might result in reading fields before they are initialized.</subcategoryLocalEffect>
      <subcategoryLongDescription>A virtual method is called in a constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Virtual method in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Class hierarchy inconsistencies</category>
      <categoryDescription>Class hierarchy inconsistencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VIRTUAL_IN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>665</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A subclass that implements the virtual method might result in reading fields before they are initialized.</subcategoryLocalEffect>
      <subcategoryLongDescription>A virtual method is called in a constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Virtual method in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.EXPLICIT_DEPRECATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The method may not be supported in the future, causing a maintenance problem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling a deprecated method</subcategoryLongDescription>
      <subcategoryShortDescription>Calling deprecated method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.EXPLICIT_DEPRECATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The method may not be supported in the future, causing a maintenance problem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling a deprecated method</subcategoryLongDescription>
      <subcategoryShortDescription>Calling deprecated method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MUTABLE_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the non-constant field is modified, the value of compareTo might change, which may break program invariants.</subcategoryLocalEffect>
      <subcategoryLongDescription>The compareTo method should not read from non-constant fields</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison might change</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MUTABLE_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the non-constant field is modified, the value of compareTo might change, which may break program invariants.</subcategoryLocalEffect>
      <subcategoryLongDescription>The compareTo method should not read from non-constant fields</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison might change</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VIRTUAL_DTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>empty_dtor</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <eventSetCaptions>
        <string>Destructor of derived class, which might not be invoked on all instances</string>
        <string>Definition of the base class, which doesn&apos;t have a virtual destructor</string>
        <string>Example where an instance of the base class is deleted</string>
        <string>Example where a pointer to the derived class is upcast to a pointer to the base class</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The base class destructor ought to be declared as virtual; however, this case may be benign since the derived class destructor is empty.</subcategoryLocalEffect>
      <subcategoryLongDescription>The correct derived class destructor that happens to be empty is not invoked due to the absence of a virtual destructor in the base class</subcategoryLongDescription>
      <subcategoryShortDescription>Empty virtual destructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.GC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Explicit garbage collection may cause severely degraded performance, and in extreme cases, denial of service.</subcategoryLocalEffect>
      <subcategoryLongDescription>Explicit garbage collection should not be performed in most applications, and it is usually incorrect in libraries</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit garbage collection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.GC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Explicit garbage collection may cause severely degraded performance, and in extreme cases, denial of service.</subcategoryLocalEffect>
      <subcategoryLongDescription>Explicit garbage collection should not be performed in most applications, and it is usually incorrect in libraries</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit garbage collection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PRIVATE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>485</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The collection may be modified in a way that is not expected or controlled by the object.</subcategoryLocalEffect>
      <subcategoryLongDescription>A private Collection field is returned and then modified</subcategoryLongDescription>
      <subcategoryShortDescription>Exposing private collection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PRIVATE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>485</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The collection may be modified in a way that is not expected or controlled by the object.</subcategoryLocalEffect>
      <subcategoryLongDescription>A private Collection field is returned and then modified</subcategoryLongDescription>
      <subcategoryShortDescription>Exposing private collection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MUTABLE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the non-constant field is modified, hashCode might change, resulting in the object being lost in a hash table.</subcategoryLocalEffect>
      <subcategoryLongDescription>The hashCode method should not read from non-constant fields</subcategoryLongDescription>
      <subcategoryShortDescription>Hash code might change</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MUTABLE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the non-constant field is modified, hashCode might change, resulting in the object being lost in a hash table.</subcategoryLocalEffect>
      <subcategoryLongDescription>The hashCode method should not read from non-constant fields</subcategoryLongDescription>
      <subcategoryShortDescription>Hash code might change</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NESTING_INDENT_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bad_indentation</subcategory>
      </checkerSubcategoryId>
      <cweCategory>483</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Readers of this code might be misled as to its structure.</subcategoryLocalEffect>
      <subcategoryLongDescription>The indentation of this code does not reflect its syntactic nesting level.</subcategoryLongDescription>
      <subcategoryShortDescription>Indentation does not match nesting level</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NESTING_INDENT_MISMATCH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>bad_indentation</subcategory>
      </checkerSubcategoryId>
      <cweCategory>483</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Readers of this code might be misled as to its structure.</subcategoryLocalEffect>
      <subcategoryLongDescription>The indentation of this code does not reflect its syntactic nesting level.</subcategoryLongDescription>
      <subcategoryShortDescription>Indentation does not match nesting level</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNCALLED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Uncalled methods may indicate lack of proper code maintenance.</subcategoryLocalEffect>
      <subcategoryLongDescription>Method is not called from anywhere in the program</subcategoryLongDescription>
      <subcategoryShortDescription>Method is never called</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNCALLED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Uncalled methods may indicate lack of proper code maintenance.</subcategoryLocalEffect>
      <subcategoryLongDescription>Method is not called from anywhere in the program</subcategoryLongDescription>
      <subcategoryShortDescription>Method is never called</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.JRE14COMPATIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application incompatible with running on a Java 1.4 environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method is not available in Java Runtime Environment 1.4</subcategoryLongDescription>
      <subcategoryShortDescription>Method not in JRE 1.4</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.JRE14COMPATIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application incompatible with running on a Java 1.4 environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method is not available in Java Runtime Environment 1.4</subcategoryLongDescription>
      <subcategoryShortDescription>Method not in JRE 1.4</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.JRE15COMPATIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application incompatible with running on a Java 1.5 environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method is not available in Java Runtime Environment 1.5</subcategoryLongDescription>
      <subcategoryShortDescription>Method not in JRE 1.5</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.JRE15COMPATIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application incompatible with running on a Java 1.5 environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method is not available in Java Runtime Environment 1.5</subcategoryLongDescription>
      <subcategoryShortDescription>Method not in JRE 1.5</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.LOCALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application non-localizable.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method relies on the platform&apos;s default character set</subcategoryLongDescription>
      <subcategoryShortDescription>Method relies on encoding</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.LOCALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this method may make the application non-localizable.</subcategoryLocalEffect>
      <subcategoryLongDescription>This method relies on the platform&apos;s default character set</subcategoryLongDescription>
      <subcategoryShortDescription>Method relies on encoding</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>multiple_returns</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>More than one function return site may make the function harder to maintain.</subcategoryLocalEffect>
      <subcategoryLongDescription>Multiple return statements violates local coding standard</subcategoryLongDescription>
      <subcategoryShortDescription>Multiple return statements</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.THREADING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Using finalizers is difficult to make thread safe and may not correctly clean up external resources, or the code will be run in the calling thread instead of creating a new thread.</subcategoryLocalEffect>
      <subcategoryLongDescription>Relying on finalizers is unsafe or calling Thread.run does not actually create a thread</subcategoryLongDescription>
      <subcategoryShortDescription>Relying on finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.THREADING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Using finalizers is difficult to make thread safe, and may not correctly clean up external resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>Relying on finalizers is unsafe</subcategoryLongDescription>
      <subcategoryShortDescription>Relying on finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>sizeof_punning</subcategory>
      </checkerSubcategoryId>
      <cweCategory>467</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>While the program behaves correctly on the current processor architecture, it relies on potentially non-portable assumptions about type sizes.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator is used on a wrong argument that incidentally has the same size</subcategoryLongDescription>
      <subcategoryShortDescription>Sizeof not portable</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SET_STATIC_IN_NON_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The static field may not reflect the intended value for multiple different objects.</subcategoryLocalEffect>
      <subcategoryLongDescription>A static field is assigned in a non-static method</subcategoryLongDescription>
      <subcategoryShortDescription>Static set in non-static method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SET_STATIC_IN_NON_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The static field may not reflect the intended value for multiple different objects.</subcategoryLocalEffect>
      <subcategoryLongDescription>A static field is assigned in a non-static method</subcategoryLongDescription>
      <subcategoryShortDescription>Static set in non-static method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.NAMING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>naming_L</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Users of this function may not realize that the function may leave because it does not follow the naming convention.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the Symbian naming convention: leaving functions should contain L in their suffix</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - missing L suffix</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.NAMING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>naming_LC</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Because it does not follow the naming convention, users of this function may not realize that the function may push an element to the cleanup stack .</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the Symbian naming convention: functions that push an element to the cleanup stack should contain LC in their suffix</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - missing LC suffix</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.NAMING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Users of this function may not realize that the function is a leaver or pushes an element onto the cleanup stack.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the Symbian naming convention</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - naming convention</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.NAMING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Users of this function may not realize that the function is a leaver or pushes an element onto the cleanup stack.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the Symbian naming convention</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - naming convention</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNUSED_VALUE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the function returned a handle to an object, the handle may be lost.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer returned from a function was never used</subcategoryLongDescription>
      <subcategoryShortDescription>Unused pointer value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNUSED_VALUE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring.</subcategoryLocalEffect>
      <subcategoryLongDescription>A value assigned to a variable is never used.</subcategoryLongDescription>
      <subcategoryShortDescription>Unused value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Code maintainability issues</category>
      <categoryDescription>Code maintainability issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNUSED_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An assigned value that is never used may represent unnecessary computation, an incorrect algorithm, or possibly the need for cleanup or refactoring.</subcategoryLocalEffect>
      <subcategoryLongDescription>A value assigned to a variable is never used.</subcategoryLongDescription>
      <subcategoryShortDescription>Unused value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Compiler dependency</category>
      <categoryDescription>Compiler dependency</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_ARRAY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>scalar</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result; however most implementations will work.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using non-array delete on an array of scalars or pointers allocated with new[]</subcategoryLongDescription>
      <subcategoryShortDescription>Non-array delete for scalars</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_LOCK_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>interned_string_lock</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Potential lock collisions</subcategoryLocalEffect>
      <subcategoryLongDescription>Using an interned string as a lock may cause deadlocks or performance problems if a library also uses the interned string as a lock.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad choice of lock object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_LOCK_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Data race condition</subcategoryLocalEffect>
      <subcategoryLongDescription>Locking upon an object which is a poor choice due to too broad, too narrow, or too unpredictable aliasing behavior.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad choice of lock object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INDIRECT_GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INDIRECT_GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NON_STATIC_GUARDING_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Static access while holding lock on non-static</string>
        <string>Non-static guarding static access</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>No single lock protects the static data, so the value of the data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Static field is protected by a per-instance lock</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NON_STATIC_GUARDING_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Static access while holding lock on non-static</string>
        <string>Non-static guarding static access</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>No single lock protects the static data, so the value of the data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Static field is protected by a per-instance lock</subcategoryLongDescription>
      <subcategoryShortDescription>Data race condition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DOUBLE_CHECK_LOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>609</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The double checked lock idiom can result in race conditions in a multi-threaded application, and is unnecessary in a single-threaded one.</subcategoryLocalEffect>
      <subcategoryLongDescription>Checking a variable for initialization outside of a synchronized section, then checking again once inside the section</subcategoryLongDescription>
      <subcategoryShortDescription>Double checked locking</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DOUBLE_CHECK_LOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>609</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The double checked lock idiom can result in race conditions in a multi-threaded application, and is unnecessary in a single-threaded one.</subcategoryLocalEffect>
      <subcategoryLongDescription>Checking a variable for initialization outside of a synchronized section, then checking again once inside the section</subcategoryLongDescription>
      <subcategoryShortDescription>Double checked locking</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_CHECK_OF_WAIT_COND</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Data race condition</subcategoryLocalEffect>
      <subcategoryLongDescription>Improperly checking a wait condition before waiting on a mutex can cause a thread to continue before the condition has been satisfied, or to unnecessarily wait for a condition that has already been satisfied.</subcategoryLongDescription>
      <subcategoryShortDescription>Improper check before calling wait()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SINGLETON_RACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The thread unsafe modification can result in unpredictable behavior</subcategoryLocalEffect>
      <subcategoryLongDescription>There is a thread unsafe modification of a field (instance or static) from a method call on a singleton.</subcategoryLongDescription>
      <subcategoryShortDescription>Thread unsafe modification in singleton</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>unlocked_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Unguarded read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>GUARDED_BY_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>unlocked_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <eventSetCaptions>
        <string>Variable accessed without holding a guarding lock</string>
        <string>Examples where access to variable is guarded</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the shared data will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition</subcategoryLongDescription>
      <subcategoryShortDescription>Unguarded write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNSAFE_LAZY_INIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The initialization may occur multiple times, depending on the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using lazy initialization is unsafe in a multithreaded application without a synchronized block</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe lazy initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNSAFE_LAZY_INIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The initialization may occur multiple times, depending on the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using lazy initialization is unsafe in a multithreaded application without a synchronized block</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe lazy initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ATOMICITY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>662</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the update will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ATOMICITY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>662</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the update will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>662</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the update will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>662</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the update will be determined by the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SERVLET_ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>attribute_init_race</subcategory>
      </checkerSubcategoryId>
      <cweCategory>567</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This can resulting in the program displaying unpredictable behavior when the attribute is not present initially.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value when initializing the attribute.</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SERVLET_ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>567</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This can result in the program displaying unpredictable behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SERVLET_ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>violation_on_session_object</subcategory>
      </checkerSubcategoryId>
      <cweCategory>567</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This can result in the program displaying unpredictable behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-atomic update of a concurrently shared value</subcategoryLongDescription>
      <subcategoryShortDescription>Value not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VOLATILE_ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some updates to the volatile variable may be lost, depending on the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A volatile variable is updated in a non-atomic manner</subcategoryLongDescription>
      <subcategoryShortDescription>Volatile not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Concurrent data access violations</category>
      <categoryDescription>Concurrent data access violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VOLATILE_ATOMICITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some updates to the volatile variable may be lost, depending on the interleaving of thread execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A volatile variable is updated in a non-atomic manner</subcategoryLongDescription>
      <subcategoryShortDescription>Volatile not atomically updated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BRANCH_PAST_INITIALIZATION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the variable is used after the target, it will be uninitialized.</subcategoryLocalEffect>
      <subcategoryLongDescription>A goto jumps past the initialization of a variable</subcategoryLongDescription>
      <subcategoryShortDescription>Branch past initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BRANCH_PAST_INITIALIZATION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the variable is used after the target, it will be uninitialized.</subcategoryLocalEffect>
      <subcategoryLongDescription>A goto jumps past the initialization of a variable</subcategoryLongDescription>
      <subcategoryShortDescription>Branch past initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>likely</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>likely</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.</subcategoryLongDescription>
      <subcategoryShortDescription>Failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISMATCHED_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>mismatched_comparison</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Iterators between different containers  will always be different and should not be compared; this likely indicates a logical bug.</subcategoryLocalEffect>
      <subcategoryLongDescription>Iterators that point to different containers are compared</subcategoryLongDescription>
      <subcategoryShortDescription>Invalid iterator comparison</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The indicated dead code may have performed some action; that action will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code can never be reached because of a logical contradiction</subcategoryLongDescription>
      <subcategoryShortDescription>Logically dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The indicated dead code may have performed some action; that action will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code can never be reached because of a logical contradiction</subcategoryLongDescription>
      <subcategoryShortDescription>Logically dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The indicated dead code may have performed some action; that action will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code can never be reached because of a logical contradiction</subcategoryLongDescription>
      <subcategoryShortDescription>Logically dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The indicated dead code may have performed some action; that action will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code can never be reached because of a logical contradiction</subcategoryLongDescription>
      <subcategoryShortDescription>Logically dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_BREAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default; this might indicate a common typo.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_BREAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default; this might indicate a common typo.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_BREAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default; this might indicate a common typo.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_BREAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default; this might indicate a common typo.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Execution falls through to the next case statement or default.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing break statement between cases in switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Missing break in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NESTING_INDENT_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>483</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Code that is meant to be executed conditionally may be executed unconditionally</subcategoryLocalEffect>
      <subcategoryLongDescription>The indentation of this code suggests it is nested when it is not.</subcategoryLongDescription>
      <subcategoryShortDescription>Nesting level does not match indentation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NESTING_INDENT_MISMATCH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>483</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Code that is meant to be executed conditionally may be executed unconditionally.</subcategoryLocalEffect>
      <subcategoryLongDescription>The indentation of this code suggests it is nested when it is not.</subcategoryLongDescription>
      <subcategoryShortDescription>Nesting level does not match indentation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>584</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Exceptions in the try block may be silently ignored; any return, continue, or break in the try block will be ignored.</subcategoryLocalEffect>
      <subcategoryLongDescription>Returning or abnormally terminating a finally block</subcategoryLongDescription>
      <subcategoryShortDescription>Return inside finally block</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>584</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Exceptions in the try block may be silently ignored; any return, continue, or break in the try block will be ignored.</subcategoryLocalEffect>
      <subcategoryLongDescription>Returning or abnormally terminating a finally block</subcategoryLongDescription>
      <subcategoryShortDescription>Return inside finally block</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRAY_SEMICOLON</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>670</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block</subcategoryLongDescription>
      <subcategoryShortDescription>Stray semicolon</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRAY_SEMICOLON</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>670</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block</subcategoryLongDescription>
      <subcategoryShortDescription>Stray semicolon</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRAY_SEMICOLON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block</subcategoryLongDescription>
      <subcategoryShortDescription>Stray semicolon</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRAY_SEMICOLON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misplaced semicolon is a common typo that can cause unexpected changes to the flow of control in the program that results in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block</subcategoryLongDescription>
      <subcategoryShortDescription>Stray semicolon</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNREACHABLE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Actions intended to be performed by the unreachable code will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code block is unreachable because of the syntactic structure of the code</subcategoryLongDescription>
      <subcategoryShortDescription>Structurally dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNREACHABLE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Actions intended to be performed by the unreachable code will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code block is unreachable because of the syntactic structure of the code</subcategoryLongDescription>
      <subcategoryShortDescription>Structurally dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNREACHABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Actions intended to be performed by the unreachable code will never occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code block is unreachable because of the syntactic structure of the code</subcategoryLongDescription>
      <subcategoryShortDescription>Structurally dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Control flow issues</category>
      <categoryDescription>Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unsigned_compare</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An unsigned value can never be negative, so this test will always evaluate the same way.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unsigned value can never be less than 0</subcategoryLongDescription>
      <subcategoryShortDescription>Unsigned compared against 0</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Data race undermines locking</category>
      <categoryDescription>Data race undermines locking</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK_EVASION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The data guarded by this critical section may be read while in an inconsistent state or modified by multiple racing threads.</subcategoryLocalEffect>
      <subcategoryLongDescription>Checking the value of a thread-shared field outside of a locked region to determine if a locked operation involving that thread shared field has completed.</subcategoryLongDescription>
      <subcategoryShortDescription>Check of thread-shared field evades lock acquisition</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_THROW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>390</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The code after the exception creation will execute.</subcategoryLocalEffect>
      <subcategoryLongDescription>An object of exception type is created but neither thrown nor stored anywhere; the developer likely intended to throw the exception.</subcategoryLongDescription>
      <subcategoryShortDescription>Exception not thrown</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>critical_argument</subcategory>
      </checkerSubcategoryId>
      <cweCategory>687</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The negative argument will be interpreted as a very large unsigned value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used as  argument to a function expecting a positive value (for example, size of buffer or allocation)</subcategoryLongDescription>
      <subcategoryShortDescription>Argument cannot be negative</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>short_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Ignoring number of bytes read</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function and indicating the number of bytes read is ignored.</subcategoryLongDescription>
      <subcategoryShortDescription>Ignoring number of bytes read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>short_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Ignoring number of bytes read</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The number of bytes copied into the buffer can be smaller than the requested number and the buffer can potentially be accessed out of range.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function and indicating the number of bytes read is ignored.</subcategoryLongDescription>
      <subcategoryShortDescription>Ignoring number of bytes read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNCAUGHT_EXCEPT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>248</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the exception is ever thrown, the program will crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>A C++ exception is thrown but never caught</subcategoryLongDescription>
      <subcategoryShortDescription>Uncaught exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNCAUGHT_EXCEPT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>248</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the exception is ever thrown, the program will crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>A C++ exception is thrown but never caught</subcategoryLongDescription>
      <subcategoryShortDescription>Uncaught exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
        <string>Examples where return value is checked</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function is not checked for errors before being used</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
        <string>Examples where return value is checked</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function is not checked for errors before being used</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
        <string>Examples where return value from this function is checked</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function is not checked for errors before being used</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
        <string>Examples where return value from this function is checked</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function is not checked for errors before being used</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unchecked_arg</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
        <string>Examples where return value is checked</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, it may be assumed to be a non-error value by the outer function call.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a function is not checked for errors, and passed directly to another function as an argument</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value as arg</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>library_function</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function returns a value that indicates an error condition.  If this is not checked, the error condition may not be handled correctly.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a library function is not checked for errors before being used.  This value may indicate an error condition.</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value from library</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>library_function</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function returns a value that indicates an error condition.  If this is not checked, the error condition may not be handled correctly.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a library function is not checked for errors before being used.  This value may indicate an error condition.</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value from library</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>user_required</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked.</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value from user code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Error handling issues</category>
      <categoryDescription>Error handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CHECKED_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>user_required</subcategory>
      </checkerSubcategoryId>
      <cweCategory>252</cweCategory>
      <eventSetCaptions>
        <string>Unchecked call to function</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function returns an error value, the error value may be mistaken for a normal value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked.</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked return value from user code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Exceptional resource leaks</category>
      <categoryDescription>Exceptional resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>exceptional_path</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource on an exception path (probably error handling)</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak on an exceptional path</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Exceptional resource leaks</category>
      <categoryDescription>Exceptional resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>exceptional_path</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource on an exception path (probably error handling)</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak on an exceptional path</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_storage_in_cookie</subcategory>
      </checkerSubcategoryId>
      <cweCategory>315</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Attackers can read the sensitive data from the cookie with widely available tools.</subcategoryLocalEffect>
      <subcategoryLongDescription>Storing unencrypted sensitive data in a cookie.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a cookie</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_in_cookie</subcategory>
      </checkerSubcategoryId>
      <cweCategory>315</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Attackers can read the sensitive data from the cookie with widely available tools.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reading unencrypted sensitive data from a cookie.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a cookie</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_transmission</subcategory>
      </checkerSubcategoryId>
      <cweCategory>319</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker that can intercept network traffic can recover the sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Transmitting sensitive data in cleartext.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext transmission of sensitive data</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_transmission</subcategory>
      </checkerSubcategoryId>
      <cweCategory>319</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker that can intercept network traffic can recover the sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Receiving sensitive data in cleartext from the network.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext transmission of sensitive data</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CSRF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>database_update</subcategory>
      </checkerSubcategoryId>
      <cweCategory>352</cweCategory>
      <eventSetCaptions>
        <string>Examples of CSRF validation</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Controllers that execute actions or tasks may be accessed to perform activities without the user&apos;s knowledge or authorization. These attacks are difficult to distinguish from legitimate requests.</subcategoryLocalEffect>
      <subcategoryLongDescription>The web application controller modifies data or state and is unprotected from cross-site request forgery.</subcategoryLongDescription>
      <subcategoryShortDescription>Cross-site request forgery</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CSRF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>352</cweCategory>
      <eventSetCaptions>
        <string>Examples of CSRF validation</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Controllers that execute actions or tasks may be accessed to perform activities without the user&apos;s knowledge or authorization. These attacks are difficult to distinguish from legitimate requests.</subcategoryLocalEffect>
      <subcategoryLongDescription>The web application controller modifies data or state and is unprotected from cross-site request forgery.</subcategoryLongDescription>
      <subcategoryShortDescription>Cross-site request forgery</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>XSS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <eventSetCaptions>
        <string>Data flow from tainted source to string construction using insufficiently escaped tainted data and then to output</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>Cross-site scripting</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_storage_in_gui</subcategory>
      </checkerSubcategoryId>
      <cweCategory>317</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Sensitive data within the GUI may be accidentally displayed to unauthorized individuals.</subcategoryLocalEffect>
      <subcategoryLongDescription>Displaying sensitive data in the user interface.</subcategoryLongDescription>
      <subcategoryShortDescription>Display of sensitive data in the user interface</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JAVA_CODE_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can inject new Java bytecode that executes arbitrary code.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is evaluated by an API that produces dynamic Java bytecode.</subcategoryLongDescription>
      <subcategoryShortDescription>Dynamic Java Bytecode injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>EL_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>917</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can force the evaluation of EL statements to execute arbitrary code.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is evaluated by an expression language resolver.</subcategoryLongDescription>
      <subcategoryShortDescription>Expression language injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PATH_MANIPULATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>22</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker may access, modify, or corrupt files that contain sensitive information or are critical to the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is used as part or all of a filesystem path or filename.</subcategoryLongDescription>
      <subcategoryShortDescription>Filesystem path or filename manipulation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JSP_SQL_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is injected into a SQL query, via the JSTL SQL tag (e.g. &amp;lt;sql:query&amp;gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JSP SQL tag Injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LDAP_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>90</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the LDAP query, which may bypass security controls or disclose unauthorized data.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is injected into an LDAP query.</subcategoryLongDescription>
      <subcategoryShortDescription>LDAP injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>311</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can read the sensitive data</subcategoryLocalEffect>
      <subcategoryLongDescription>Sensitive data is stored or transmitted without encrypting it</subcategoryLongDescription>
      <subcategoryShortDescription>Leak of sensitive data</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>311</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can read this data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Retrieving or receiving unencrypted sensitive data.</subcategoryLongDescription>
      <subcategoryShortDescription>Missing encryption of sensitive data</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OGNL_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can force the evaluation of OGNL statements to execute arbitrary code.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is evaluated by an OGNL resolver.</subcategoryLongDescription>
      <subcategoryShortDescription>OGNL injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OS_CMD_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>command_as_array_of_args</subcategory>
      </checkerSubcategoryId>
      <cweCategory>78</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLongDescription>
      <subcategoryShortDescription>OS Command Injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OS_CMD_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>command_as_one_string</subcategory>
      </checkerSubcategoryId>
      <cweCategory>78</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLongDescription>
      <subcategoryShortDescription>OS Command Injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OS_CMD_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>78</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can change the intent of an operating system command. This change may result in the disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.</subcategoryLongDescription>
      <subcategoryShortDescription>OS Command Injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from tainted source to query construction using tainted data and then to query execution</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>sink</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from tainted source to query construction using tainted data and then to query execution</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A user can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SCRIPT_CODE_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker may be able to alter the behavior of the program or run malicious code.</subcategoryLocalEffect>
      <subcategoryLongDescription>Script code interpreted or executed on the server is constructed from user-controllable data.</subcategoryLongDescription>
      <subcategoryShortDescription>Script code injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNSAFE_DESERIALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>502</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker can instantiate arbitrary classes, possibly resulting in a denial of service or potentially unintended code execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is deserialized.</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe deserialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINT_ASSERT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The computed taint is overridden.  Unsafe uses of this value will not be reported as further security defects.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user assertion is present that states a value is not tainted.  However, the tool taint computation indicates that this value is tainted.  The validity of the assertion should be reviewed and removed if incorrect. If the assertion is valid, review how tainted data is inserted into the value and remove the taint source as appropriate.</subcategoryLongDescription>
      <subcategoryShortDescription>Untainted assertion violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_PASSWORD_HASH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>weak_hash_no_salt</subcategory>
      </checkerSubcategoryId>
      <cweCategory>759</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker may recover a large number of passwords hashed this way with modest computational effort.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hashing a password using a scheme that is not computationally intensive, and without using any salt as part of the input.</subcategoryLongDescription>
      <subcategoryShortDescription>Very weak password hashing</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_PASSWORD_HASH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>916</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker may recover passwords with feasible amounts of computational effort.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hashing a password using a scheme that is not computationally intensive, and/or without using a random and unique salt as part of the input.</subcategoryLongDescription>
      <subcategoryShortDescription>Weak password hashing</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>High impact security</category>
      <categoryDescription>High impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_PASSWORD_HASH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>weak_hash_weak_salt</subcategory>
      </checkerSubcategoryId>
      <cweCategory>760</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>An attacker may recover a large number of passwords hashed this way with modest computational effort or pre-computed values.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hashing a password using a scheme that is not computationally intensive, and without using a random and unique salt as part of the input.</subcategoryLongDescription>
      <subcategoryShortDescription>Weak password hashing</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_null</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The address of an array is never NULL, so the comparison will always evaluate the same way.</subcategoryLocalEffect>
      <subcategoryLongDescription>Array compared against NULL pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Array compared against 0</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ASSIGN_WHERE_COMPARE_MEANT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable will be assigned the value that it was intended to compare against, causing the result to always be true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An assignment (=) occurs where compare (==) is probably intended</subcategoryLongDescription>
      <subcategoryShortDescription>Assign instead of compare</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ASSIGN_WHERE_COMPARE_MEANT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable will be assigned the value that it was intended to compare against, causing the result to always be true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An assignment (=) occurs where compare (==) is probably intended</subcategoryLongDescription>
      <subcategoryShortDescription>Assign instead of compare</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ASSIGNMENT_IN_CONDITIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable will be assigned the value that it was intended to compare against, causing the result to always be true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An assignment (=) occurs where compare (==) is probably intended</subcategoryLongDescription>
      <subcategoryShortDescription>Assign instead of compare</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.ASSIGNMENT_IN_CONDITIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable will be assigned the value that it was intended to compare against, causing the result to always be true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An assignment (=) occurs where compare (==) is probably intended</subcategoryLongDescription>
      <subcategoryShortDescription>Assign instead of compare</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COPY_PASTE_ERROR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The copied code will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>A copied piece of code is inconsistent with the original</subcategoryLongDescription>
      <subcategoryShortDescription>Copy-paste error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COPY_PASTE_ERROR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The copied code will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>A copied piece of code is inconsistent with the original</subcategoryLongDescription>
      <subcategoryShortDescription>Copy-paste error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COPY_PASTE_ERROR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The copied code will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>A copied piece of code is inconsistent with the original</subcategoryLongDescription>
      <subcategoryShortDescription>Copy-paste error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COPY_PASTE_ERROR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The copied code will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>A copied piece of code is inconsistent with the original</subcategoryLongDescription>
      <subcategoryShortDescription>Copy-paste error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_divisor</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression which may be zero is used as a divisor in floating-point arithmetic.</subcategoryLongDescription>
      <subcategoryShortDescription>Division or modulo by float zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>float_divisor</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will return a NaN value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression which may be zero is used as a divisor in floating-point arithmetic.</subcategoryLongDescription>
      <subcategoryShortDescription>Division or modulo by float zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>type</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <eventSetCaptions>
        <string>Inconsistent equality comparison</string>
        <string>Examples where equality is checked in a different manner</string>
        <string>Implementation of equality method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The equality test will always return false.</subcategoryLocalEffect>
      <subcategoryLongDescription>Structural equality is never true for objects of different types</subcategoryLongDescription>
      <subcategoryShortDescription>Equality test on different types</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>EVALUATION_ORDER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>758</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>With different compiler flags or different compilers or platforms, this code may behave differently.</subcategoryLocalEffect>
      <subcategoryLongDescription>Statement contains multiple side-effects on the same value with an undefined evaluation order</subcategoryLongDescription>
      <subcategoryShortDescription>Evaluation order violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>EVALUATION_ORDER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>758</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>With different compiler flags or different compilers or platforms, this code may behave differently.</subcategoryLocalEffect>
      <subcategoryLongDescription>Statement contains multiple side-effects on the same value with an undefined evaluation order</subcategoryLongDescription>
      <subcategoryShortDescription>Evaluation order violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression with no side-effect or unintended effect indicates a possible logic flaw</subcategoryLongDescription>
      <subcategoryShortDescription>Expression with no effect</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression with no side-effect or unintended effect indicates a possible logic flaw</subcategoryLongDescription>
      <subcategoryShortDescription>Expression with no effect</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.EXPR_HAS_NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression with no side-effect or unintended effect indicates a possible logic flaw</subcategoryLongDescription>
      <subcategoryShortDescription>Expression with no effect</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.EXPR_HAS_NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>An expression with no side-effect or unintended effect indicates a possible logic flaw</subcategoryLongDescription>
      <subcategoryShortDescription>Expression with no effect</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>extra_sizeof</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The extraneous sizeof may cause an incorrect expression. Pointer arithmetic increments or decrements the pointer by multiples of the number of bytes in the target of the pointer.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator is not required in the expression</subcategoryLongDescription>
      <subcategoryShortDescription>Extra sizeof expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>628</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function is not called.  This may indicate missing function call arguments.</subcategoryLocalEffect>
      <subcategoryLongDescription>Address of function compared to zero</subcategoryLongDescription>
      <subcategoryShortDescription>Function address comparison</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>628</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The function is not called.  This may indicate missing function call arguments.</subcategoryLocalEffect>
      <subcategoryLongDescription>Address of function compared to zero</subcategoryLongDescription>
      <subcategoryShortDescription>Function address comparison</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSERT_SIDE_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>side_effect_is_function</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the assertion is turned off, the function call could be skipped and any side-effects lost.</subcategoryLocalEffect>
      <subcategoryLongDescription>Assertion contains a function call which may have a side effect</subcategoryLongDescription>
      <subcategoryShortDescription>Function in assertion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>if</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>ternary</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>if</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>ternary</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition is redundant</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>chain</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The conditions could be combined</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches of an else-if chain</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>chain</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The conditions could be combined</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed regardless of the condition</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different branches of an else-if chain</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>case</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The case is redundant or can be combined</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed for two cases in the same switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different cases</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>IDENTICAL_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>case</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The case is redundant or can be combined</subcategoryLocalEffect>
      <subcategoryLongDescription>The same code is executed for two cases in the same switch statement</subcategoryLongDescription>
      <subcategoryShortDescription>Identical code for different cases</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_effect_deref</subcategory>
      </checkerSubcategoryId>
      <cweCategory>465</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The pointer may end up pointing outside the current memory buffer, while the value pointed-to will be unchanged.</subcategoryLocalEffect>
      <subcategoryLongDescription>Increment (or decrement) of pointer value, not the value pointed-to</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect pointer increment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_SIZEOF</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>467</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is usually caused by a typo or a misunderstanding of the sizeof operator, which should be applied to the actual type whose size is desired. An incorrect sizeof value is used in further computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator was applied to an unintended variable or expression, such as a pointer variable instead of its target</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect sizeof expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_SIZEOF</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>467</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is usually caused by a typo or a misunderstanding of the sizeof operator, which should be applied to the actual type whose size is desired. An incorrect sizeof value is used in further computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator was applied to an unintended variable or expression, such as a pointer variable instead of its target</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect sizeof expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>null_misuse</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression will not have its intended effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparing a pointer against NULL using an operator such as &lt; or &gt;=.</subcategoryLongDescription>
      <subcategoryShortDescription>Inequality comparison against NULL</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MIXED_ENUMS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>inferred</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An enumeration value for one enum type may be misinterpreted as a different, unrelated enumeration value in a different type.  An enumeration value in one type may have no meaningful interpretation in another enum type, leading to a range of logic errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer expression which was inferred to have an enum type is mixed with a different enum type</subcategoryLongDescription>
      <subcategoryShortDescription>Inferred misuse of enum</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_COMMA</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An unexpected concatenated string or overrun.</subcategoryLocalEffect>
      <subcategoryLongDescription>A comma is suspiciously missing between lines in a string array initialization.</subcategoryLongDescription>
      <subcategoryShortDescription>Missing comma in a string array initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>missing_parentheses</subcategory>
      </checkerSubcategoryId>
      <cweCategory>783</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing parentheses caused unintended operator precedence</subcategoryLongDescription>
      <subcategoryShortDescription>Missing parentheses</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>missing_parentheses</subcategory>
      </checkerSubcategoryId>
      <cweCategory>783</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is a result of a common misunderstanding of operator precedence. The incorrect expression can result in logical errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing parentheses caused unintended operator precedence</subcategoryLongDescription>
      <subcategoryShortDescription>Missing parentheses</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ENUM_AS_BOOLEAN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Multiple non-zero-valued enumeration values may inadvertently be treated as equivalent due to all being interpreted as true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An enum-typed expression is used in a Boolean conditional context.  The enum type does not appear to have a distinguished false (zero) value</subcategoryLongDescription>
      <subcategoryShortDescription>Misuse of enum</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ENUM_AS_BOOLEAN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Multiple non-zero-valued enumeration values may inadvertently be treated as equivalent due to all being interpreted as true.</subcategoryLocalEffect>
      <subcategoryLongDescription>An enum-typed expression is used in a Boolean conditional context.  The enum type does not appear to have a distinguished false (zero) value</subcategoryLongDescription>
      <subcategoryShortDescription>Misuse of enum</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>extra_comma</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The left hand side of the comma will be evaluated and then the value discarded.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comma operator has a left sub-expression with no side-effects</subcategoryLongDescription>
      <subcategoryShortDescription>Misused comma operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misuse of the sizeof operator is caused by invoking sizeof on a pointer instead of its target, operator precedence issues, or incorrect pointer arithmetic. The result is an incorrectly computed expression that may cause unexpected program behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator is used erroneously in an expression or is invoked on the wrong argument</subcategoryLongDescription>
      <subcategoryShortDescription>Misused sizeof</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The misuse of the sizeof operator is caused by invoking sizeof on a pointer instead of its target, operator precedence issues, or incorrect pointer arithmetic. The result is an incorrectly computed expression that may cause unexpected program behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator is used erroneously in an expression or is invoked on the wrong argument</subcategoryLongDescription>
      <subcategoryShortDescription>Misused sizeof</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MIXED_ENUMS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An enumeration value for one enum type may be misinterpreted as a different, unrelated enumeration value in a different type.  An enumeration value in one type may have no meaningful interpretation in another enum type, leading to a range of logic errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>An enum-typed expression is mixed with a different enum type</subcategoryLongDescription>
      <subcategoryShortDescription>Mixing enum types</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MIXED_ENUMS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An enumeration value for one enum type may be misinterpreted as a different, unrelated enumeration value in a different type.  An enumeration value in one type may have no meaningful interpretation in another enum type, leading to a range of logic errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>An enum-typed expression is mixed with a different enum type</subcategoryLongDescription>
      <subcategoryShortDescription>Mixing enum types</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_COMPARE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>string_lit_comparison</subcategory>
      </checkerSubcategoryId>
      <cweCategory>597</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The comparison evaluates to an incorrect value, because the strings&apos; contents are ignored.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparing against the address of a string literal.</subcategoryLongDescription>
      <subcategoryShortDescription>Pointer comparison with string literal</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointless_string_compare</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is often the result of a copy and paste error.  The comparison will always return zero.</subcategoryLocalEffect>
      <subcategoryLongDescription>A string is compared against itself with strcmp or strncmp.</subcategoryLongDescription>
      <subcategoryShortDescription>Pointless string comparison</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINTENDED_INTEGER_DIVISION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation.</subcategoryLocalEffect>
      <subcategoryLongDescription>When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended.</subcategoryLongDescription>
      <subcategoryShortDescription>Result is not floating-point</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINTENDED_INTEGER_DIVISION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The result of the division is truncated to an integer (a whole number), which is usually a loss of precision in a calculation.</subcategoryLocalEffect>
      <subcategoryLongDescription>When dividing two values of integer types, integer division is used, which ignores any remainder. When such a result is used in a context expecting a floating-point number, it is likely that floating-point division was intended.</subcategoryLongDescription>
      <subcategoryShortDescription>Result is not floating-point</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>same_on_both_sides</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The same expression occurs on both sides of an operator.</subcategoryLongDescription>
      <subcategoryShortDescription>Same on both sides</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>same_on_both_sides</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is often the result of a copy and paste error.  It may result in the operator always evaluating to the same result.</subcategoryLocalEffect>
      <subcategoryLongDescription>The same expression occurs on both sides of an operator.</subcategoryLongDescription>
      <subcategoryShortDescription>Same on both sides</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>self_assign</subcategory>
      </checkerSubcategoryId>
      <cweCategory>665</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable&apos;s value will not change, so the assignment has no effect.</subcategoryLocalEffect>
      <subcategoryLongDescription>Assignment of a variable or expression to itself has no effect</subcategoryLongDescription>
      <subcategoryShortDescription>Self assignment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSERT_SIDE_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the assertion is turned off, the side-effect may be lost.</subcategoryLocalEffect>
      <subcategoryLongDescription>Assertion contains an operation with a side effect</subcategoryLongDescription>
      <subcategoryShortDescription>Side effect in assertion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSERT_SIDE_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the assertion is turned off, the side-effect may be lost.</subcategoryLocalEffect>
      <subcategoryLongDescription>Assertion contains an operation with a side effect</subcategoryLongDescription>
      <subcategoryShortDescription>Side effect in assertion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_SIZEOF</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>sizeof_ptr_expr</subcategory>
      </checkerSubcategoryId>
      <cweCategory>467</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>This is a suspicious usage that may be due to a typo or a misunderstanding of the sizeof operator, which should be applied to the target of the pointer. However, sometimes this usage is intentional.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator was applied to a pointer expression, which may not be intended</subcategoryLongDescription>
      <subcategoryShortDescription>Sizeof pointer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bool_switch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>482</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The switch condition will evaluate to either 0 or 1, which is more easily written with an if statement.</subcategoryLocalEffect>
      <subcategoryLongDescription>A boolean test within a switch condition is likely an intended assignment</subcategoryLongDescription>
      <subcategoryShortDescription>Switch test assignment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_effect_test</subcategory>
      </checkerSubcategoryId>
      <cweCategory>482</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The test will be executed and then discarded; no assignment will be performed.</subcategoryLocalEffect>
      <subcategoryLongDescription>A test that is an isolated statement with no effect is likely an intended assignment</subcategoryLongDescription>
      <subcategoryShortDescription>Test should be assignment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>171</cweCategory>
      <eventSetCaptions>
        <string>Inconsistent equality comparison</string>
        <string>Examples where equality is checked in a different manner</string>
        <string>Implementation of equality method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Objects may be considered different when they are the same or the equality check may be inefficient.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using wrong equality operation (equals method vs. &quot;==&quot;) for this type</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong kind of equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>171</cweCategory>
      <eventSetCaptions>
        <string>Inconsistent equality comparison</string>
        <string>Examples where equality is checked in a different manner</string>
        <string>Implementation of equality method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Objects may be considered different when they are the same or the equality check may be inefficient.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using wrong equality operation (equals method vs. &quot;==&quot;) for this type</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong kind of equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>referential</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <eventSetCaptions>
        <string>Referential equality comparison</string>
        <string>Examples where value equality comparison is used</string>
        <string>Implementation of equality method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Referential equality may consider objects different when value equality considers them the same.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using referential equality when value equality is the norm for this type</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong kind of equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>structural</subcategory>
      </checkerSubcategoryId>
      <cweCategory>171</cweCategory>
      <eventSetCaptions>
        <string>Inconsistent equality comparison</string>
        <string>Examples where equality is checked in a different manner</string>
        <string>Implementation of equality method</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If objects of this type are carefully constructed, using &quot;==&quot; may be correct and more efficient.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using equals method when &quot;==&quot; is the norm for this type</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong kind of equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>wrong_size_value</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The wrong size value is used as an argument to a function. This may cause unexpected program behaviors.</subcategoryLocalEffect>
      <subcategoryLongDescription>The wrong size value is passed to a function</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong size argument</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Incorrect expression</category>
      <categoryDescription>Incorrect expression</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>wrong_sizeof</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The wrong sizeof value is used in an expression or as argument to a function. The result is an incorrect value that may cause unexpected program behaviors.</subcategoryLocalEffect>
      <subcategoryLongDescription>The sizeof operator is invoked on the wrong argument</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong sizeof argument</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>format_string</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker could craft a format string containing unexpected formatting directives and force a buffer overflow, which may be used to take control of the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized value from an untrusted source used to construct a format string</subcategoryLongDescription>
      <subcategoryShortDescription>Format string vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The overflowed value will likely be too small, too large, or unexpectedly negative, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the overflowed value used in a sensitive operation</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The overflowed value will likely be too small, too large, or unexpectedly negative, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the overflowed value used in a sensitive operation</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>critical_argument</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The argument will be too small or even negative, likely resulting in unexpected behavior (for example, under-allocation in a memory allocation function).</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the overflowed value used as an argument to a function</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflowed argument</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>return_value_error</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The return value will be too small or even negative, likely resulting in unexpected behavior in a caller that uses the return value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the overflowed value used as the return value of the function</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The array index could be controlled by an attacker, leading to reads outside the bounds of the array.</subcategoryLocalEffect>
      <subcategoryLongDescription>Read from array at index computed using an unscrutinized value from an untrusted source</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted array index read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The array index could be controlled by an attacker, leading to writes outside the bounds of the array.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to array at index computed using an unscrutinized value from an untrusted source</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted array index write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>loop_bound</subcategory>
      </checkerSubcategoryId>
      <cweCategory>606</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker could control the number of times the loop iterates.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinzed value from an untrusted source used as a loop upper bound</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted loop bound</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The pointer value could be controlled by an attacker, leading to reads from arbitrary memory locations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads target of a pointer computed using an unscrutinized value from an untrusted source</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted pointer read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The pointer value could be controlled by an attacker, leading to writes to arbitrary memory.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of pointer computed using an unscrutinized value from an untrusted source</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted pointer write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>critical_argument</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The argument could be controlled by an attacker, who could invoke the function with arbitrary values (for example, a very high or negative buffer size).</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized value from an untrusted source used as argument to a function (for example, a buffer size)</subcategoryLongDescription>
      <subcategoryShortDescription>Untrusted value as argument</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The unscrutinized value may be incorrectly assumed to be within a certain range by later operations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized value from an untrusted source used in a trusted context</subcategoryLongDescription>
      <subcategoryShortDescription>Use of untrusted scalar value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The string may be incorrectly assumed to not contain certain metacharacters or element names in later operations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized string from an untrusted source used in a trusted context</subcategoryLongDescription>
      <subcategoryShortDescription>Use of untrusted string value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The string may be incorrectly assumed to not contain certain metacharacters or element names in later operations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized string from an untrusted source used in a trusted context</subcategoryLongDescription>
      <subcategoryShortDescription>Use of untrusted string value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Insecure data handling</category>
      <categoryDescription>Insecure data handling</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_SCALAR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <eventSetCaptions>
        <string>Tainted data flows to untainted sink</string>
        <string>Statements that contribute to flow of data from source to sink</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The unscrutinized value may be incorrectly assumed to be within a certain range by later operations.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unscrutinized value from an untrusted source used in a trusted context</subcategoryLongDescription>
      <subcategoryShortDescription>Use of untrusted value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_SHIFT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Bad bit shift operation.</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The operaton may have an undefined behavior or yield to an unexpected result.</subcategoryLocalEffect>
      <subcategoryLongDescription>A bit shift operation has a shift amount which is too large or has a negative value.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad bit shift operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_SHIFT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Bad bit shift operation.</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The operaton may yield to an unexpected result.</subcategoryLocalEffect>
      <subcategoryLongDescription>A bit shift operation has a shift amount which is too large or has a negative value.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad bit shift operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bit_and_with_zero</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value is always zero; construct may indicate an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>Bitwise-and (&apos;&amp;amp;&apos;) operation applied to zero always produces zero</subcategoryLongDescription>
      <subcategoryShortDescription>Bitwise-and with zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>bit_and_with_zero</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value is always zero; construct may indicate an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>Bitwise-and (&apos;&amp;amp;&apos;) operation applied to zero always produces zero</subcategoryLongDescription>
      <subcategoryShortDescription>Bitwise-and with zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Constant expression result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Constant expression result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Constant expression result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Constant expression result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program will have undefined behavior, likely a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>Divide by zero</subcategoryLongDescription>
      <subcategoryShortDescription>Divide by zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program will have undefined behavior, likely a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>Divide by zero</subcategoryLongDescription>
      <subcategoryShortDescription>Divide by zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program will have undefined behavior, likely a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>Division or modulo by zero results in undefined behavior.</subcategoryLongDescription>
      <subcategoryShortDescription>Division or modulo by zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program will have undefined behavior, likely a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>Division or modulo by zero results in undefined behavior.</subcategoryLongDescription>
      <subcategoryShortDescription>Division or modulo by zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DIVIDE_BY_ZERO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>369</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The program will raise an exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Division or modulo by zero results in undefined behavior.</subcategoryLongDescription>
      <subcategoryShortDescription>Division or modulo by zero</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unsigned_enums</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>No enumeration values are negative, so this test will always evaluate the same way.</subcategoryLocalEffect>
      <subcategoryLongDescription>An enumeration value is usually not less than 0</subcategoryLongDescription>
      <subcategoryShortDescription>Enum compared against 0</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>extra_high_bits</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>In an operation, the high-order bits of wider operand do not affect the narrower operand</subcategoryLongDescription>
      <subcategoryShortDescription>Extra high-order bits</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>extra_high_bits</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An operation that disregards the high-order bits may lead to incorrect value to be used in a logical computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>In an operation, the high-order bits of wider operand do not affect the narrower operand</subcategoryLongDescription>
      <subcategoryShortDescription>Extra high-order bits</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_to_float_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting complex expression with integer type to floating type (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_complex_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting complex expression from float to double (MISRA 2004 Rule 10.2)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit floating conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_narrowing_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting a double expression to narrower float type may lose precision (MISRA 2004 Rule 10.2)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit floating conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_non_constant_arg_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicit conversion from float to double in a function argument (MISRA 2004 Rule 10.2)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit floating conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_non_constant_rtn_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicit conversion from float to double in a return expression (MISRA 2004 Rule 10.2)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit floating conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_to_integer_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicit conversion from float to 16-bit integer type (MISRA 2004 Rule 10.2)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit floating conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_complex_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting the type of a complex expression (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit integer conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_narrowing_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>197</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The truncated value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting an integer expression to a narrower integer type may truncate value (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit integer conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_non_constant_arg_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting the integer type of a non-constant function argument expression (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit integer conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_non_constant_rtn_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting the integer type of a non-constant return expression (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit integer conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_signedness_changing_conversion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The converted value may be different than the original value, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Implicitly converting the signedness of an integer value (MISRA 2004 Rule 10.1)</subcategoryLongDescription>
      <subcategoryShortDescription>Implicit integer conversion</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>394</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The negative value may be unexpected by later operations, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value returned from function is not being checked before being used improperly</subcategoryLongDescription>
      <subcategoryShortDescription>Improper use of negative value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>394</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The negative value may be unexpected by later operations, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value can be returned from function is not being checked before being used improperly</subcategoryLongDescription>
      <subcategoryShortDescription>Improper use of negative value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>394</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The negative value may be interpreted as an unsigned value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used incorrectly where positive value is expected</subcategoryLongDescription>
      <subcategoryShortDescription>Improper use of negative value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>394</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The negative value may be interpreted as an unsigned value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used incorrectly where positive value is expected</subcategoryLongDescription>
      <subcategoryShortDescription>Improper use of negative value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INCOMPATIBLE_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_vs_integral</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A pointer is cast between floating-point and integral types; this only makes sense when performing bitwise operations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Cast between floating-point and integral pointers</subcategoryLongDescription>
      <subcategoryShortDescription>Incompatible cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INCOMPATIBLE_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A pointer is cast to a different type, but the underlying object is not cast.</subcategoryLocalEffect>
      <subcategoryLongDescription>Cast between incompatible pointer types</subcategoryLongDescription>
      <subcategoryShortDescription>Incompatible pointer cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INCOMPATIBLE_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A pointer is cast to a different type, but the underlying object is not cast.</subcategoryLocalEffect>
      <subcategoryLongDescription>Cast between incompatible pointer types</subcategoryLongDescription>
      <subcategoryShortDescription>Incompatible pointer cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INTEGER_TOO_LARGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.INTEGER_TOO_LARGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.SHIFT_COUNT_TOO_LARGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.SHIFT_COUNT_TOO_LARGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The value of the constant expression may be an unexpected very small or negative value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs at compile time when parsing this expression</subcategoryLongDescription>
      <subcategoryShortDescription>Integer overflow warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>logical_vs_bitwise</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>Logical operator used in place of bitwise operator or vice versa</subcategoryLongDescription>
      <subcategoryShortDescription>Logical vs. bitwise operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>logical_vs_bitwise</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; inadvertent use of the wrong operator is a likely logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>Logical operator used in place of bitwise operator or vice versa</subcategoryLongDescription>
      <subcategoryShortDescription>Logical vs. bitwise operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BAD_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cast from an integer to a pointer of narrower precision</subcategoryLongDescription>
      <subcategoryShortDescription>Lossy integer to pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.BAD_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cast from an integer to a pointer of narrower precision</subcategoryLongDescription>
      <subcategoryShortDescription>Lossy integer to pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.CONVERSION_TO_POINTER_LOSES_BITS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cast from an integer to a pointer of narrower precision</subcategoryLongDescription>
      <subcategoryShortDescription>Lossy integer to pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.CONVERSION_TO_POINTER_LOSES_BITS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>704</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Some bits of the integer value will be lost in the conversion, possibly producing a corrupt pointer value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cast from an integer to a pointer of narrower precision</subcategoryLongDescription>
      <subcategoryShortDescription>Lossy integer to pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unsigned_compare_macros</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An unsigned value can never be negative, so this test will always evaluate the same way.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unsigned value can never be less than 0</subcategoryLongDescription>
      <subcategoryShortDescription>Macro compares unsigned to 0</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bitwise_op_bad_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Left shift of an unsigned short results in a signed int value; subsequent operations on the signed int may result in unexpected sign extension.</subcategoryLocalEffect>
      <subcategoryLongDescription>Bitwise operator &lt;&lt; applies to operand with underlying type unsigned short is cast to int (MISRA 2004 Rule 10.5)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bitwise_op_no_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Left shift of an unsigned short results in a signed int value; subsequent operations on the signed int may result in unexpected sign extension.</subcategoryLocalEffect>
      <subcategoryLongDescription>Bitwise operator &lt;&lt; applies to operand with underlying type unsigned short is not being immediately cast to that type (MISRA 2004 Rule 10.5)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_to_integer_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The complex expression is evaluated using 64-bit floating values and operators, not 16-bit int values and operators.</subcategoryLocalEffect>
      <subcategoryLongDescription>Complex expression cast from 64-bit float to 16-bit int (MISRA 2004 Rule 10.4)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>float_widening_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The complex expression is evaluated using 32-bit values and operators, not 64-bit values and operators.</subcategoryLocalEffect>
      <subcategoryLongDescription>Complex expression cast from 32-bit float to 64-bit float (MISRA 2004 Rule 10.4)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Cast operations, implicit conversions, or lack of proper casts may result in truncated or unexpected values.</subcategoryLocalEffect>
      <subcategoryLongDescription>Cast operation violates MISRA standard (MISRA 2004 Rules 10.1 - 10.5)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_signedness_changing_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>195</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The complex expression is evaluated using signed values and operators, not unsigned values and operators.</subcategoryLocalEffect>
      <subcategoryLongDescription>Complex expression cast from 32-bit int to 32-bit unsigned int (MISRA 2004 Rule 10.3)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_to_float_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The complex expression is evaluated using int values and operators, not 64-bit floating values and operators.</subcategoryLocalEffect>
      <subcategoryLongDescription>Complex expression cast from int to 64-bit float (MISRA 2004 Rule 10.3)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>integer_widening_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The complex expression is evaluated using 16-bit values and operators, not 32-bit values and operators.</subcategoryLocalEffect>
      <subcategoryLongDescription>Complex expression with underlying type 16-bit unsigned value cast to wider type 32-bit unsigned value (MISRA 2004 Rule 10.3)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISRA_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>681</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Cast operations, implicit conversions, or lack of proper casts may result in truncated or unexpected values.</subcategoryLocalEffect>
      <subcategoryLongDescription>Cast operation violates MISRA standard (MISRA 2004 Rules 10.1 - 10.5)</subcategoryLongDescription>
      <subcategoryShortDescription>Misra violating cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>result_independent_of_operands</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Operands don&apos;t affect result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>result_independent_of_operands</subcategory>
      </checkerSubcategoryId>
      <cweCategory>569</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value does not depend on the operands; often, this represents an inadvertent logic error.</subcategoryLocalEffect>
      <subcategoryLongDescription>An operation with non-constant operands that computes a result with constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Operands don&apos;t affect result</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>const_overflow</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The overflowed value due to arithmetic on constants is too small or unexpectedly negative, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Integer overflow  occurs in arithmetic on constant operands</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed constant</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INCOMPATIBLE_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>endianness</subcategory>
      </checkerSubcategoryId>
      <cweCategory>188</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The pointed-to memory is accessed with a smaller type, causing a subsequent read to yield an unexpected result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reliance on integer endianness</subcategoryLongDescription>
      <subcategoryShortDescription>Reliance on integer endianness</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unnecessary_op_assign</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using a bitwise assignment operator to assign a constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Suspicious &amp;= or |</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>unnecessary_op_assign</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A simple assignment would have the same effect; may indicate a logic error, or only be a minor inefficiency.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using a bitwise assignment operator to assign a constant value</subcategoryLongDescription>
      <subcategoryShortDescription>Suspicious &amp;= or |</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIGN_EXTENSION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>194</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The sign-extended value may be interpreted as a very large number.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value may be sign extended unintentionally</subcategoryLongDescription>
      <subcategoryShortDescription>Unintended sign extension</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIGN_EXTENSION</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>194</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The sign-extended value may be interpreted as a very large number.</subcategoryLocalEffect>
      <subcategoryLongDescription>Value may be sign extended unintentionally</subcategoryLongDescription>
      <subcategoryShortDescription>Unintended sign extension</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERFLOW_BEFORE_WIDEN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the result converted to a wider integer type</subcategoryLongDescription>
      <subcategoryShortDescription>Unintentional integer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERFLOW_BEFORE_WIDEN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the result converted to a wider integer type</subcategoryLongDescription>
      <subcategoryShortDescription>Unintentional integer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERFLOW_BEFORE_WIDEN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>190</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The expression&apos;s value may not be what the programmer intended, because the expression is evaluated using a narrow (i.e. few bits) integer type.</subcategoryLocalEffect>
      <subcategoryLongDescription>An integer overflow occurs, with the result converted to a wider integer type</subcategoryLongDescription>
      <subcategoryShortDescription>Unintentional integer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.UNSIGNED_COMPARE_WITH_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition will not ensure a constraint on the value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unsigned value, which can never be less than 0, is compared with a negative value</subcategoryLongDescription>
      <subcategoryShortDescription>Unsigned compared with neg</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.UNSIGNED_COMPARE_WITH_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The condition will not ensure a constraint on the value.</subcategoryLocalEffect>
      <subcategoryLongDescription>An unsigned value, which can never be less than 0, is compared with a negative value</subcategoryLongDescription>
      <subcategoryShortDescription>Unsigned compared with neg</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>operator_confusion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift.</subcategoryLocalEffect>
      <subcategoryLongDescription>Wrong operator used in expression</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong operator used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Integer handling issues</category>
      <categoryDescription>Integer handling issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONSTANT_EXPRESSION_RESULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>operator_confusion</subcategory>
      </checkerSubcategoryId>
      <cweCategory>480</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Inadvertent use of the wrong operator results in a likely logic error. Common interchanges include bit-or and bit-and, left-shift and right-shift.</subcategoryLocalEffect>
      <subcategoryLongDescription>Wrong operator used in expression</subcategoryLongDescription>
      <subcategoryShortDescription>Wrong operator used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.DANGEROUS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>676</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Program invariants may be violated in unexpected and irrecoverable ways.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling an inherently dangerous function for which better alternatives exist.</subcategoryLongDescription>
      <subcategoryShortDescription>Call to an inherently dangerous function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.DEADLOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Program may deadlock: two or more threads will be blocked on each other and unable to progress.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using a deprecated API that can easily lead to deadlock despite the existence of better alternatives.</subcategoryLongDescription>
      <subcategoryShortDescription>Call to deadlock-prone function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>dns</subcategory>
      </checkerSubcategoryId>
      <cweCategory>350</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker that compromises a DNS server or pollutes its cache can bypass this check.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using the results of a reverse DNS lookup as a control.</subcategoryLongDescription>
      <subcategoryShortDescription>Check against reverse DNS lookup</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>290</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker can send data that masquerades as the data being checked, bypassing the check.</subcategoryLocalEffect>
      <subcategoryLongDescription>Performing a security check against unreliable and spoofable data</subcategoryLongDescription>
      <subcategoryShortDescription>Check against spoofable data</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_in_classpath</subcategory>
      </checkerSubcategoryId>
      <cweCategory>318</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Attackers with access to the binaries in the classpath can read the sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reading sensitive data from a resource in the classpath.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a JAR file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_storage_in_file</subcategory>
      </checkerSubcategoryId>
      <cweCategory>313</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Storing unencrypted sensitive data to a file.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_in_file</subcategory>
      </checkerSubcategoryId>
      <cweCategory>313</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker with access to the file system or physical or administrative access to the storage media can read this sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reading unencrypted sensitive data from a file.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>http_referer</subcategory>
      </checkerSubcategoryId>
      <cweCategory>293</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker may bypass this check by using an open redirect (CWE 601) to come from a trusted domain.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using the HTTP &apos;referer&apos; header value as a security control.</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison of HTTP referer to a constant</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>ip_address</subcategory>
      </checkerSubcategoryId>
      <cweCategory>291</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Network data that masquerades as being from the trusted IP address may bypass this check.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using an IP address as a security check.</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison of IP address to a constant</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>os_login</subcategory>
      </checkerSubcategoryId>
      <cweCategory>290</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker running this program on a machine they administer can bypass this check by creating a suitably named account</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparing a user&apos;s operating system login name to a constant.</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison of OS login to a constant</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_GUARD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>principal_name</subcategory>
      </checkerSubcategoryId>
      <cweCategory>290</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker can bypass this check by creating a suitably named account.</subcategoryLocalEffect>
      <subcategoryLongDescription>Comparing the name of a principal to a constant.</subcategoryLongDescription>
      <subcategoryShortDescription>Comparison of principal name to a constant</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>XSS_UNKNOWN_SOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <eventSetCaptions>
        <string>Data flow from origin to output</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If users can control this data, they can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-constant data of unknown origin is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>Cross-site scripting with unknown source</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.DWR_DEBUG_MODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>863</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>DWR debug mode exposes internal information through /dwr/index.html page.</subcategoryLocalEffect>
      <subcategoryLongDescription>DWR debug mode is enabled in the configuration file.</subcategoryLongDescription>
      <subcategoryShortDescription>DWR debug mode enabled</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.DUPLICATE_SERVLET_DEFINITION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>4</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The container will only deploy the last servlet with this name.</subcategoryLocalEffect>
      <subcategoryLongDescription>A servlet-name is used twice for different servlets, one of them will not be used by the container.</subcategoryLongDescription>
      <subcategoryShortDescription>Duplicate servlet name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.DYNAMIC_DATA_HTML_COMMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>615</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A user can obtain potentially sensitive information leaked through HTML comments.</subcategoryLocalEffect>
      <subcategoryLongDescription>Dynamic data is output in HTML comments inside JSP tags.</subcategoryLongDescription>
      <subcategoryShortDescription>Dynamic data in HTML comment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_PASSWORD_HASH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>weak_salt</subcategory>
      </checkerSubcategoryId>
      <cweCategory>760</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker may recover individual passwords hashed this way with modest computational effort.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hashing a password without using a random and unique salt as part of the input.</subcategoryLongDescription>
      <subcategoryShortDescription>Hashing a password with a weak salt</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_storage_in_log</subcategory>
      </checkerSubcategoryId>
      <cweCategory>532</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Having access to the log gives access to the sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Logging sensitive data.</subcategoryLongDescription>
      <subcategoryShortDescription>Information exposure to log file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.MISSING_JSF2_SECURITY_CONSTRAINT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>425</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Facelet source code can be disclosed to unauthorized users.</subcategoryLocalEffect>
      <subcategoryLongDescription>The JSF2 web application does not define a security constraint that restricts access to Facelet source code.</subcategoryLongDescription>
      <subcategoryShortDescription>Missing Facelet security constraint</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.JAVAEE_MISSING_HTTPONLY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>200</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Session cookies are exposed to cross-site scripting attacks.</subcategoryLocalEffect>
      <subcategoryLongDescription>The HttpOnly flag is not enabled for the session cookies.</subcategoryLongDescription>
      <subcategoryShortDescription>Missing HttpOnly in session cookie</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.MISSING_GLOBAL_EXCEPTION_HANDLER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>7</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An unexpected error can result in a stack trace being sent to the user, leaking application information.</subcategoryLocalEffect>
      <subcategoryLongDescription>The web application does not define a global exception handler.</subcategoryLongDescription>
      <subcategoryShortDescription>Missing global exception handler</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REGEX_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker may be able to retrieve sensitive information, alter the behavior of the program, or exhaust resources within the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A regular expression is constructed from a user-controllable string.</subcategoryLongDescription>
      <subcategoryShortDescription>Regular expression injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI_UNKNOWN_SOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from origin site to query construction</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the user can control this data and it is an SQL query, then a user can change its intent, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection with unknown source</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI_UNKNOWN_SOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>nosink</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from origin site to query construction</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If the user can control this data and it is an SQL query, then a user can change its intent, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection with unknown source</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI_UNKNOWN_SOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>sink</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from origin to query construction using data of unknown origin and then to query execution</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If users can control this data, they can change the intent of the SQL query, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection with unknown source</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.SPRING_SECURITY_DISABLE_AUTH_TAGS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>731</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>View-based authorization checks are explicitly disabled, potentially disclosing content to unauthorized users.</subcategoryLocalEffect>
      <subcategoryLongDescription>Spring Security authorize JSP tags are disabled.</subcategoryLongDescription>
      <subcategoryShortDescription>Spring Security authorize JSP tags are disabled</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.SPRING_SECURITY_DEBUG_MODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>863</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The debug mode logs sensitive authentication information, which can be disclosed to unauthorized users.</subcategoryLocalEffect>
      <subcategoryLongDescription>Spring Security is used with debug mode enabled.</subcategoryLongDescription>
      <subcategoryShortDescription>Spring Security debug mode enabled</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.SPRING_SECURITY_HARDCODED_CREDENTIALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>798</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hardcoded credentials are found in the Spring Security configuration.</subcategoryLongDescription>
      <subcategoryShortDescription>Spring Security hardcoded credentials</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.SPRING_SECURITY_REMEMBER_ME_HARDCODED_KEY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>798</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change.</subcategoryLocalEffect>
      <subcategoryLongDescription>The remember-me key is hardcoded in the Spring Security configuration.</subcategoryLongDescription>
      <subcategoryShortDescription>Spring Security hardcoded remember-me key</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.STRUTS2_DYNAMIC_METHOD_INVOCATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>863</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Any public, zero-argument method can be called on a Action class or any of its super classes, including Object.</subcategoryLocalEffect>
      <subcategoryLongDescription>Struts2 DynamicMethodInvocation allowed.</subcategoryLongDescription>
      <subcategoryShortDescription>Struts2 DynamicMethodInvocation allowed</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.STRUTS2_CONFIG_BROWSER_PLUGIN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>862</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Action mapping and configuration information are available to any user.</subcategoryLocalEffect>
      <subcategoryLongDescription>Presence of the Struts2 config-browser plugin.</subcategoryLongDescription>
      <subcategoryShortDescription>Struts2 config-browser plugin</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNKNOWN_LANGUAGE_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the parsing, which may alter how the data is interpreted.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is parsed using a parser generator that is used to create new languages or grammars.</subcategoryLongDescription>
      <subcategoryShortDescription>Unknown language injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Low impact security</category>
      <categoryDescription>Low impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNSAFE_REFLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>470</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker can instantiate new classes or methods, possibly resulting in a denial of service or potentially unintended code execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is passed to a reflection API.</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe reflection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SENSITIVE_DATA_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_storage_in_database</subcategory>
      </checkerSubcategoryId>
      <cweCategory>313</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker with access to the database can read this sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Storing unencrypted sensitive data to a database.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a database</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNENCRYPTED_SENSITIVE_DATA</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>cleartext_in_database</subcategory>
      </checkerSubcategoryId>
      <cweCategory>313</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker with access to the database can read this sensitive data.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reading unencrypted sensitive data from a database.</subcategoryLongDescription>
      <subcategoryShortDescription>Cleartext sensitive data in a database</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JCR_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the JCR query, which may inappropriately disclose repository data.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is injected into a Content Repository for Java query</subcategoryLongDescription>
      <subcategoryShortDescription>Content Repository for Java injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CSRF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>filesystem_modification</subcategory>
      </checkerSubcategoryId>
      <cweCategory>352</cweCategory>
      <eventSetCaptions>
        <string>Examples of CSRF validation</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Controllers that execute actions or tasks may be accessed to perform activities without the user&apos;s knowledge or authorization. These attacks are difficult to distinguish from legitimate requests.</subcategoryLocalEffect>
      <subcategoryLongDescription>The web application controller modifies data or state and is unprotected from cross-site request forgery.</subcategoryLongDescription>
      <subcategoryShortDescription>Cross-site request forgery</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.HTTP_VERB_TAMPERING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>650</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The security constraint defined in the deployment descriptor can be bypassed by changing the HTTP method.</subcategoryLocalEffect>
      <subcategoryLongDescription>The web application is vulnerable to HTTP Verb Tampering attack.</subcategoryLongDescription>
      <subcategoryShortDescription>HTTP Verb Tampering</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HEADER_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>610</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker may be able to set important HTTP headers and disable security protections or fix the session ID. The severity of the defect depends on which headers can be manipulated and if the attacker is able to directly or indirectly control the header value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is used to construct an HTTP header name.</subcategoryLongDescription>
      <subcategoryShortDescription>HTTP header injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WEAK_PASSWORD_HASH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>weak_hash</subcategory>
      </checkerSubcategoryId>
      <cweCategory>916</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker may recover individual passwords hashed this way with modest computational effort.</subcategoryLocalEffect>
      <subcategoryLongDescription>Hashing a password using a scheme that is not computationally intensive.</subcategoryLongDescription>
      <subcategoryShortDescription>Hashing a password with a weak hash function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JSP_DYNAMIC_INCLUDE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>22</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can manipulate the internal server path of the JSP to bypass authorization, access sensitive data, or execute untrusted code.</subcategoryLocalEffect>
      <subcategoryLongDescription>A JSP include path is partially or entirely user-controllable.</subcategoryLongDescription>
      <subcategoryShortDescription>JSP dynamic include</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NOSQL_QUERY_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the NoSQL query, which may bypass security controls or disclose unauthorized data.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is injected into a NoSQL query.</subcategoryLongDescription>
      <subcategoryShortDescription>NoSQL query injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RISKY_CRYPTO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>327</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A use of a weak cryptographic method was detected. There exist known ways to compromise the security of the encrypted data.</subcategoryLocalEffect>
      <subcategoryLongDescription>A risky cryptographic function was used. This may allow an attacker to decrypt encrypted data as the quality of the cryptographic protection is suspect.</subcategoryLongDescription>
      <subcategoryShortDescription>Risky cryptographic function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RISKY_CRYPTO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>hashing</subcategory>
      </checkerSubcategoryId>
      <cweCategory>328</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A use of a weak hashing algorithm was detected. There exist well known ways to produce collisions on the hashes.</subcategoryLocalEffect>
      <subcategoryLongDescription>A risky hashing function was used. This may allow an attacker to produce collisions on the hash or execute length extension attacks.</subcategoryLongDescription>
      <subcategoryShortDescription>Risky cryptographic hashing function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SQLI</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>nosink</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <eventSetCaptions>
        <string>Data flow from tainted source to query construction</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the string is a SQL query, a user can change its intent, which may inappropriately disclose or corrupt data within the database</subcategoryLocalEffect>
      <subcategoryLongDescription>Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering</subcategoryLongDescription>
      <subcategoryShortDescription>SQL injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SESSION_FIXATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>384</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can force a user to authenticate onto an attacker-known identifier and subsequently hijack the now-authenticated session.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is used as a session identifier.</subcategoryLongDescription>
      <subcategoryShortDescription>Session fixation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.SPRING_SECURITY_SESSION_FIXATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>384</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Users may be vulnerable to session fixation attacks.</subcategoryLocalEffect>
      <subcategoryLongDescription>The session fixation protection of Spring Security is disabled.</subcategoryLongDescription>
      <subcategoryShortDescription>Spring Security session fixation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CONFIG.STRUTS2_ENABLED_DEV_MODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>863</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The application discloses sensitive debugging and logging information to potentially unauthorized users.</subcategoryLocalEffect>
      <subcategoryLongDescription>Struts2 developer mode enabled.</subcategoryLongDescription>
      <subcategoryShortDescription>Struts2 DevMode enabled</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNRESTRICTED_DISPATCH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>73</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can manipulate the dispatch path to access unintended servlets or views, allowing them to bypass security checks or obtain unauthorized data.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is used as a servlet dispatch path.</subcategoryLongDescription>
      <subcategoryShortDescription>Unrestricted dispatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNSAFE_JNI</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>427</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can load a dynamic library that executes arbitrary code.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is used in a dynamic library path.</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe dynamic library loading</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HARDCODED_CREDENTIALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>798</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Users with access to this source code can use these credentials to access production services or data.  Changing these credentials requires changing the code and re-deploying the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>Credentials are stored directly in the source code</subcategoryLongDescription>
      <subcategoryShortDescription>Use of hard-coded credentials</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HARDCODED_CREDENTIALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>hardcoded_credential_crypto</subcategory>
      </checkerSubcategoryId>
      <cweCategory>321</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Users with access to this source code can use this key to access encrypted production data.  Changing this key requires changing the code and re-deploying the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cryptographic key is stored directly in the source code.</subcategoryLongDescription>
      <subcategoryShortDescription>Use of hard-coded cryptographic key</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HARDCODED_CREDENTIALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>hardcoded_credential_passwd</subcategory>
      </checkerSubcategoryId>
      <cweCategory>259</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Users with access to this source code can use this password to access production services or data.  Changing this password requires changing the code and re-deploying the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A password is stored directly in the source code.</subcategoryLongDescription>
      <subcategoryShortDescription>Use of hard-coded password</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HARDCODED_CREDENTIALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>hardcoded_credential_token</subcategory>
      </checkerSubcategoryId>
      <cweCategory>798</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Users with access to this source code can use this security token to access production services or data.  Changing this token requires changing the code and re-deploying the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A security token is stored directly in the source code.</subcategoryLongDescription>
      <subcategoryShortDescription>Use of hard-coded security token</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RISKY_CRYPTO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>custom</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A violation of user-specified RISKY_CRYPTO policy was detected.</subcategoryLocalEffect>
      <subcategoryLongDescription>A cryptographic function was used in such a way as to violate the user-specified RISKY_CRYPTO policy. This violation may indicate that an attacker could decrypt or otherwise interfere with the encrypted or hashed data.</subcategoryLongDescription>
      <subcategoryShortDescription>Violation of user-specified RISKY_CRYPTO policy</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Medium impact security</category>
      <categoryDescription>Medium impact security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>XPATH_INJECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>94</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>An attacker can change the intent of the XPath query, which may inappropriately disclose data or grant unauthorized access to application functionality</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-controllable string is injected into an XPath query</subcategoryLongDescription>
      <subcategoryShortDescription>XML Path (XPath) Language injection</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>strlen</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A buffer overrun may occur if the string is copied into the buffer.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size does not include space for the null-terminator needed for a string</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_DYNAMIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>strlen</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A buffer overrun may occur if the string is copied into the buffer.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size does not include space for the null-terminator needed for a string</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>incorrect_multiplication</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The size of the allocated buffer may not hold the expected number of elements.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size is not a multiple of the target pointer&apos;s pointed-to type</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>ampersand_in_size</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The allocation size will probably be smaller than intended.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size is computed using the bitwise-and operator (&amp;amp;), which is likely to be a typo</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size with &apos;&amp;&apos;</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_null_terminator</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This can result in an non-null terminated string or an off-by-one buffer overflow, if the intention of the allocation is to copy the string.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size for a string is equal to the strlen of another string, which does not include extra byte for null termination</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation too small for string</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>likely_overflow</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Allocating less memory than required for a type can result in reads and writes of memory outside the bounds of the allocated type.</subcategoryLocalEffect>
      <subcategoryLongDescription>Allocation size is too small for the type of object being allocated</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation too small for type</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>critical_argument</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The negative  argument will be interpreted as a very large unsigned value.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used as argument to a function expecting a positive value (for example, size of buffer or allocation)</subcategoryLongDescription>
      <subcategoryShortDescription>Argument cannot be negative</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The source buffer may be a string larger than the destination buffer, causing buffer overflow.</subcategoryLocalEffect>
      <subcategoryLongDescription>Size of destination buffer is smaller than the size of the source buffer or size of the source buffer is unknown</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The source buffer may be a string larger than the destination buffer, causing buffer overflow.</subcategoryLocalEffect>
      <subcategoryLongDescription>Size of destination buffer is smaller than the size of the source buffer or size of the source buffer is unknown</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.CONV</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Accessing a wchar_t as if it were a BSTR may read out of bounds memory or cause memory corruption.</subcategoryLocalEffect>
      <subcategoryLongDescription>A wide character string cannot be converted to a BSTR because it lacks the hidden length field</subcategoryLongDescription>
      <subcategoryShortDescription>COM bad conversion to BSTR</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.CONV</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Accessing a wchar_t as if it were a BSTR may read out of bounds memory or cause memory corruption.</subcategoryLocalEffect>
      <subcategoryLongDescription>A wide character string cannot be converted to a BSTR because it lacks the hidden length field</subcategoryLongDescription>
      <subcategoryShortDescription>COM bad conversion to BSTR</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>likely_overflow</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity.</subcategoryLocalEffect>
      <subcategoryLongDescription>Size of destination buffer is smaller than the size argument specified</subcategoryLongDescription>
      <subcategoryShortDescription>Destination buffer too small</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>likely_overflow</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The source buffer may be a string larger than the destination buffer, causing buffer overflow.</subcategoryLocalEffect>
      <subcategoryLongDescription>Size of destination buffer is smaller than the size of the source buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Destination buffer too small</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>double_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>415</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Depending on the implementation of the deallocator function, the memory may by placed on the free list more than once.</subcategoryLocalEffect>
      <subcategoryLongDescription>Memory is deallocated more than once</subcategoryLongDescription>
      <subcategoryShortDescription>Double free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>address</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A non-heap pointer is placed on the free list, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of an address-of expression, which can never be heap allocated</subcategoryLongDescription>
      <subcategoryShortDescription>Free of address-of expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>first_field_address</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A non-heap pointer is placed on the free list, likely causing a crash later; on some platforms, this could be used deliberately since it is equivalent to freeing the struct itself.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of an address-of the first field of a struct</subcategoryLongDescription>
      <subcategoryShortDescription>Free of address-of first field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A pointer to the array is placed on the free list, likely causing a crash later; an array is not heap allocated by the program and, hence, cannot be freed.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of array-typed value</subcategoryLongDescription>
      <subcategoryShortDescription>Free of array-typed value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>function_pointer</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A pointer to the function&apos;s executable code is placed on the free list, likely causing a crash later; functions are not heap allocated and, hence, cannot be freed.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of function pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Free of function pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A pointer is erroneously placed on the system allocator&apos;s free list, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of an pointer that was not returned from an allocation function</subcategoryLongDescription>
      <subcategoryShortDescription>Free of invalid pointer value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A pointer is erroneously placed on the system allocator&apos;s free list, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of an pointer that was not returned from an allocation function</subcategoryLongDescription>
      <subcategoryShortDescription>Free of invalid pointer value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>alloca</subcategory>
      </checkerSubcategoryId>
      <cweCategory>590</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A non-heap pointer is placed on the free list, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Free of stack-allocated buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Free of stack-allocated memory</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>COM_deref_write_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Writing to freed memory can cause memory corruption and crashes.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of a freed internal pointer of a COM object</subcategoryLongDescription>
      <subcategoryShortDescription>Freed COM internal write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>deref_write_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Writing to freed memory can cause memory corruption and crashes.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of a freed internal pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Freed internal location write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>illegal_address</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>If this address is later used for bounds checking another pointer before dereferencing, an overrun may occur due to the weak guard.</subcategoryLocalEffect>
      <subcategoryLongDescription>An illegal address is computed, which either precedes a buffer or is more than just-past its end</subcategoryLongDescription>
      <subcategoryShortDescription>Illegal address computation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>improper_new</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The newly allocated memory buffer only holds one value, which is initialized to the value given in parentheses.</subcategoryLocalEffect>
      <subcategoryLongDescription>This invocation of operator new only creates one value, not an array of values</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect operator new syntax</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISMATCHED_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior may result; the program may crash or subtly misbehave.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using iterator from one container in operations on another container</subcategoryLongDescription>
      <subcategoryShortDescription>Iterator container mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISMATCHED_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior may result; the program may crash or subtly misbehave.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using iterator from one container in operations on another container</subcategoryLongDescription>
      <subcategoryShortDescription>Iterator container mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>READONLY_BUFFER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Modification of a read-only buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Modification of read-only buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Modification of read-only buffer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used to index an array in a write operation</subcategoryLongDescription>
      <subcategoryShortDescription>Negative array index write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A memory location at a negative offset from the beginning of the array will be written, likely causing a crash later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to array at negative index</subcategoryLongDescription>
      <subcategoryShortDescription>Negative array index write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ARRAY_VS_SINGLETON</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Memory not owned by this buffer will be accessed, causing memory corruption or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Access of memory past the end of a memory buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ARRAY_VS_SINGLETON</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Memory not owned by this buffer will be accessed, causing memory corruption or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Access of memory past the end of a memory buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to a buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to a buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_DYNAMIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_DYNAMIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_STATIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_STATIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Access of memory not owned by this buffer may cause crashes or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds write to a buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_DYNAMIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds write to a dynamically allocated buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_STATIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds write to an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to array at integer-overflowed index</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed array index write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of an integer-overflowed pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed pointer write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISMATCHED_ITERATOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>splice_iterator_mismatch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior may result; the program may crash or subtly misbehave.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using iterator from the wrong container as argument to the splice method</subcategoryLongDescription>
      <subcategoryShortDescription>Splice iterator mismatch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_ALLOC_ARITHMETIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The pointer value returned from the allocator may be lost, making it difficult to deallocate later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer arithmetic performed on freshly allocated memory</subcategoryLongDescription>
      <subcategoryShortDescription>Stray pointer arithmetic</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_ALLOC_ARITHMETIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The pointer value returned from the allocator may be lost, making it difficult to deallocate later.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer arithmetic performed on freshly allocated memory</subcategoryLongDescription>
      <subcategoryShortDescription>Stray pointer arithmetic</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_ALLOC_STRLEN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The string length computed may be one less than intended (or zero for the empty string).  A common mistake.</subcategoryLocalEffect>
      <subcategoryLongDescription>String length miscalculation</subcategoryLongDescription>
      <subcategoryShortDescription>String length miscalculation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_ALLOC_STRLEN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The string length computed may be one less than intended (or zero for the empty string).  A common mistake.</subcategoryLocalEffect>
      <subcategoryLongDescription>String length miscalculation</subcategoryLongDescription>
      <subcategoryShortDescription>String length miscalculation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>double_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>415</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The second free can result in undefined effects like memory corruption or incorrect behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>An object is freed twice because it is explicitly freed twice, on the cleanup stack more than once, or it is deallocated but still on the cleanup stack</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - double free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large.</subcategoryLocalEffect>
      <subcategoryLongDescription>A source buffer of arbitrarily large size is used where a fixed-size destination buffer is expected</subcategoryLongDescription>
      <subcategoryShortDescription>Unbounded source buffer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The string operation can write past the end of the fixed-size destination buffer if the source buffer is too large.</subcategoryLocalEffect>
      <subcategoryLongDescription>A source buffer of arbitrarily large size is used where a fixed-size destination buffer is expected</subcategoryLongDescription>
      <subcategoryShortDescription>Unbounded source buffer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Some arbitrary memory location is overwritten. Incorrect values may subsequently be read.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to array at uninitialized index</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized array index write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_write</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of an uninitialized pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized pointer write</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - corruptions</category>
      <categoryDescription>Memory - corruptions</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>deref_write_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently; the allocator&apos;s own data structures may also be corrupted.</subcategoryLocalEffect>
      <subcategoryLongDescription>Write to target of a freed pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Write to pointer after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The size of the allocated buffer may not hold the expected number of elements causing issues such as buffer overflows.</subcategoryLocalEffect>
      <subcategoryLongDescription>The allocation size is computed incorrectly</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZECHECK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>131</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The size of the allocated buffer may not hold the expected number of elements.</subcategoryLocalEffect>
      <subcategoryLongDescription>The allocation size is computed incorrectly</subcategoryLongDescription>
      <subcategoryShortDescription>Allocation size error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_ARRAY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>non_array_delete</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using array delete on a non-array</subcategoryLongDescription>
      <subcategoryShortDescription>Array delete misuse</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_null_terminator</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>The string buffer may not have a null terminator if the source string&apos;s length is equal to the buffer size</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>The string buffer may not have a null terminator if the source string&apos;s length is equal to the buffer size</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_null_terminator</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>The string buffer may not have a null terminator if the source string&apos;s length is equal to the buffer size</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>If the buffer is treated as a null terminated string in later operations, a buffer overflow or over-read may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>The string buffer may not have a null terminator if the source string&apos;s length is equal to the buffer size</subcategoryLongDescription>
      <subcategoryShortDescription>Buffer not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>double_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior including memory corruption and crashes due to illegal memory accesses can result.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by freeing a BSTR more than once</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR double free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>633</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Memory corruption, illegal memory accesses or a memory leak may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by not freeing a BSTR, by using an uninitialized BSTR, or by freeing a non-owned BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>633</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Memory corruption or a memory leak may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by not freeing a BSTR, or by freeing a non-owned BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>free_uninit</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Arbitrary values can be freed causing memory corruption and other undefined behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by freeing an uninitialized BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR uninitialized var free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>use_uninit</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Arbitrary values can be read; illegal memory locations can be accessed.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by using an uninitialized BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR uninitialized var use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>COM_use_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A use after free bug would occur if the internal pointer is used.</subcategoryLocalEffect>
      <subcategoryLongDescription>An internal pointer of a COM string object remains available after the object is freed</subcategoryLongDescription>
      <subcategoryShortDescription>COM object use after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_VOID</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>758</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result; in practice, the memory is typically freed, but the destructor is not run.</subcategoryLocalEffect>
      <subcategoryLongDescription>Deleting a void pointer (void*)</subcategoryLongDescription>
      <subcategoryShortDescription>Deleting void pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_VOID</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>758</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result; in practice, the memory is typically freed, but the destructor is not run.</subcategoryLocalEffect>
      <subcategoryLongDescription>Deleting a void pointer (void*)</subcategoryLongDescription>
      <subcategoryShortDescription>Deleting void pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Other owners of the interface may be left with dangling pointers, ultimately resulting in use after free errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A COM interface is explicitly freed instead of using the recommended Release method</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit free of COM interface</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BAD_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Other owners of the interface may be left with dangling pointers, ultimately resulting in use after free errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>A COM interface is explicitly freed instead of using the recommended Release method</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit free of COM interface</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>COM_deref_read_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads target of a freed internal pointer of a COM object</subcategoryLongDescription>
      <subcategoryShortDescription>Freed COM internal read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>deref_read_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Reading from freed memory can cause wrong values to be read and crashes due to illegal memory accesses.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads target of a freed internal pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Freed internal location read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>use_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by freeing a non-owned BSTR</subcategoryLongDescription>
      <subcategoryShortDescription>Freeing non-owned COM BSTR</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_ARRAY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result and destructors may not be called on objects in the array.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using non-array delete on an array of objects, scalars, or pointers allocated with new[]</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect delete operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_ARRAY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Undefined behavior might result and destructors may not be called on objects in the array.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using non-array delete on an array of objects, scalars, or pointers allocated with new[]</subcategoryLongDescription>
      <subcategoryShortDescription>Incorrect delete operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bad_memset_zero_size</subcategory>
      </checkerSubcategoryId>
      <cweCategory>456</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The buffer will not be modified; no part of the buffer will be cleared or assigned the fill byte value.</subcategoryLocalEffect>
      <subcategoryLongDescription>A memset buffer size of 0 may indicate confusing the size and fill parameters</subcategoryLongDescription>
      <subcategoryShortDescription>Memset buffer size of 0</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bad_memset_truncated_fill</subcategory>
      </checkerSubcategoryId>
      <cweCategory>197</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The buffer will not be filled with the apparent fill byte pattern, instead it will be filled with the truncated value.</subcategoryLocalEffect>
      <subcategoryLongDescription>The memset fill value must be between -1 and 255, other values will be truncated</subcategoryLongDescription>
      <subcategoryShortDescription>Memset fill truncated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>bad_memset_fill_value</subcategory>
      </checkerSubcategoryId>
      <cweCategory>665</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The buffer will be filled with ASCII character &apos;0&apos; instead of actual zero bytes.</subcategoryLocalEffect>
      <subcategoryLongDescription>A memset fill value of ASCII character &apos;0&apos; is likely intended to be 0</subcategoryLongDescription>
      <subcategoryShortDescription>Memset fill value of &apos;0&apos;</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SIZEOF_MISMATCH</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>missing_parentheses</subcategory>
      </checkerSubcategoryId>
      <cweCategory>783</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This is a result of a common misunderstanding of operator precedence; the incorrect expression can result in a pointer pointing to illegal memory locations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing parentheses caused unintended operator precedence of casting before the pointer arithmetic</subcategoryLongDescription>
      <subcategoryShortDescription>Missing parentheses</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used to index an array in a read operation</subcategoryLongDescription>
      <subcategoryShortDescription>Negative array index read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_NEGATIVE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>129</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A memory location at a negative offset from the beginning of the array will be read, resulting in incorrect values.</subcategoryLocalEffect>
      <subcategoryLongDescription>Read from array at negative index</subcategoryLongDescription>
      <subcategoryShortDescription>Negative array index read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INCOMPATIBLE_CAST</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>overrun</subcategory>
      </checkerSubcategoryId>
      <cweCategory>119</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The pointed-to memory is accessed with a larger type, causing a crash or incorrect computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds access to a scalar</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>125</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values read from a different memory region will cause incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds read from a buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_DYNAMIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>125</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values read from a different memory buffer will cause incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds read from a dynamically allocated buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>OVERRUN_STATIC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>125</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values read from a different memory buffer will cause incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Out-of-bounds read from an array</subcategoryLongDescription>
      <subcategoryShortDescription>Out-of-bounds read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>125</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values will be read from an arbitrary memory location, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Read from array at integer overflowed index</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed array index read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INTEGER_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>125</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values will be read from an arbitrary memory location, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads target of an integer-overflowed pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Overflowed pointer read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RETURN_LOCAL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>562</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Dereferencing the returned or out-of-scope stack pointer will access an invalid location on the stack after its scope or after the function returns.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer to a local stack variable returned or used outside scope</subcategoryLongDescription>
      <subcategoryShortDescription>Pointer to local outside scope</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RETURN_LOCAL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>562</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Dereferencing the returned or out-of-scope stack pointer will access an invalid location on the stack after its scope or after the function returns.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer to a local stack variable returned or used outside scope</subcategoryLongDescription>
      <subcategoryShortDescription>Pointer to local outside scope</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>deref_read_after_free</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values may be read from freed memory, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads target of a freed pointer</subcategoryLongDescription>
      <subcategoryShortDescription>Read from pointer after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>READLINK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The buffer will be written past the end looking for a null terminator, causing a buffer overrun.</subcategoryLocalEffect>
      <subcategoryLongDescription>The readlink system call may return a value equal to the buffer size, which causes an access one past the end</subcategoryLongDescription>
      <subcategoryShortDescription>Readlink used insecurely</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>READLINK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The buffer will be written past the end looking for a null terminator, causing a buffer overrun.</subcategoryLocalEffect>
      <subcategoryLongDescription>The readlink system call may return a value equal to the buffer size, which causes an access one past the end</subcategoryLongDescription>
      <subcategoryShortDescription>Readlink used insecurely</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.RETURN_PTR_TO_LOCAL_TEMP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>562</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The pointer will reference freed memory, causing a use-after-free in the caller if the pointer is ever used.</subcategoryLocalEffect>
      <subcategoryLongDescription>Returning a pointer to a temporary variable, which will be destroyed on function exit</subcategoryLongDescription>
      <subcategoryShortDescription>Returning pointer to temp</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.RETURN_PTR_TO_LOCAL_TEMP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>562</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The pointer will reference freed memory, causing a use-after-free in the caller if the pointer is ever used.</subcategoryLocalEffect>
      <subcategoryLongDescription>Returning a pointer to a temporary variable, which will be destroyed on function exit</subcategoryLongDescription>
      <subcategoryShortDescription>Returning pointer to temp</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The function may iterate past the end of the buffer looking for a null terminator.</subcategoryLocalEffect>
      <subcategoryLongDescription>A character buffer that has not been null terminated is passed to a function expecting a null terminated string</subcategoryLongDescription>
      <subcategoryShortDescription>String not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>170</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The function may iterate past the end of the buffer looking for a null terminator.</subcategoryLocalEffect>
      <subcategoryLongDescription>A character buffer that has not been null terminated is passed to a function expecting a null terminated string</subcategoryLongDescription>
      <subcategoryShortDescription>String not null terminated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>array_index_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values will be read from an arbitrary memory location, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Read from array at uninitialized index</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized array index read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer_deref_read</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Incorrect values could be read from, or even written to, an arbitrary memory location, causing incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reads an uninitialized pointer or its target</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized pointer read</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>A pointer to freed memory is  dereferenced, used as a function argument, or otherwise used</subcategoryLongDescription>
      <subcategoryShortDescription>Use after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USE_AFTER_FREE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>This could cause an immediate crash or incorrect values might be read subsequently resulting in incorrect computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>A pointer to freed memory is  dereferenced, used as a function argument, or otherwise used</subcategoryLongDescription>
      <subcategoryShortDescription>Use after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A use after free bug would occur if the internal pointer is used.</subcategoryLocalEffect>
      <subcategoryLongDescription>An internal pointer of a wrapper object remains available after the object is freed</subcategoryLongDescription>
      <subcategoryShortDescription>Wrapper object use after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Memory - illegal accesses</category>
      <categoryDescription>Memory - illegal accesses</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>WRAPPER_ESCAPE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>416</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A use after free bug would occur if the internal pointer is used.</subcategoryLocalEffect>
      <subcategoryLongDescription>An internal pointer of a wrapper object remains available after the object is freed</subcategoryLongDescription>
      <subcategoryShortDescription>Wrapper object use after free</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>There may be a null pointer exception, or there may be an unnecessary check against null.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reference may be null but is then dereferenced anyway</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference a null pointer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Either the check against null is unnecessary, or there may be a null pointer dereference.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer is checked against null but then dereferenced anyway</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference after null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Either the check against null is unnecessary, or there may be a null pointer exception.</subcategoryLocalEffect>
      <subcategoryLongDescription>Reference is checked against null but then dereferenced anyway</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference after null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_INULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>There may be a null pointer dereference, or else the comparison against null is unnecessary.</subcategoryLocalEffect>
      <subcategoryLongDescription>All paths that lead to this null pointer comparison already dereference the pointer earlier</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference before null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_INULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>There may be a null pointer dereference, or else the comparison against null is unnecessary.</subcategoryLocalEffect>
      <subcategoryLongDescription>All paths that lead to this null pointer comparison already dereference the pointer earlier</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference before null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_INULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>There may be a null pointer exception, or else the comparison against null is unnecessary.</subcategoryLocalEffect>
      <subcategoryLongDescription>All paths that lead to this null pointer comparison already dereference the pointer earlier</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference before null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>REVERSE_INULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>There may be a null pointer exception, or else the comparison against null is unnecessary.</subcategoryLocalEffect>
      <subcategoryLongDescription>All paths that lead to this null pointer comparison already dereference the pointer earlier</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference before null check</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>needs_null_check</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the method is passed a null value, a NullPointerException will be thrown.</subcategoryLocalEffect>
      <subcategoryLongDescription>A method parameter that is allowed to be null is dereferenced without a check</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null argument</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NULL_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>unimpl</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <eventSetCaptions>
        <string>Call to null-returning function</string>
        <string>Examples where return value was checked for null</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function can actually return null, then a null pointer dereference would occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Return value of function, which is statistically inferred to return null, but with no source code available, is dereferenced</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null return (stat)</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NULL_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <eventSetCaptions>
        <string>Call to null-returning function</string>
        <string>Examples where return value was checked for null</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function actually returns a null value, a null pointer dereference will occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Return value of function which returns null is dereferenced without checking</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NULL_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <eventSetCaptions>
        <string>Call to null-returning function</string>
        <string>Examples where return value was checked for null</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function actually returns a null value, a null pointer dereference will occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Return value of function which returns null is dereferenced without checking</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NULL_RETURNS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <eventSetCaptions>
        <string>Call to null-returning function</string>
        <string>Examples where return value was checked for null</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function actually returns a null value, a NullPointerException will be thrown.</subcategoryLocalEffect>
      <subcategoryLongDescription>Return value of function which returns null is dereferenced without checking</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NULL_RETURNS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <eventSetCaptions>
        <string>Call to null-returning function</string>
        <string>Examples where return value was checked for null</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the function actually returns a null value, a NullPointerException will be thrown.</subcategoryLocalEffect>
      <subcategoryLongDescription>Return value of function which returns null is dereferenced without checking</subcategoryLongDescription>
      <subcategoryShortDescription>Dereference null return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>deref_constant_null</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A null pointer dereference will occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Dereference of an explicit null value</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit null dereferenced</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>deref_constant_null</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A null pointer exception will occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Dereference of an explicit null value</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit null dereferenced</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>deref_constant_zero</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A null pointer exception will occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Dereference of an explicit null value</subcategoryLongDescription>
      <subcategoryShortDescription>Explicit null dereferenced</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>A null pointer dereference may occur or a null check may be redundant.</subcategoryLocalEffect>
      <subcategoryLongDescription>Pointer is checked against null or assigned to null and then dereferenced</subcategoryLongDescription>
      <subcategoryShortDescription>Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Null pointer dereferences</category>
      <categoryDescription>Null pointer dereferences</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FORWARD_NULL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>dynamic_cast</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>If the dynamic_cast fails, a null pointer dereference will occur; if the dynamic_cast cannot fail, using static_cast instead offers better performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>Dynamic_cast may fail and return null if the type cast is incompatible</subcategoryLongDescription>
      <subcategoryShortDescription>Unchecked dynamic_cast</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function will not be analyzed for other defects; any callers of the function will not have access to its function summary.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse error caused a function to be skipped by Coverity Static Analysis</subcategoryLongDescription>
      <subcategoryShortDescription>Parse recovery warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function will not be analyzed for other defects; any callers of the function will not have access to its function summary.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse error caused a function to be skipped by Coverity Static Analysis</subcategoryLongDescription>
      <subcategoryShortDescription>Parse recovery warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>There may be a loss of precision if the Coverity parser misinterpreted the code in the function.</subcategoryLocalEffect>
      <subcategoryLongDescription>The function contains a non-portable or non-standard construct forcing the Coverity parser to guess the meaning</subcategoryLongDescription>
      <subcategoryShortDescription>Parse semantic warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>There may be a loss of precision if the Coverity parser misinterpreted the code in the function.</subcategoryLocalEffect>
      <subcategoryLongDescription>The function contains a non-portable or non-standard construct forcing the Coverity parser to guess the meaning</subcategoryLongDescription>
      <subcategoryShortDescription>Parse semantic warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A parse warning may reduce maintainability of the code, or it may indicate a serious error.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse warning from the Coverity parser may indicate a bug, or poor coding practice</subcategoryLongDescription>
      <subcategoryShortDescription>Parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A parse warning may reduce maintainability of the code, or it may indicate a serious error.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse warning from the Coverity parser may indicate a bug, or poor coding practice</subcategoryLongDescription>
      <subcategoryShortDescription>Parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.*</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A parse warning may reduce maintainability of the code, or it may indicate a serious error.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse warning may indicate a bug, or poor coding practice</subcategoryLongDescription>
      <subcategoryShortDescription>Parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.*</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A parse warning may reduce maintainability of the code, or it may indicate a serious error.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse warning may indicate a bug, or poor coding practice</subcategoryLongDescription>
      <subcategoryShortDescription>Parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PARSE_ERROR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The functions in the compilation unit will not be analyzed for other defects; any callers of these functions will not be able to use the summary of the skipped functions.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse error caused an entire compilation unit to be skipped by Coverity Static Analysis</subcategoryLongDescription>
      <subcategoryShortDescription>Unrecoverable parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Parse warnings</category>
      <categoryDescription>Parse warnings</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PARSE_ERROR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The functions in the compilation unit will not be analyzed for other defects; any callers of these functions will not be able to use the summary of the skipped functions.</subcategoryLocalEffect>
      <subcategoryLongDescription>A parse error caused an entire compilation unit to be skipped by Coverity Static Analysis</subcategoryLongDescription>
      <subcategoryShortDescription>Unrecoverable parse warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PASS_BY_VALUE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Copying large values is inefficient, consider passing by reference; size thresholds for detection can be adjusted.</subcategoryLocalEffect>
      <subcategoryLongDescription>A large function call parameter or exception catch statement is passed by value</subcategoryLongDescription>
      <subcategoryShortDescription>Big parameter passed by value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PASS_BY_VALUE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Copying large values is inefficient, consider passing by reference; size thresholds for detection can be adjusted.</subcategoryLocalEffect>
      <subcategoryLongDescription>A large function call parameter or exception catch statement is passed by value</subcategoryLongDescription>
      <subcategoryShortDescription>Big parameter passed by value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STACK_USE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>400</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Excessive stack use may cause stack overflow in embedded applications.  Stack size limits are configurable.</subcategoryLocalEffect>
      <subcategoryLongDescription>Excessive use of stack memory by local variables or parameters</subcategoryLongDescription>
      <subcategoryShortDescription>Large stack use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STACK_USE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>400</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Excessive stack use may cause stack overflow in embedded applications.  Stack size limits are configurable.</subcategoryLocalEffect>
      <subcategoryLongDescription>Excessive use of stack memory by local variables or parameters</subcategoryLongDescription>
      <subcategoryShortDescription>Large stack use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_CONCAT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>String concatenation can result in a quadratic time algorithm in a loop; each loop iteration is linear time.</subcategoryLocalEffect>
      <subcategoryLongDescription>A String object is concatenated within a loop, which results in the creation of a StringBuffer and new String</subcategoryLongDescription>
      <subcategoryShortDescription>String concatenation in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_CONCAT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>398</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>String concatenation can result in a quadratic time algorithm in a loop; each loop iteration is linear time.</subcategoryLocalEffect>
      <subcategoryLongDescription>A String object is concatenated within a loop, which results in the creation of a StringBuffer and new String</subcategoryLongDescription>
      <subcategoryShortDescription>String concatenation in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>HIBERNATE_UNNECESSARY_GET</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Database accesses are expensive and will reduce the performance of the system.</subcategoryLocalEffect>
      <subcategoryLongDescription>There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance.</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary call to org.hibernate.Session.get method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORM_UNNECESSARY_GET</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Database accesses are expensive and will reduce the performance of the system.</subcategoryLocalEffect>
      <subcategoryLongDescription>There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance.</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary call to org.hibernate.Session.get method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNEXPECTED_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An unnecessary synchronized block may introduce lock contention and reduce performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>Synchronized block appears to be unnecessary because the lock protects no variables consistently</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNEXPECTED_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An unnecessary synchronized block may introduce lock contention and reduce performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>Synchronized block appears to be unnecessary because the lock protects no variables consistently</subcategoryLongDescription>
      <subcategoryShortDescription>Unnecessary synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.PERFORMANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this constructor or method may result in unnecessary memory or resource allocation, or poor performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>This particular way of using a method or constructor is not the most efficient</subcategoryLongDescription>
      <subcategoryShortDescription>Use of inefficient method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.PERFORMANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this constructor or method may result in unnecessary memory or resource allocation, or poor performance.</subcategoryLocalEffect>
      <subcategoryLongDescription>This particular way of using a method or constructor is not the most efficient</subcategoryLongDescription>
      <subcategoryShortDescription>Use of inefficient method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Performance inefficiencies</category>
      <categoryDescription>Performance inefficiencies</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INVALIDATE_ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>map_put</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A map was modified with Map.put while it was being iterated on. If the key was not in the map, this will usually generate an error (ConcurrentModificationException). The most common case is iterating on the keySet(), and updating the value at the current key. In this case, the map&apos;s key set is not changed, so this doesn&apos;t generate an error. Doing things this way is inefficient however, as this requires doing a map lookup that can be avoided. Instead, iterate on the entrySet and use Map.Entry.setValue.</subcategoryLocalEffect>
      <subcategoryLongDescription>A map was modified with Map.put while it was being iterated on</subcategoryLongDescription>
      <subcategoryShortDescription>Using invalid iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>effectively_constant</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant.</subcategoryLocalEffect>
      <subcategoryLongDescription>Variable assigned once to a constant guards dead code.</subcategoryLongDescription>
      <subcategoryShortDescription>&apos;Constant&apos; variable guards dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>effectively_constant</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A variable being assigned only once may be intentionally guarding disabled code, or it may represent incomplete logic where a missing assignment would make the variable not be constant.</subcategoryLocalEffect>
      <subcategoryLongDescription>Variable assigned once to a constant guards dead code.</subcategoryLongDescription>
      <subcategoryShortDescription>&apos;Constant&apos; variable guards dead code</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>dead_case_in_switch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case.</subcategoryLocalEffect>
      <subcategoryLongDescription>Switch never goes directly to this case</subcategoryLongDescription>
      <subcategoryShortDescription>Dead case in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>dead_case_in_switch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>By the time the program execution reaches this switch statement, the value cannot be equal to the given case. The code at the case is not dead, because it can be reached by falling through from a previous case.</subcategoryLocalEffect>
      <subcategoryLongDescription>Switch never goes directly to this case</subcategoryLongDescription>
      <subcategoryShortDescription>Dead case in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>dead_default_in_switch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The statements in the default case are never executed.</subcategoryLocalEffect>
      <subcategoryLongDescription>Default in switch statement is dead code</subcategoryLongDescription>
      <subcategoryShortDescription>Dead default in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>dead_default_in_switch</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The statements in the default case are never executed.</subcategoryLocalEffect>
      <subcategoryLongDescription>Default in switch statement is dead code</subcategoryLongDescription>
      <subcategoryShortDescription>Dead default in switch</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>possible</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths.</subcategoryLongDescription>
      <subcategoryShortDescription>Possible failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RESTORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>possible</subcategory>
      </checkerSubcategoryId>
      <cweCategory>573</cweCategory>
      <eventSetCaptions>
        <string>Events contributing to issue</string>
        <string>Restoration example</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Failing to restore original value of some external value could compromise integrity of a subsystem.</subcategoryLocalEffect>
      <subcategoryLongDescription>Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths.</subcategoryLongDescription>
      <subcategoryShortDescription>Possible failure to restore non-local value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>redundant_test</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it.</subcategoryLocalEffect>
      <subcategoryLongDescription>Test always evaluates the same</subcategoryLongDescription>
      <subcategoryShortDescription>Redundant test</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Possible Control flow issues</category>
      <categoryDescription>Possible Control flow issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DEADCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>redundant_test</subcategory>
      </checkerSubcategoryId>
      <cweCategory>561</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>By the time the program execution reaches the test of this condition there is only one possible outcome for the test.  The code at the destination of this branch is not dead, either because this condition is always true or because there is at least one other branch that reaches it.</subcategoryLocalEffect>
      <subcategoryLongDescription>Test always evaluates the same</subcategoryLongDescription>
      <subcategoryShortDescription>Redundant test</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>double_lock</subcategory>
      </checkerSubcategoryId>
      <cweCategory>764</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>May result in immediate deadlock.</subcategoryLocalEffect>
      <subcategoryLongDescription>Attempt to acquire a lock more than once on a non-recursive lock</subcategoryLongDescription>
      <subcategoryShortDescription>Double lock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>667</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>May result in deadlock.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing a release of a lock on a path, or an attempt to acquire a lock more than once</subcategoryLongDescription>
      <subcategoryShortDescription>Double lock or missing unlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INFINITE_LOOP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>835</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The variable update statements in the loop never make the exit condition true (except for integer overflow/underflow) and the loop executes forever.</subcategoryLocalEffect>
      <subcategoryLongDescription>Infinite loop with unsatisfiable or no exit condition</subcategoryLongDescription>
      <subcategoryShortDescription>Infinite loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INFINITE_LOOP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>835</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The loop does not have a normal termination condition, so will continue until an abnormal condition arises.</subcategoryLocalEffect>
      <subcategoryLongDescription>Infinite loop with unsatisfiable exit condition</subcategoryLongDescription>
      <subcategoryShortDescription>Infinite loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INFINITE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>no_escape</subcategory>
      </checkerSubcategoryId>
      <cweCategory>835</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped.</subcategoryLocalEffect>
      <subcategoryLongDescription>Infinite loop with no exit condition</subcategoryLongDescription>
      <subcategoryShortDescription>Infinite loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INFINITE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>835</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The loop does not have a normal termination condition, so will continue until an abnormal condition arises.</subcategoryLocalEffect>
      <subcategoryLongDescription>Infinite loop with unsatisfiable exit condition</subcategoryLongDescription>
      <subcategoryShortDescription>Infinite loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>INFINITE_LOOP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>no_escape</subcategory>
      </checkerSubcategoryId>
      <cweCategory>835</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The loop will execute forever, or until system resources are exhausted or the system is otherwise stopped.</subcategoryLocalEffect>
      <subcategoryLongDescription>Infinite loop with no exit condition</subcategoryLongDescription>
      <subcategoryShortDescription>Infinite loop with no exit</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>missing_unlock</subcategory>
      </checkerSubcategoryId>
      <cweCategory>667</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>May result in deadlock if there is another attempt to acquire the lock.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing a release of a lock on a path</subcategoryLongDescription>
      <subcategoryShortDescription>Missing unlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>667</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>May result in deadlock or a halt at an assertion.</subcategoryLocalEffect>
      <subcategoryLongDescription>Missing a release or acquire of a lock on a path, or an attempt to acquire a lock more than once</subcategoryLongDescription>
      <subcategoryShortDescription>Missing/extra lock or unlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NEGATIVE_RETURNS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>loop_bound</subcategory>
      </checkerSubcategoryId>
      <cweCategory>606</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Loop may run for a long time or not at all.</subcategoryLocalEffect>
      <subcategoryLongDescription>Negative value used as a loop upper bound</subcategoryLongDescription>
      <subcategoryShortDescription>Negative loop bound</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORDER_REVERSAL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Two threads will be stuck waiting forever if each holds a lock the other needs to acquire.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire two locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ORDER_REVERSAL</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Two threads will be stuck waiting forever if each holds a lock the other needs to acquire.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire two locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK_INVERSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <eventSetCaptions>
        <string>Wrong order of lock acquisitions</string>
        <string>Examples of presumed correct order of lock acquisitions</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Two threads will be stuck waiting forever if each holds a lock the other needs to acquire.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire two locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK_INVERSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <eventSetCaptions>
        <string>Wrong order of lock acquisitions</string>
        <string>Examples of presumed correct order of lock acquisitions</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>Two threads will be stuck waiting forever if each holds a lock the other needs to acquire.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire two locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK_ORDERING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <eventSetCaptions>
        <string>Order of nested lock acquisitions is inconsistent</string>
        <string>Nested lock acquisitions that contribute to the lock cycle</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The threads will be stuck waiting forever if each holds a lock needed by another thread.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire three or more locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>LOCK_ORDERING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>833</cweCategory>
      <eventSetCaptions>
        <string>Order of nested lock acquisitions is inconsistent</string>
        <string>Nested lock acquisitions that contribute to the lock cycle</string>
      </eventSetCaptions>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The threads will be stuck waiting forever if each holds a lock needed by another thread.</subcategoryLocalEffect>
      <subcategoryLongDescription>Threads may try to acquire three or more locks in different orders, potentially causing deadlock</subcategoryLongDescription>
      <subcategoryShortDescription>Thread deadlock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SLEEP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>667</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The lock will prevent other threads from making progress for an indefinite period of time; may be mistaken for deadlock.</subcategoryLocalEffect>
      <subcategoryLongDescription>A lock is held while waiting for a long running or blocking operation to complete</subcategoryLongDescription>
      <subcategoryShortDescription>Waiting while holding a lock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Program hangs</category>
      <categoryDescription>Program hangs</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SLEEP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>667</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The lock will prevent other threads from making progress for an indefinite period of time; may be mistaken for deadlock.</subcategoryLocalEffect>
      <subcategoryLongDescription>A lock is held while waiting for a long running or blocking operation to complete</subcategoryLongDescription>
      <subcategoryShortDescription>Waiting while holding a lock</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.BSTR.ALLOC</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>leak</subcategory>
      </checkerSubcategoryId>
      <cweCategory>401</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The memory allocated for the BSTR will not be reclaimed and reused, reducing the future availability of memory.</subcategoryLocalEffect>
      <subcategoryLongDescription>Violation of the COM coding standard by not freeing a BSTR whose last reference is lost in this function</subcategoryLongDescription>
      <subcategoryShortDescription>COM BSTR memory leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>JDBC_CONNECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>leak</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The database connection will remain open and unused, reducing the future availability of other connections.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a database connection, which should be closed after use</subcategoryLongDescription>
      <subcategoryShortDescription>Database connection leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>NO_EFFECT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>incomplete_delete</subcategory>
      </checkerSubcategoryId>
      <cweCategory>401</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The right hand side of the comma expression will not be deleted, resulting in a memory leak.</subcategoryLocalEffect>
      <subcategoryLongDescription>Delete operator only applies to one argument in a comma expression, may cause memory leak</subcategoryLongDescription>
      <subcategoryShortDescription>Incomplete delete</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>fds_handles</subcategory>
      </checkerSubcategoryId>
      <cweCategory>775</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource with an integer descriptor such as a file descriptor or a handle in Windows</subcategoryLongDescription>
      <subcategoryShortDescription>Integer handle or fd leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COM.ADDROF_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Managed pointer is assigned a non-null value.</string>
        <string>Managed pointer value is potentially overwritten.</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>A non-null pointer value is potentially overwritten without the corresponding allocated memory being freed first. This may cause the memory to be leaked.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-null pointer managed by a CComBSTR or CComPtr instance is passed by address to a function call. The value of the pointer can potentially be overwritten during the function call causing allocated memory to be leaked.</subcategoryLongDescription>
      <subcategoryShortDescription>Managed pointer overwrite</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DELETE_ARRAY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>object</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Destructors will not be called on the objects in the array, this may lead to resource leaks and unexpected behavior.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using non-array delete on an array of objects; should be using delete[]</subcategoryLongDescription>
      <subcategoryShortDescription>Non-array delete for objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VIRTUAL_DTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>772</cweCategory>
      <eventSetCaptions>
        <string>Destructor of derived class, which might not be invoked on all instances</string>
        <string>Definition of the base class, which doesn&apos;t have a virtual destructor</string>
        <string>Example where an instance of the base class is deleted</string>
        <string>Example where a pointer to the derived class is upcast to a pointer to the base class</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Invocation of the wrong destructor will likely cause resources in the class to be leaked. The base class destructor ought to be declared as virtual.</subcategoryLocalEffect>
      <subcategoryLongDescription>The correct derived class destructor is not invoked due to the absence of a virtual destructor in the base class</subcategoryLongDescription>
      <subcategoryShortDescription>Non-virtual destructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>VIRTUAL_DTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>772</cweCategory>
      <eventSetCaptions>
        <string>Destructor of derived class, which might not be invoked on all instances</string>
        <string>Definition of the base class, which doesn&apos;t have a virtual destructor</string>
        <string>Example where an instance of the base class is deleted</string>
        <string>Example where a pointer to the derived class is upcast to a pointer to the base class</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Invocation of the wrong destructor will likely cause resources in the class to be leaked. The base class destructor ought to be declared as virtual.</subcategoryLocalEffect>
      <subcategoryLongDescription>The correct derived class destructor is not invoked due to the absence of a virtual destructor in the base class</subcategoryLongDescription>
      <subcategoryShortDescription>Non-virtual destructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource such as memory, file handles, or sockets</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of memory or pointers to system resources</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a system resource</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CTOR_DTOR_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>401</cweCategory>
      <eventSetCaptions>
        <string>Constructor implementation which allocates memory</string>
        <string>Destructor implementation which leaks previously-allocated memory</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The memory will not be reclaimed by the destructor, and it cannot be reused until the process terminates.</subcategoryLocalEffect>
      <subcategoryLongDescription>Constructor allocates memory but destructor does not free it</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak in object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>CTOR_DTOR_LEAK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>401</cweCategory>
      <eventSetCaptions>
        <string>Constructor implementation which allocates memory</string>
        <string>Destructor implementation which leaks previously-allocated memory</string>
      </eventSetCaptions>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The memory will not be reclaimed by the destructor, and it cannot be reused until the process terminates.</subcategoryLocalEffect>
      <subcategoryLongDescription>Constructor allocates memory but destructor does not free it</subcategoryLongDescription>
      <subcategoryShortDescription>Resource leak in object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>socket</subcategory>
      </checkerSubcategoryId>
      <cweCategory>403</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The system socket will remain open and unused, reducing the future availability of sockets for other purposes.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a socket resource</subcategoryLongDescription>
      <subcategoryShortDescription>Socket leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>RESOURCE_LEAK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>stream</subcategory>
      </checkerSubcategoryId>
      <cweCategory>404</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The stream&apos;s underlying resource will not be reclaimed and reused, reducing the future availability of the resource.</subcategoryLocalEffect>
      <subcategoryLongDescription>Leak of a stream representing a file or other resource</subcategoryLongDescription>
      <subcategoryShortDescription>Stream leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The cleanup stack may be corrupted at the end of this function, or a resource leak or memory corruption may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Error in the interaction of the code with the Symbian cleanup stack API</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - cleanup stack bug</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>459</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The cleanup stack may be corrupted at the end of this function, or a resource leak or memory corruption may occur.</subcategoryLocalEffect>
      <subcategoryLongDescription>Error in the interaction of the code with the Symbian cleanup stack API</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - cleanup stack bug</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Resource leaks</category>
      <categoryDescription>Resource leaks</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SYMBIAN.CLEANUP_STACK</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>leak</subcategory>
      </checkerSubcategoryId>
      <cweCategory>401</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The memory will not be reclaimed and reused until the process terminates.</subcategoryLocalEffect>
      <subcategoryLongDescription>An object is not on the cleanup stack when a leave occurs or an allocated object goes out of scope, causing a leak</subcategoryLongDescription>
      <subcategoryShortDescription>Symbian - cleanup stack leak</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Rule violations</category>
      <categoryDescription>Rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSIGN_NOT_RETURNING_STAR_THIS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This assignment operator does not directly return *this as a reference to a non-const object, as does a built-in assignment operator.  This unconventional interface or behavior may make it difficult for others to use this class.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-written assignment operator does not return a reference to *this</subcategoryLongDescription>
      <subcategoryShortDescription>Assign does not return *this</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Rule violations</category>
      <categoryDescription>Rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>COPY_WITHOUT_ASSIGN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This class has a user-defined copy constructor but no user-defined assignment operator. If the copy constructor is necessary to manage owned resources then a corresponding assignment operator is usually required. If an object of this type is assigned memory leaks and/or use-after-free errors may occur. Note that a compiler-generated assignment operator will perform only a bit-wise copy for any fields that do not have their own assignment operators defined.</subcategoryLocalEffect>
      <subcategoryLongDescription>Class has user-written copy constructor but no user-written assignment operator</subcategoryLongDescription>
      <subcategoryShortDescription>Copy without assign</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Rule violations</category>
      <categoryDescription>Rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_ASSIGN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This class, which manages owned resources in a constructor and in its destructor, does not have a user-written assignment operator. The compiler-generated assignment operator will perform only bit-wise assignment of any fields that do not have their own assignment operators defined. If an object of this type is assigned these owned resources may be mismanaged, leading to use-after-free errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>Class that owns resources lacks a user-written assignment operator</subcategoryLongDescription>
      <subcategoryShortDescription>Missing assignment operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Rule violations</category>
      <categoryDescription>Rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_COPY</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This class, which manages owned resources in a constructor and in its destructor, does not have a user-written copy constructor. The compiler-generated copy constructor will perform only bit-wise initialization for any fields that do not have their own copy constructors defined.  If an object of this type is copied (including being passed as an argument or returned from a function) these owned resources may be mismanaged, leading to use-after-free errors.</subcategoryLocalEffect>
      <subcategoryLongDescription>Class that owns resources lacks a user-written copy constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Missing copy constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Rule violations</category>
      <categoryDescription>Rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SELF_ASSIGN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This user-written assignment operator does not check for self-assignment. If an object of this type is assigned to itself use-after-free errors may occur if the class owns resources.</subcategoryLocalEffect>
      <subcategoryLongDescription>Assignment operator does not check for self-assignment</subcategoryLongDescription>
      <subcategoryShortDescription>Unsafe assignment operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SECURE_CODING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>676</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this function may result in security implications.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling a function which may pose a security risk if it is used inappropriately</subcategoryLongDescription>
      <subcategoryShortDescription>Calling risky function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SECURE_CODING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>676</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Calling this function may result in security implications.</subcategoryLocalEffect>
      <subcategoryLongDescription>Calling a function which may pose a security risk if it is used inappropriately</subcategoryLongDescription>
      <subcategoryShortDescription>Calling risky function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>fixed_size_dest</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large.</subcategoryLocalEffect>
      <subcategoryLongDescription>A source buffer of statically unknown size is copied into a fixed-size destination buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Copy into fixed size buffer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>STRING_OVERFLOW</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>fixed_size_dest</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The string operation will write past the end of the fixed-size destination buffer if the source buffer is too large.</subcategoryLocalEffect>
      <subcategoryLongDescription>A source buffer of statically unknown size is copied into a fixed-size destination buffer</subcategoryLongDescription>
      <subcategoryShortDescription>Copy into fixed size buffer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.STREAM_BUFFER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Could result in a security violation</subcategoryLocalEffect>
      <subcategoryLongDescription>The called function is unsafe for security related code</subcategoryLongDescription>
      <subcategoryShortDescription>Don&apos;t call</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.STRING_BUFFER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Could result in a security violation</subcategoryLocalEffect>
      <subcategoryLongDescription>The called function is unsafe for security related code</subcategoryLongDescription>
      <subcategoryShortDescription>Don&apos;t call</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>DC.WEAK_CRYPTO</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Could result in a security violation</subcategoryLocalEffect>
      <subcategoryLongDescription>The called function is unsafe for security related code</subcategoryLongDescription>
      <subcategoryShortDescription>Don&apos;t call</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>format_string</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A non-constant format string can potentially be exploited by a user to take control of the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-constant string used to construct a format string</subcategoryLongDescription>
      <subcategoryShortDescription>Format string warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A non-constant format string can potentially be exploited by a user to take control of the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-constant string used to construct a format string</subcategoryLongDescription>
      <subcategoryShortDescription>Format string warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TAINTED_STRING_WARNING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>A non-constant format string can potentially be exploited by a user to take control of the application.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-constant string used to construct a format string</subcategoryLongDescription>
      <subcategoryShortDescription>Format string warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SECURE_TEMP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>377</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker may be able to guess the name of the temporary file, or the permissions may be too loose.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using an insecure temporary file creation function</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure temporary file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>SECURE_TEMP</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>377</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker may be able to guess the name of the temporary file, or the permissions may be too loose.</subcategoryLocalEffect>
      <subcategoryLongDescription>Using an insecure temporary file creation function</subcategoryLongDescription>
      <subcategoryShortDescription>Insecure temporary file</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.NON_CONST_PRINTF_FORMAT_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If an attacker can affect the format string, they may leverage it to corrupt the stack and take over execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-constant printf format string may be susceptible to format string attacks</subcategoryLongDescription>
      <subcategoryShortDescription>Non-constant format string</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>PW.NON_CONST_PRINTF_FORMAT_STRING</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>134</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>If an attacker can affect the format string, they may leverage it to corrupt the stack and take over execution.</subcategoryLocalEffect>
      <subcategoryLongDescription>A non-constant printf format string may be susceptible to format string attacks</subcategoryLongDescription>
      <subcategoryShortDescription>Non-constant format string</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity.</subcategoryLocalEffect>
      <subcategoryLongDescription>Incorrect buffer manipulation using the wrong sizes may result in buffer overflow</subcategoryLongDescription>
      <subcategoryShortDescription>Possible buffer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BUFFER_SIZE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>120</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>Some memory locations will be written with incorrect values, possibly corrupting data structures or data integrity.</subcategoryLocalEffect>
      <subcategoryLongDescription>Incorrect buffer manipulation may result in buffer overflow</subcategoryLongDescription>
      <subcategoryShortDescription>Possible buffer overflow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TOCTOU</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>367</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker could change the filename&apos;s file association or other attributes between the check and use.</subcategoryLocalEffect>
      <subcategoryLongDescription>A check occurs on a file&apos;s attributes before the file is used in a privileged operation, but things may have changed</subcategoryLongDescription>
      <subcategoryShortDescription>Time of check time of use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TOCTOU</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>367</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker could change the filename&apos;s file association or other attributes between the check and use.</subcategoryLocalEffect>
      <subcategoryLongDescription>A check occurs on a file&apos;s attributes before the file is used in a privileged operation, but things may have changed</subcategoryLongDescription>
      <subcategoryShortDescription>Time of check time of use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USER_POINTER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker could craft the pointer to read or write kernel memory and take over the system, or cause a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-land pointer is dereferenced without safety checks in the kernel</subcategoryLongDescription>
      <subcategoryShortDescription>User pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Security best practices violations</category>
      <categoryDescription>Security best practices violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>USER_POINTER</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>20</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>An attacker could craft the pointer to read or write kernel memory and take over the system, or cause a crash.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-land pointer is dereferenced without safety checks in the kernel</subcategoryLongDescription>
      <subcategoryShortDescription>User pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Strict rule violations</category>
      <categoryDescription>Strict rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSIGN_NOT_RETURNING_STAR_THIS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>indirect</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This assignment operator does not directly return *this as a reference to a non-const object, as does a built-in assignment operator. This unconventional interface or behavior may make it difficult for others to use this class.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-written assignment operator does not return a reference to *this</subcategoryLongDescription>
      <subcategoryShortDescription>Assign does not return *this</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Strict rule violations</category>
      <categoryDescription>Strict rule violations</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>ASSIGN_NOT_RETURNING_STAR_THIS</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>usable_for_chained_assignment</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This assignment operator does not directly return *this as a reference to a non-const object, as does a built-in assignment operator. This unconventional interface or behavior may make it difficult for others to use this class.</subcategoryLocalEffect>
      <subcategoryLongDescription>A user-written assignment operator does not return a reference to *this</subcategoryLongDescription>
      <subcategoryShortDescription>Assign does not return *this</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.INSUFFICIENT_FILE_COVERAGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The code in this file might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>File does not reach coverage threshold required by the policy</subcategoryLongDescription>
      <subcategoryShortDescription>Insufficient file coverage</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.INSUFFICIENT_FILE_COVERAGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The code in this file might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>File does not reach coverage threshold required by the policy</subcategoryLongDescription>
      <subcategoryShortDescription>Insufficient file coverage</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.INSUFFICIENT_COVERAGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function does not reach coverage threshold required by the policy</subcategoryLongDescription>
      <subcategoryShortDescription>Insufficient function coverage</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.INSUFFICIENT_COVERAGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function does not reach coverage threshold required by the policy</subcategoryLongDescription>
      <subcategoryShortDescription>Insufficient function coverage</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.*</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This code might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code does not satisfy the testing policy established by your organization.</subcategoryLongDescription>
      <subcategoryShortDescription>Test policy violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.*</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>This code might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Code does not satisfy the testing policy established by your organization.</subcategoryLongDescription>
      <subcategoryShortDescription>Test policy violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.UNCALLED</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function is not called from any test</subcategoryLongDescription>
      <subcategoryShortDescription>Uncalled function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.UNCALLED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function is not called from any test</subcategoryLongDescription>
      <subcategoryShortDescription>Uncalled function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.NO_COVERAGE</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function is not covered by any test</subcategoryLongDescription>
      <subcategoryShortDescription>Uncovered function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Test advisor issues</category>
      <categoryDescription>Test advisor issues</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>TA.NO_COVERAGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <eventSetCaptions>
        <string>Events describing this violation</string>
        <string>Policy rule</string>
      </eventSetCaptions>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect>The function might not be sufficiently tested and might fail in unexpected ways in a production environment.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function is not covered by any test</subcategoryLongDescription>
      <subcategoryShortDescription>Uncovered function</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized members</category>
      <categoryDescription>Uninitialized members</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT_CTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The member will contain an arbitrary value left over from earlier computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>A class member is not initialized by the constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized member</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized members</category>
      <categoryDescription>Uninitialized members</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT_CTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>pointer</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The pointer field will point to an arbitrary memory location, any attempt to write may cause corruption.</subcategoryLocalEffect>
      <subcategoryLongDescription>A pointer field is not initialized in the constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized pointer field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized members</category>
      <categoryDescription>Uninitialized members</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT_CTOR</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect>The field will contain an arbitrary value left over from earlier computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>A scalar field is not initialized by the constructor</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized scalar field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized variables</category>
      <categoryDescription>Uninitialized variables</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The return value will be taken from whatever happens to be on the stack, likely causing incorrect computation.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function that returns non-void is missing a return value</subcategoryLongDescription>
      <subcategoryShortDescription>Missing return statement</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized variables</category>
      <categoryDescription>Uninitialized variables</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>MISSING_RETURN</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>710</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The return value will be taken from whatever happens to be on the stack, likely causing incorrect computation or the function is harder to maintain due to multiple return locations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Function that returns non-void is missing a return value or multiple return statements violate local coding standard</subcategoryLongDescription>
      <subcategoryShortDescription>Missing/multiple returns</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized variables</category>
      <categoryDescription>Uninitialized variables</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The variable will contain an arbitrary value left from earlier computations.</subcategoryLocalEffect>
      <subcategoryLongDescription>Use of an uninitialized variable</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized scalar variable</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Uninitialized variables</category>
      <categoryDescription>Uninitialized variables</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>UNINIT</checkerName>
        <domain>STATIC_C</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>457</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>The variable will contain an arbitrary value left from earlier computations leading to incorrect results.</subcategoryLocalEffect>
      <subcategoryLongDescription>Use of an uninitialized value</subcategoryLongDescription>
      <subcategoryShortDescription>Uninitialized value use</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Unreliable locking behavior</category>
      <categoryDescription>Unreliable locking behavior</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_LOCK_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>boxed_lock</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Potential system-dependent lock collisions</subcategoryLocalEffect>
      <subcategoryLongDescription>Using a boxed primitive as a lock may cause different locking behavior in different versions of the Java VM. locking behavior. It can also cause deadlocks or performance problems if a library also uses the boxed primitive as a lock.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad choice of lock object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Unreliable locking behavior</category>
      <categoryDescription>Unreliable locking behavior</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_LOCK_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>single_thread_lock</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Lock provides no protection</subcategoryLocalEffect>
      <subcategoryLongDescription>Using an object which is only accessible to a single thread as a lock provides no protection against race conditions.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad choice of lock object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>Unreliable locking behavior</category>
      <categoryDescription>Unreliable locking behavior</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>BAD_LOCK_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>unsafe_assign_to_locked_field</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>High</impact>
      <impactDescription>High</impactDescription>
      <subcategoryLocalEffect>Nondeterministic locking behavior</subcategoryLocalEffect>
      <subcategoryLongDescription>The field used as a lock can be assigned a different value while the critical section is operating. This can cause multiple threads to enter the critical section at the same time, which may cause nondeterministic behavior.</subcategoryLongDescription>
      <subcategoryShortDescription>Bad choice of lock object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>227</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls &lt;code&gt;putNextEntry()&lt;/code&gt;, immediately followed by a call to &lt;code&gt;closeEntry()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AM: API misuse</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>227</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls &lt;code&gt;putNextEntry()&lt;/code&gt;, immediately followed by a call to &lt;code&gt;closeEntry()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AM: API misuse</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>227</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls &lt;code&gt;putNextEntry()&lt;/code&gt;, immediately followed by a call to &lt;code&gt;closeEntry()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AM: API misuse</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>227</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls &lt;code&gt;putNextEntry()&lt;/code&gt;, immediately followed by a call to &lt;code&gt;closeEntry()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AM: API misuse</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The &lt;code&gt;equals(Object o)&lt;/code&gt; method shouldn&apos;t make any assumptions about the type of &lt;code&gt;o&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The &lt;code&gt;equals(Object o)&lt;/code&gt; method shouldn&apos;t make any assumptions about the type of &lt;code&gt;o&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_SIGNED_CHECK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression such as &lt;code&gt;((event.detail &amp;amp; SWT.SELECTED) &amp;gt; 0)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_SIGNED_CHECK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_SIGNED_CHECK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression such as &lt;code&gt;((event.detail &amp;amp; SWT.SELECTED) &amp;gt; 0)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_SIGNED_CHECK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IDIOM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class implements Cloneable but does not define or    use the clone method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IDIOM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IDIOM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class implements Cloneable but does not define or use the clone method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IDIOM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IDIOM_NO_SUPER_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This non-final class defines a clone() method that does not call super.clone(). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IDIOM_NO_SUPER_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IDIOM_NO_SUPER_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This non-final class defines a clone() method that does not call super.clone(). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IDIOM_NO_SUPER_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a clone() method but the class doesn&apos;t implement Cloneable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>580</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a clone() method but the class doesn&apos;t implement Cloneable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CN: Bad implementation of cloneable idiom</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_ABSTRACT_SELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;compareTo()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_ABSTRACT_SELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_ABSTRACT_SELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;compareTo()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_ABSTRACT_SELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_SELF_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;compareTo()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_SELF_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_SELF_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;compareTo()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_SELF_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DE_MIGHT_DROP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>391</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method might drop an exception. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DE_MIGHT_DROP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DE: Dropped or ignored exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DE_MIGHT_DROP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>391</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method might drop an exception. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DE_MIGHT_DROP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DE: Dropped or ignored exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DE_MIGHT_IGNORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>391</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method might ignore an exception. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DE_MIGHT_IGNORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DE: Dropped or ignored exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DE_MIGHT_IGNORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>391</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method might ignore an exception. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DE_MIGHT_IGNORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DE: Dropped or ignored exception</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The entrySet() method is allowed to return a view of the      underlying Map in which a single Entry object is reused and returned      during the iteration. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The entrySet() method is allowed to return a view of the underlying Map in which a single Entry object is reused and returned during the iteration. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_RANDOM_USED_ONLY_ONCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_RANDOM_USED_ONLY_ONCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_RANDOM_USED_ONLY_ONCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>If you want to remove all elements from a collection &lt;code&gt;c&lt;/code&gt;, use &lt;code&gt;c.clear&lt;/code&gt;, not &lt;code&gt;c.removeAll(c)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>If you want to remove all elements from a collection &lt;code&gt;c&lt;/code&gt;, use &lt;code&gt;c.clear&lt;/code&gt;, not &lt;code&gt;c.removeAll(c)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a classloader,  which requires a security manager. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a classloader, which requires a security manager. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_DO_INSIDE_DO_PRIVILEDGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes a method that requires a security permission check. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_DO_INSIDE_DO_PRIVILEDGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes a method that requires a security permission check. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_EXIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>382</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Invoking System.exit shuts down the entire Java virtual machine. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_EXIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_EXIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>382</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Invoking System.exit shuts down the entire Java virtual machine. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_EXIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_RUN_FINALIZERS_ON_EXIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>&lt;em&gt;Never call System.runFinalizersOnExit or Runtime.runFinalizersOnExit for any reason: they are among the most dangerous methods in the Java libraries.&lt;/em&gt; -- Joshua Bloch (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_RUN_FINALIZERS_ON_EXIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_RUN_FINALIZERS_ON_EXIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>&lt;em&gt;Never call System.runFinalizersOnExit or Runtime.runFinalizersOnExit for any reason: they are among the most dangerous methods in the Java libraries.&lt;/em&gt; -- Joshua Bloch (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_RUN_FINALIZERS_ON_EXIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>597</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares a &lt;code&gt;java.lang.String&lt;/code&gt; parameter for reference equality using the == or != operators. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ES: Checking String equality using == or !=</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>597</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares a &lt;code&gt;java.lang.String&lt;/code&gt; parameter for reference equality using the == or != operators. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ES: Checking String equality using == or !=</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ES_COMPARING_STRINGS_WITH_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>597</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares &lt;code&gt;java.lang.String&lt;/code&gt; objects for reference equality using the == or != operators. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ES_COMPARING_STRINGS_WITH_EQ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ES: Checking String equality using == or !=</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ES_COMPARING_STRINGS_WITH_EQ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>597</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares &lt;code&gt;java.lang.String&lt;/code&gt; objects for reference equality using the == or != operators. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ES_COMPARING_STRINGS_WITH_EQ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ES: Checking String equality using == or !=</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ABSTRACT_SELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;equals()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ABSTRACT_SELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ABSTRACT_SELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;equals()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ABSTRACT_SELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This equals method is checking to see if the argument is some incompatible type (i.e., a class that is neither a supertype nor subtype of the class that defines the equals method). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This equals method is checking to see if the argument is some incompatible type (i.e., a class that is neither a supertype nor subtype of the class that defines the equals method). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_COMPARETO_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;compareTo(...)&lt;/code&gt; method but inherits its   &lt;code&gt;equals()&lt;/code&gt; method from &lt;code&gt;java.lang.Object&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_COMPARETO_USE_OBJECT_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_COMPARETO_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;compareTo(...)&lt;/code&gt; method but inherits its &lt;code&gt;equals()&lt;/code&gt; method from &lt;code&gt;java.lang.Object&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_COMPARETO_USE_OBJECT_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_GETCLASS_AND_CLASS_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has an equals method that will be broken if it is inherited by subclasses. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_GETCLASS_AND_CLASS_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_GETCLASS_AND_CLASS_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has an equals method that will be broken if it is inherited by subclasses. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_GETCLASS_AND_CLASS_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_SELF_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;equals()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_SELF_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_SELF_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of &lt;code&gt;equals()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_SELF_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_EMPTY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Empty &lt;code&gt;finalize()&lt;/code&gt; methods are useless, so they should   be deleted. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_EMPTY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_EMPTY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Empty &lt;code&gt;finalize()&lt;/code&gt; methods are useless, so they should be deleted. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_EMPTY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_EXPLICIT_INVOCATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an explicit invocation of the &lt;code&gt;finalize()&lt;/code&gt;   method on an object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_EXPLICIT_INVOCATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_EXPLICIT_INVOCATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an explicit invocation of the &lt;code&gt;finalize()&lt;/code&gt; method on an object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_EXPLICIT_INVOCATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_FINALIZER_NULLS_FIELDS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This finalizer nulls out fields. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_FINALIZER_NULLS_FIELDS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_FINALIZER_NULLS_FIELDS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This finalizer nulls out fields. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_FINALIZER_NULLS_FIELDS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_FINALIZER_ONLY_NULLS_FIELDS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This finalizer does nothing except null out fields. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_FINALIZER_ONLY_NULLS_FIELDS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_FINALIZER_ONLY_NULLS_FIELDS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This finalizer does nothing except null out fields. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_FINALIZER_ONLY_NULLS_FIELDS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_MISSING_SUPER_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This &lt;code&gt;finalize()&lt;/code&gt; method does not make a call to its   superclass&apos;s &lt;code&gt;finalize()&lt;/code&gt; method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_MISSING_SUPER_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_MISSING_SUPER_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This &lt;code&gt;finalize()&lt;/code&gt; method does not make a call to its superclass&apos;s &lt;code&gt;finalize()&lt;/code&gt; method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_MISSING_SUPER_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_NULLIFY_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This empty &lt;code&gt;finalize()&lt;/code&gt; method explicitly negates the   effect of any finalizer defined by its superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_NULLIFY_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_NULLIFY_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This empty &lt;code&gt;finalize()&lt;/code&gt; method explicitly negates the effect of any finalizer defined by its superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_NULLIFY_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_USELESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The only thing this &lt;code&gt;finalize()&lt;/code&gt; method does is call   the superclass&apos;s &lt;code&gt;finalize()&lt;/code&gt; method, making it   redundant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_USELESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_USELESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>586</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The only thing this &lt;code&gt;finalize()&lt;/code&gt; method does is call the superclass&apos;s &lt;code&gt;finalize()&lt;/code&gt; method, making it redundant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_USELESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_USES_NEWLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This format string include a newline character (\n). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_USES_NEWLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This format string include a newline character (\n). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_USES_NEWLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection method passes an argument     while compile type Object where a specific type from     the generic type parameters is expected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>GC: Suspicious calls to generic collection methods</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection method passes an argument while compile type Object where a specific type from the generic type parameters is expected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>GC: Suspicious calls to generic collection methods</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_EQUALS_NO_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not   override &lt;code&gt;hashCode()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_EQUALS_NO_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_EQUALS_NO_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not override &lt;code&gt;hashCode()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_EQUALS_NO_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_EQUALS_USE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not   override &lt;code&gt;hashCode()&lt;/code&gt;, and inherits the implementation of   &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_EQUALS_USE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_EQUALS_USE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not override &lt;code&gt;hashCode()&lt;/code&gt;, and inherits the implementation of &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns the identity hash code, an arbitrary value assigned to the object by the VM). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_EQUALS_USE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_HASHCODE_NO_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;hashCode()&lt;/code&gt; method but not an   &lt;code&gt;equals()&lt;/code&gt; method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_HASHCODE_NO_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_HASHCODE_NO_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;hashCode()&lt;/code&gt; method but not an &lt;code&gt;equals()&lt;/code&gt; method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_HASHCODE_NO_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_HASHCODE_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;hashCode()&lt;/code&gt; method but inherits its   &lt;code&gt;equals()&lt;/code&gt; method from &lt;code&gt;java.lang.Object&lt;/code&gt;   (which defines equality by comparing object references). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_HASHCODE_USE_OBJECT_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_HASHCODE_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;hashCode()&lt;/code&gt; method but inherits its &lt;code&gt;equals()&lt;/code&gt; method from &lt;code&gt;java.lang.Object&lt;/code&gt; (which defines equality by comparing object references). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_HASHCODE_USE_OBJECT_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_INHERITS_EQUALS_USE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class inherits &lt;code&gt;equals(Object)&lt;/code&gt; from an abstract   superclass, and &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_INHERITS_EQUALS_USE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_INHERITS_EQUALS_USE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class inherits &lt;code&gt;equals(Object)&lt;/code&gt; from an abstract superclass, and &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns the identity hash code, an arbitrary value assigned to the object by the VM). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_INHERITS_EQUALS_USE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>During the initialization of a class, the class makes an active use of a subclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IC: Initialization circularity</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>During the initialization of a class, the class makes an active use of a subclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IC: Initialization circularity</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IMSE_DONT_CATCH_IMSE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>IllegalMonitorStateException is generally only    thrown in case of a design flaw in your code (calling wait or    notify on an object you do not hold a lock on). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IMSE_DONT_CATCH_IMSE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IMSE: Dubious catching of IllegalMonitorStateException</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IMSE_DONT_CATCH_IMSE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>IllegalMonitorStateException is generally only thrown in case of a design flaw in your code (calling wait or notify on an object you do not hold a lock on). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IMSE_DONT_CATCH_IMSE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IMSE: Dubious catching of IllegalMonitorStateException</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ISC_INSTANTIATE_STATIC_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class allocates an object that is based on a class that only supplies static methods. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ISC_INSTANTIATE_STATIC_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ISC: Instantiated Static Class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ISC_INSTANTIATE_STATIC_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class allocates an object that is based on a class that only supplies static methods. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ISC_INSTANTIATE_STATIC_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ISC: Instantiated Static Class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IT_NO_SUCH_ELEMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;java.util.Iterator&lt;/code&gt; interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IT_NO_SUCH_ELEMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>It: Incorrect definition of Iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IT_NO_SUCH_ELEMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;java.util.Iterator&lt;/code&gt; interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IT_NO_SUCH_ELEMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>It: Incorrect definition of Iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>579</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be storing a non-serializable object into an HttpSession. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>J2EE: J2EE error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>579</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be storing a non-serializable object into an HttpSession. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>J2EE: J2EE error</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The class is annotated with net.jcip.annotations.Immutable, and the rules for that annotation require that all fields are final.    . (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JCIP: Violation of net.jcip annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The class is annotated with net.jcip.annotations.Immutable or javax.annotation.concurrent.Immutable, and the rules for those annotations require that all fields are final. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JCIP: Violation of net.jcip annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_BOOLEAN_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_BOOLEAN_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_BOOLEAN_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_BOOLEAN_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_CLONE_COULD_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This clone method seems to return null in some circumstances, but clone is never     allowed to return a null value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_CLONE_COULD_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_CLONE_COULD_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This clone method seems to return null in some circumstances, but clone is never allowed to return a null value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_CLONE_COULD_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_DOES_NOT_HANDLE_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_DOES_NOT_HANDLE_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_DOES_NOT_HANDLE_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This implementation of equals(Object) violates the contract defined by java.lang.Object.equals() because it does not check for null being passed as the parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_DOES_NOT_HANDLE_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This implementation of equals(Object) violates the contract defined by java.lang.Object.equals() because it does not check for null being passed as the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_TOSTRING_COULD_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This toString method seems to return null in some circumstances. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_TOSTRING_COULD_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_TOSTRING_COULD_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This toString method seems to return null in some circumstances. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_TOSTRING_COULD_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CLASS_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class names should be nouns, in mixed case with the first letter of each internal word capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CLASS_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CLASS_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class names should be nouns, in mixed case with the first letter of each internal word capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CLASS_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CLASS_NOT_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is not derived from another exception, but ends with &apos;Exception&apos;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CLASS_NOT_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CLASS_NOT_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is not derived from another exception, but ends with &apos;Exception&apos;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CLASS_NOT_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CONFUSING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CONFUSING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_CONFUSING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_CONFUSING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FIELD_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Names of fields that are not final should be in mixed case with a lowercase first letter and the first letters of subsequent words capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FIELD_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FIELD_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Names of fields that are not final should be in mixed case with a lowercase first letter and the first letters of subsequent words capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FIELD_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The identifier is a word that is reserved as a keyword in later versions of Java, and your code will need to be changed in order to compile it in later versions of Java. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The identifier is a word that is reserved as a keyword in later versions of Java, and your code will need to be changed in order to compile it in later versions of Java. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This identifier is used as a keyword in later versions of Java. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This identifier is used as a keyword in later versions of Java. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_METHOD_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_METHOD_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_METHOD_NAMING_CONVENTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_METHOD_NAMING_CONVENTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class/interface has a simple name that is identical to that of an implemented/extended interface, except that the interface is in a different package (e.g., &lt;code&gt;alpha.Foo&lt;/code&gt; extends &lt;code&gt;beta.Foo&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class/interface has a simple name that is identical to that of an implemented/extended interface, except that the interface is in a different package (e.g., &lt;code&gt;alpha.Foo&lt;/code&gt; extends &lt;code&gt;beta.Foo&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a simple name that is identical to that of its superclass, except that its superclass is in a different package (e.g., &lt;code&gt;alpha.Foo&lt;/code&gt; extends &lt;code&gt;beta.Foo&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a simple name that is identical to that of its superclass, except that its superclass is in a different package (e.g., &lt;code&gt;alpha.Foo&lt;/code&gt; extends &lt;code&gt;beta.Foo&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_VERY_CONFUSING_INTENTIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_VERY_CONFUSING_INTENTIONAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_VERY_CONFUSING_INTENTIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_VERY_CONFUSING_INTENTIONAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_WRONG_PACKAGE_INTENTIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method in the subclass doesn&apos;t override a similar method in a superclass because the type of a parameter doesn&apos;t exactly match the type of the corresponding parameter in the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_WRONG_PACKAGE_INTENTIONAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_WRONG_PACKAGE_INTENTIONAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method in the subclass doesn&apos;t override a similar method in a superclass because the type of a parameter doesn&apos;t exactly match the type of the corresponding parameter in the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_WRONG_PACKAGE_INTENTIONAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ODR_OPEN_DATABASE_RESOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ODR_OPEN_DATABASE_RESOURCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ODR: Database resource not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ODR_OPEN_DATABASE_RESOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ODR_OPEN_DATABASE_RESOURCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ODR: Database resource not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ODR: Database resource not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ODR: Database resource not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OS_OPEN_STREAM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates an IO stream object, does not assign it to any fields, pass it to other methods that might close it, or return it, and does not appear to close the stream on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.OS_OPEN_STREAM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OS: Stream not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OS_OPEN_STREAM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates an IO stream object, does not assign it to any fields, pass it to other methods that might close it, or return it, and does not appear to close the stream on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.OS_OPEN_STREAM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OS: Stream not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OS_OPEN_STREAM_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates an IO stream object, does not assign it to any fields, pass it to other methods, or return it, and does not appear to close it on all possible exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.OS_OPEN_STREAM_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OS: Stream not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OS_OPEN_STREAM_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method creates an IO stream object, does not assign it to any fields, pass it to other methods, or return it, and does not appear to close it on all possible exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.OS_OPEN_STREAM_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OS: Stream not closed on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The entrySet() method is allowed to return a view of the      underlying Map which is both an Iterator and Map.Entry. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PZ: Warning inspired by Josh Bloch&apos;s and Neal Gafter&apos;s Programming Puzzlers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The entrySet() method is allowed to return a view of the underlying Map which is both an Iterator and Map.Entry. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PZ: Warning inspired by Josh Bloch&apos;s and Neal Gafter&apos;s Programming Puzzlers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON_BAD_PRACTICE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a reference value to a constant using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON_BAD_PRACTICE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON_BAD_PRACTICE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a reference value to a constant using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON_BAD_PRACTICE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares two Boolean values using the == or != operator. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares two Boolean values using the == or != operator. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RR_NOT_CHECKED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method ignores the return value of one of the variants of   &lt;code&gt;java.io.InputStream.read()&lt;/code&gt; which can return multiple bytes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RR_NOT_CHECKED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RR: Method ignores results of InputStream.read()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RR_NOT_CHECKED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method ignores the return value of one of the variants of &lt;code&gt;java.io.InputStream.read()&lt;/code&gt; which can return multiple bytes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RR_NOT_CHECKED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RR: Method ignores results of InputStream.read()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SR_NOT_CHECKED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method ignores the return value of   &lt;code&gt;java.io.InputStream.skip()&lt;/code&gt; which can skip multiple bytes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SR_NOT_CHECKED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RR: Method ignores results of InputStream.read()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SR_NOT_CHECKED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method ignores the return value of &lt;code&gt;java.io.InputStream.skip()&lt;/code&gt; which can skip multiple bytes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SR_NOT_CHECKED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RR: Method ignores results of InputStream.read()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_NEGATING_RESULT_OF_COMPARETO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code negatives the return value of a compareTo or compare method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_NEGATING_RESULT_OF_COMPARETO&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_NEGATING_RESULT_OF_COMPARETO</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code negatives the return value of a compareTo or compare method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_NEGATING_RESULT_OF_COMPARETO&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>253</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method returns a value that is not checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>253</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method returns a value that is not checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The class&apos;s static initializer creates an instance of the class before all of the static fields are assigned. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SI: Suspicious static initializer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The class&apos;s static initializer creates an instance of the class before all of the static fields are assigned. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SI: Suspicious static initializer</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://web.archive.org/web/20090526170426/http://java.sun.com/developer/JDCTechTips/2003/tt1208.html&quot;&gt;From JDC Tech Tip&lt;/a&gt;): The Swing methods show(), setVisible(), and pack() will create the associated peer for the frame. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SW: Swing coding rules</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://web.archive.org/web/20090526170426/http://java.sun.com/developer/JDCTechTips/2003/tt1208.html&quot;&gt;From JDC Tech Tip&lt;/a&gt;): The Swing methods show(), setVisible(), and pack() will create the associated peer for the frame. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SW: Swing coding rules</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or &lt;code&gt;java.lang.Object&lt;/code&gt;, and does not appear to implement the &lt;code&gt;Externalizable&lt;/code&gt; interface or the &lt;code&gt;readObject()&lt;/code&gt; and &lt;code&gt;writeObject()&lt;/code&gt; methods. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or &lt;code&gt;java.lang.Object&lt;/code&gt;, and does not appear to implement the &lt;code&gt;Externalizable&lt;/code&gt; interface or the &lt;code&gt;readObject()&lt;/code&gt; and &lt;code&gt;writeObject()&lt;/code&gt; methods. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD_INNER_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class is an inner class of a non-serializable class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD_INNER_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD_INNER_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class is an inner class of a non-serializable class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD_INNER_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD_STORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A non-serializable value is stored into a non-transient field of a serializable class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD_STORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_BAD_FIELD_STORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A non-serializable value is stored into a non-transient field of a serializable class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_BAD_FIELD_STORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Because this class implements the &lt;code&gt;Comparator&lt;/code&gt; interface, you should consider whether or not it should also implement the &lt;code&gt;Serializable&lt;/code&gt; interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Because this class implements the &lt;code&gt;Comparator&lt;/code&gt; interface, you should consider whether or not it should also implement the &lt;code&gt;Serializable&lt;/code&gt; interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_INNER_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class is an inner class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_INNER_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_INNER_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This Serializable class is an inner class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_INNER_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONFINAL_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not final. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONFINAL_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONFINAL_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not final. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONFINAL_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONLONG_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not long. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONLONG_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONLONG_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not long. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONLONG_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONSTATIC_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not static. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONSTATIC_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NONSTATIC_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a &lt;code&gt;serialVersionUID&lt;/code&gt; field that is not static. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NONSTATIC_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SUITABLE_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface    and its superclass does not. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SUITABLE_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SUITABLE_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface and its superclass does not. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SUITABLE_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Externalizable&lt;/code&gt; interface, but does   not define a void constructor. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Externalizable&lt;/code&gt; interface, but does not define a void constructor. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In order for the readResolve method to be recognized by the serialization mechanism, it must be declared to have a return type of Object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In order for the readResolve method to be recognized by the serialization mechanism, it must be declared to have a return type of Object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_TRANSIENT_FIELD_NOT_RESTORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_TRANSIENT_FIELD_NOT_RESTORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_TRANSIENT_FIELD_NOT_RESTORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_TRANSIENT_FIELD_NOT_RESTORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, but does   not define a &lt;code&gt;serialVersionUID&lt;/code&gt; field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SnVI: Serializable class with no Version ID</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_NO_SERIALVERSIONID</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, but does not define a &lt;code&gt;serialVersionUID&lt;/code&gt; field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_NO_SERIALVERSIONID&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SnVI: Serializable class with no Version ID</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UI_INHERITANCE_UNSAFE_GETRESOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Calling &lt;code&gt;this.getClass().getResource(...)&lt;/code&gt; could give results other than expected if this class is extended by a class in another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UI_INHERITANCE_UNSAFE_GETRESOURCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UI: Unsafe inheritance</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bad practice</category>
      <categoryDescription>FindBugs: Bad practice</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UI_INHERITANCE_UNSAFE_GETRESOURCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Calling &lt;code&gt;this.getClass().getResource(...)&lt;/code&gt; could give results other than expected if this class is extended by a class in another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UI_INHERITANCE_UNSAFE_GETRESOURCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UI: Unsafe inheritance</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_FIELD_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_FIELD_REFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_FIELD_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_FIELD_REFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_METHOD_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_METHOD_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_METHOD_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_METHOD_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_NULL_DEREFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_NULL_DEREFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_NULL_DEREFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_NULL_DEREFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_OPERATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_OPERATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Bogus random noise</category>
      <categoryDescription>FindBugs: Bogus random noise</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NOISE_OPERATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Bogus warning. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NOISE_OPERATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NOISE: Bogus random warning</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BAC_BAD_APPLET_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This constructor calls methods in the parent Applet that rely on the AppletStub. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BAC: Bad Applet Constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BAC_BAD_APPLET_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This constructor calls methods in the parent Applet that rely on the AppletStub. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BAC: Bad Applet Constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_CAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_CAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_CAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_CAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_DOWNCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_DOWNCAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_DOWNCAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast will always throw a ClassCastException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_DOWNCAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code is casting the result of calling &lt;code&gt;toArray()&lt;/code&gt; on a collection to a type more specific than &lt;code&gt;Object[]&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code is casting the result of calling &lt;code&gt;toArray()&lt;/code&gt; on a collection to a type more specific than &lt;code&gt;Object[]&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_IMPOSSIBLE_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>570</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_IMPOSSIBLE_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_ADD_OF_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Adds a byte value and a value which is known to have the 8 lower bits clear. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_ADD_OF_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_ADD_OF_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Adds a byte value and a value which is known to have the 8 lower bits clear. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_ADD_OF_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_AND</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e &amp;amp; C) to D, which will always compare unequal due to the specific values of constants C and D. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_AND&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_AND</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e &amp;amp; C) to D, which will always compare unequal due to the specific values of constants C and D. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_AND&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_AND_ZZ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e &amp;amp; 0) to 0, which will always compare equal. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_AND_ZZ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_AND_ZZ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e &amp;amp; 0) to 0, which will always compare equal. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_AND_ZZ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_IOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e | C) to D, which will always compare unequal due to the specific values of constants C and D. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_IOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_IOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression of the form (e | C) to D, which will always compare unequal due to the specific values of constants C and D. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_IOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_IOR_OF_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Loads a byte value (e.g., a value loaded from a byte array or returned by a method with return type byte)  and performs a bitwise OR with that value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_IOR_OF_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_IOR_OF_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Loads a byte value (e.g., a value loaded from a byte array or returned by a method with return type byte) and performs a bitwise OR with that value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_IOR_OF_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_SIGNED_CHECK_HIGH_BIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression such as &lt;code&gt;((event.detail &amp;amp; SWT.SELECTED) &amp;gt; 0)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_SIGNED_CHECK_HIGH_BIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BIT_SIGNED_CHECK_HIGH_BIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares an expression such as &lt;code&gt;((event.detail &amp;amp; SWT.SELECTED) &amp;gt; 0)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BIT_SIGNED_CHECK_HIGH_BIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BIT: Suspicious bitwise logical expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BOA_BADLY_OVERRIDDEN_ADAPTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The declared method does not actually override a method from Adapter parent class, as its name suggests. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BOA_BADLY_OVERRIDDEN_ADAPTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BOA: Badly Overridden Adapter</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BOA_BADLY_OVERRIDDEN_ADAPTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The declared method does not actually override a method from Adapter parent class, as its name suggests. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BOA_BADLY_OVERRIDDEN_ADAPTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BOA: Badly Overridden Adapter</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_BAD_SHIFT_AMOUNT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs shift of a 32 bit int by a constant amount outside the range 0..31. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_BAD_SHIFT_AMOUNT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BSHIFT: Bad shift</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_BAD_SHIFT_AMOUNT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs shift of a 32 bit int by a constant amount outside the range -31..31. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_BAD_SHIFT_AMOUNT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BSHIFT: Bad shift</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A wrapped primitive value is unboxed and converted to another primitive type as part of the evaluation of a conditional ternary operator (the &lt;code&gt; b ? e1 : e2&lt;/code&gt; operator). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A wrapped primitive value is unboxed and converted to another primitive type as part of the evaluation of a conditional ternary operator (the &lt;code&gt; b ? e1 : e2&lt;/code&gt; operator). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_COMPARETO_RESULTS_MIN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In some situation, this compareTo or compare method returns the  constant Integer.MIN_VALUE, which is an exceptionally bad practice. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_COMPARETO_RESULTS_MIN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CO_COMPARETO_RESULTS_MIN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In some situation, this compareTo or compare method returns the constant Integer.MIN_VALUE, which is an exceptionally bad practice. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CO_COMPARETO_RESULTS_MIN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Co: Problems with implementation of compareTo()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_INCREMENT_IN_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This statement has a return such as &lt;code&gt;return x++;&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_INCREMENT_IN_RETURN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_STORE_OF_CLASS_LITERAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a class literal to a variable and then never uses it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_STORE_OF_CLASS_LITERAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_STORE_OF_CLASS_LITERAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a class literal to a variable and then never uses it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_STORE_OF_CLASS_LITERAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_OVERWRITTEN_INCREMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs an increment operation (e.g., &lt;code&gt;i++&lt;/code&gt;) and then immediately overwrites it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_OVERWRITTEN_INCREMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_OVERWRITTEN_INCREMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs an increment operation (e.g., &lt;code&gt;i++&lt;/code&gt;) and then immediately overwrites it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_OVERWRITTEN_INCREMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ARGUMENTS_WRONG_ORDER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The arguments to this method call seem to be in the wrong order. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ARGUMENTS_WRONG_ORDER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ARGUMENTS_WRONG_ORDER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The arguments to this method call seem to be in the wrong order. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ARGUMENTS_WRONG_ORDER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BAD_MONTH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code passes a constant month value outside the expected range of 0..11 to a method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BAD_MONTH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BAD_MONTH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code passes a constant month value outside the expected range of 0..11 to a method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BAD_MONTH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a BigDecimal from a double value that doesn&apos;t translate well to a decimal number. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a BigDecimal from a double value that doesn&apos;t translate well to a decimal number. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_CALLING_NEXT_FROM_HASNEXT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The hasNext() method invokes the next() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_CALLING_NEXT_FROM_HASNEXT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_CALLING_NEXT_FROM_HASNEXT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The hasNext() method invokes the next() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_CALLING_NEXT_FROM_HASNEXT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection&apos;s method would only make sense if a collection contained itself (e.g., if &lt;code&gt;s.contains(s)&lt;/code&gt; were true). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection&apos;s method would only make sense if a collection contained itself (e.g., if &lt;code&gt;s.contains(s)&lt;/code&gt; were true). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_DOH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This partical method invocation doesn&apos;t make sense, for reasons that should be apparent from inspection. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_DOH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_DOH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This partical method invocation doesn&apos;t make sense, for reasons that should be apparent from inspection. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_DOH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_HASHCODE_ON_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes hashCode on an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_HASHCODE_ON_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_HASHCODE_ON_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes hashCode on an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_HASHCODE_ON_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The Double.longBitsToDouble method is invoked, but a 32 bit int value is passed     as an argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The Double.longBitsToDouble method is invoked, but a 32 bit int value is passed as an argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_VACUOUS_SELF_COLLECTION_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call doesn&apos;t make sense. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_VACUOUS_SELF_COLLECTION_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_VACUOUS_SELF_COLLECTION_CALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call doesn&apos;t make sense. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_VACUOUS_SELF_COLLECTION_CALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Unless an annotation has itself been annotated with  @Retention(RetentionPolicy.RUNTIME), the annotation can&apos;t be observed using reflection (e.g., by using the isAnnotationPresent method).    . (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Unless an annotation has itself been annotated with @Retention(RetentionPolicy.RUNTIME), the annotation can&apos;t be observed using reflection (e.g., by using the isAnnotationPresent method). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html&quot;&gt;Javadoc&lt;/a&gt;) While ScheduledThreadPoolExecutor inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html&quot;&gt;Javadoc&lt;/a&gt;) While ScheduledThreadPoolExecutor inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#ScheduledThreadPoolExecutor(int)&quot;&gt;Javadoc&lt;/a&gt;) A ScheduledThreadPoolExecutor with zero core threads will never execute anything; changes to the max pool size are ignored. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>(&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#ScheduledThreadPoolExecutor(int)&quot;&gt;Javadoc&lt;/a&gt;) A ScheduledThreadPoolExecutor with zero core threads will never execute anything; changes to the max pool size are ignored. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call doesn&apos;t pass any objects to the EasyMock method, so the call doesn&apos;t do anything. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call doesn&apos;t pass any objects to the EasyMock method, so the call doesn&apos;t do anything. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_ARRAY_AND_NONARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) to compare an array and a reference that doesn&apos;t seem to be an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_ARRAY_AND_NONARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_ARRAY_AND_NONARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) to compare an array and a reference that doesn&apos;t seem to be an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_ARRAY_AND_NONARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_BAD_ARRAY_COMPARE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) method on an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_BAD_ARRAY_COMPARE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_BAD_ARRAY_COMPARE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) method on an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_BAD_ARRAY_COMPARE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_INCOMPATIBLE_ARRAY_COMPARE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) to compare two arrays, but the arrays of incompatible types (e.g., String[] and StringBuffer[], or String[] and int[]). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_INCOMPATIBLE_ARRAY_COMPARE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_INCOMPATIBLE_ARRAY_COMPARE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) to compare two arrays, but the arrays of incompatible types (e.g., String[] and StringBuffer[], or String[] and int[]). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_INCOMPATIBLE_ARRAY_COMPARE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_NULL_ARG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object), passing a null value as the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_NULL_ARG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_NULL_ARG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object), passing a null value as the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_NULL_ARG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_CLASS_AND_INTERFACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references,  one of which is a class and the other an interface, where neither the class nor any of its non-abstract subclasses implement the interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_CLASS_AND_INTERFACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_CLASS_AND_INTERFACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references, one of which is a class and the other an interface, where neither the class nor any of its non-abstract subclasses implement the interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_CLASS_AND_INTERFACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_INTERFACES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references of unrelated interface types, where neither is a subtype of the other, and there are no known non-abstract classes which implement both interfaces. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_INTERFACES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_INTERFACES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references of unrelated interface types, where neither is a subtype of the other, and there are no known non-abstract classes which implement both interfaces. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_INTERFACES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_TYPES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references of different class types with no common subclasses. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_TYPES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_TYPES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls equals(Object) on two references of different class types with no common subclasses. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_TYPES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses pointer equality to compare two references that seem to be of different types. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses pointer equality to compare two references that seem to be of different types. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EC: Comparing incompatible types for equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ALWAYS_FALSE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that always returns false. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ALWAYS_FALSE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ALWAYS_FALSE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that always returns false. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ALWAYS_FALSE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ALWAYS_TRUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that always returns true. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ALWAYS_TRUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_ALWAYS_TRUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that always returns true. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_ALWAYS_TRUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_COMPARING_CLASS_NAMES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method checks to see if two objects are the same class by checking to see if the names of their classes are equal. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_COMPARING_CLASS_NAMES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_COMPARING_CLASS_NAMES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method checks to see if two objects are the same class by checking to see if the names of their classes are equal. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_COMPARING_CLASS_NAMES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an enumeration, and equality on enumerations are defined using object identity. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an enumeration, and equality on enumerations are defined using object identity. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OTHER_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an &lt;code&gt;equals()&lt;/code&gt;   method, that doesn&apos;t override the normal &lt;code&gt;equals(Object)&lt;/code&gt; method   defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OTHER_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OTHER_NO_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an &lt;code&gt;equals()&lt;/code&gt; method, that doesn&apos;t override the normal &lt;code&gt;equals(Object)&lt;/code&gt; method defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OTHER_NO_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OTHER_USE_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an &lt;code&gt;equals()&lt;/code&gt;   method, that doesn&apos;t override the normal &lt;code&gt;equals(Object)&lt;/code&gt; method   defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OTHER_USE_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OTHER_USE_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an &lt;code&gt;equals()&lt;/code&gt; method, that doesn&apos;t override the normal &lt;code&gt;equals(Object)&lt;/code&gt; method defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OTHER_USE_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that overrides an equals method in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines an equals method that overrides an equals method in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_SELF_USE_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of the &lt;code&gt;equals()&lt;/code&gt;   method, but inherits the normal &lt;code&gt;equals(Object)&lt;/code&gt; method   defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_SELF_USE_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_SELF_USE_OBJECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a covariant version of the &lt;code&gt;equals()&lt;/code&gt; method, but inherits the normal &lt;code&gt;equals(Object)&lt;/code&gt; method defined in the base &lt;code&gt;java.lang.Object&lt;/code&gt; class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_SELF_USE_OBJECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FB_MISSING_EXPECTED_WARNING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>FindBugs didn&apos;t generate a warning that, according to a @ExpectedWarning annotated,             is expected or desired (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FB_MISSING_EXPECTED_WARNING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FB: FindBugs did not produce the expected warnings on a method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FB_MISSING_EXPECTED_WARNING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>FindBugs didn&apos;t generate a warning that, according to a @ExpectedWarning annotated, is expected or desired (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FB_MISSING_EXPECTED_WARNING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FB: FindBugs did not produce the expected warnings on a method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FB_UNEXPECTED_WARNING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>FindBugs generated a warning that, according to a @NoWarning annotated,             is unexpected or undesired (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FB_UNEXPECTED_WARNING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FB: FindBugs did not produce the expected warnings on a method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FB_UNEXPECTED_WARNING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>FindBugs generated a warning that, according to a @NoWarning annotated, is unexpected or undesired (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FB_UNEXPECTED_WARNING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FB: FindBugs did not produce the expected warnings on a method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code checks to see if a floating point value is equal to the special     Not A Number value (e.g., &lt;code&gt;if (x == Double.NaN)&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FE: Test for floating point equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code checks to see if a floating point value is equal to the special Not A Number value (e.g., &lt;code&gt;if (x == Double.NaN)&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FE: Test for floating point equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_CLOSING_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>close() is being invoked on a value that is always null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_CLOSING_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FL_MATH_USING_FLOAT_PRECISION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method performs math operations using floating point precision. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FL_MATH_USING_FLOAT_PRECISION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FL: Use of floating point precision</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FL_MATH_USING_FLOAT_PRECISION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method performs math operations using floating point precision. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FL_MATH_USING_FLOAT_PRECISION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FL: Use of floating point precision</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_ARG_MISMATCH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A format-string method with a variable number of arguments is called, but the number of arguments passed does not match with the number of % placeholders in the format string. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_ARG_MISMATCH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A format-string method with a variable number of arguments is called, but the number of arguments passed does not match with the number of % placeholders in the format string. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string placeholder is incompatible with the corresponding argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string placeholder is incompatible with the corresponding argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>One of the arguments is incompatible with the corresponding format string specifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>One of the arguments is incompatible with the corresponding format string specifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method is called that expects a Java printf format string and a list of arguments. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method is called that expects a Java printf format string and a list of arguments. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A format-string method with a variable number of arguments is called, but more arguments are passed than are actually used by the format string. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A format-string method with a variable number of arguments is called, but more arguments are passed than are actually used by the format string. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_ILLEGAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string is syntactically invalid, and a runtime exception will occur when this statement is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_ILLEGAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_ILLEGAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string is syntactically invalid, and a runtime exception will occur when this statement is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_ILLEGAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_MISSING_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Not enough arguments are passed to satisfy a placeholder in the format string. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_MISSING_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_MISSING_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Not enough arguments are passed to satisfy a placeholder in the format string. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_MISSING_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string specifies a relative index to request that the argument for the previous format specifier be reused. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The format string specifies a relative index to request that the argument for the previous format specifier be reused. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.GC_UNRELATED_TYPES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection method contains an argument      with an incompatible class from that of the collection&apos;s parameter     (i.e., the type of the argument is neither a supertype nor a subtype         of the corresponding generic type argument). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.GC_UNRELATED_TYPES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>GC: Suspicious calls to generic collection methods</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.GC_UNRELATED_TYPES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This call to a generic collection method contains an argument with an incompatible class from that of the collection&apos;s parameter (i.e., the type of the argument is neither a supertype nor a subtype of the corresponding generic type argument). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.GC_UNRELATED_TYPES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>GC: Suspicious calls to generic collection methods</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method, field or class declares a generic signature where a non-hashable class is used in context where a hashable class is required. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method, field or class declares a generic signature where a non-hashable class is used in context where a hashable class is required. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_USE_OF_UNHASHABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A class defines an equals(Object)  method but not a hashCode() method, and thus doesn&apos;t fulfill the requirement that equal objects have equal hashCodes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_USE_OF_UNHASHABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HE_USE_OF_UNHASHABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A class defines an equals(Object) method but not a hashCode() method, and thus doesn&apos;t fulfill the requirement that equal objects have equal hashCodes. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HE_USE_OF_UNHASHABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HE: Equal objects must have equal hashcodes</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_2_LONG_AS_INSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts a 32-bit int value to a 64-bit long value, and then passes that value for a method parameter that requires an absolute time value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_2_LONG_AS_INSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_2_LONG_AS_INSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts a 32-bit int value to a 64-bit long value, and then passes that value for a method parameter that requires an absolute time value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_2_LONG_AS_INSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts an integral value (e.g., int or long) to a double precision floating point number and then passing the result to the Math.ceil() function, which rounds a double to the next higher integer value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts an integral value (e.g., int or long) to a double precision floating point number and then passing the result to the Math.ceil() function, which rounds a double to the next higher integer value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts an int value to a float precision floating point number and then passing the result to the Math.round() function, which returns the int/long closest to the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code converts an int value to a float precision floating point number and then passing the result to the Math.round() function, which returns the int/long closest to the argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A JUnit assertion is performed in a run method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A JUnit assertion is performed in a run method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_BAD_SUITE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and defines a suite() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_BAD_SUITE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_BAD_SUITE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and defines a suite() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_BAD_SUITE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_NO_TESTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase but has not implemented any test methods (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_NO_TESTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_NO_TESTS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase but has not implemented any test methods (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_NO_TESTS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_SETUP_NO_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the setUp method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_SETUP_NO_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_SETUP_NO_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the setUp method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_SETUP_NO_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_SUITE_NOT_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the suite() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_SUITE_NOT_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_SUITE_NOT_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the suite() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_SUITE_NOT_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_TEARDOWN_NO_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the tearDown method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_TEARDOWN_NO_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IJU_TEARDOWN_NO_SUPER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Class is a JUnit TestCase and implements the tearDown method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IJU_TEARDOWN_NO_SUPER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IJU: Improperly implemented JUnit TestCase</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_CONTAINER_ADDED_TO_ITSELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A collection is added to itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_CONTAINER_ADDED_TO_ITSELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_CONTAINER_ADDED_TO_ITSELF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A collection is added to itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_CONTAINER_ADDED_TO_ITSELF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_INFINITE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This loop doesn&apos;t seem to have a way to terminate (other than by perhaps throwing an exception). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_INFINITE_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_INFINITE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This loop doesn&apos;t seem to have a way to terminate (other than by perhaps throwing an exception). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_INFINITE_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_INFINITE_RECURSIVE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>674</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method unconditionally invokes itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_INFINITE_RECURSIVE_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IL_INFINITE_RECURSIVE_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>674</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method unconditionally invokes itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IL_INFINITE_RECURSIVE_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IL: Infinite Loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_MULTIPLYING_RESULT_OF_IREM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code multiplies the result of an integer remaining by an integer constant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_MULTIPLYING_RESULT_OF_IREM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_MULTIPLYING_RESULT_OF_IREM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code multiplies the result of an integer remaining by an integer constant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_MULTIPLYING_RESULT_OF_IREM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_INT_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares an int value with a long constant that is outside the range of values that can be represented as an int value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_INT_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_INT_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares an int value with a long constant that is outside the range of values that can be represented as an int value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_INT_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares a value that is guaranteed to be non-negative with a negative constant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code compares a value that is guaranteed to be non-negative with a negative constant. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Signed bytes can only have a value in the range -128 to 127. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Signed bytes can only have a value in the range -128 to 127. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code opens a file in append mode and then wraps the result in an object output stream. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IO: Input/Output problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code opens a file in append mode and then wraps the result in an object output stream. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IO: Input/Output problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The initial value of this parameter is ignored, and the parameter is overwritten here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IP: Ignored parameter</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The initial value of this parameter is ignored, and the parameter is overwritten here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IP: Ignored parameter</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MF_CLASS_MASKS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a field with the same name as a visible instance field in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MF_CLASS_MASKS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MF: Masked Field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MF_CLASS_MASKS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a field with the same name as a visible instance field in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MF_CLASS_MASKS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MF: Masked Field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MF_METHOD_MASKS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method defines a local variable with the same name as a field in this class or a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MF_METHOD_MASKS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MF: Masked Field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MF_METHOD_MASKS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method defines a local variable with the same name as a field in this class or a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MF_METHOD_MASKS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MF: Masked Field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_NULL_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false, since the value being checked is guaranteed to be null. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_NULL_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false, since the value being checked is guaranteed to be null. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ALWAYS_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A null pointer is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ALWAYS_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ALWAYS_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A null pointer is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ALWAYS_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ALWAYS_NULL_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A pointer which is null on an exception path is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ALWAYS_NULL_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ALWAYS_NULL_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A pointer which is null on an exception path is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ALWAYS_NULL_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ARGUMENT_MIGHT_BE_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A parameter to this method has been identified as a value that should     always be checked to see whether or not it is null, but it is being dereferenced     without a preceding null check. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ARGUMENT_MIGHT_BE_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_ARGUMENT_MIGHT_BE_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A parameter to this method has been identified as a value that should always be checked to see whether or not it is null, but it is being dereferenced without a preceding null check. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_ARGUMENT_MIGHT_BE_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_CLOSING_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>close() is being invoked on a value that is always null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_CLOSING_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_GUARANTEED_DEREF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a statement or branch that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_GUARANTEED_DEREF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_GUARANTEED_DEREF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a statement or branch that if executed guarantees that a value is null at this point, and that value that is guaranteed to be dereferenced (except on forward paths involving runtime exceptions). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_GUARANTEED_DEREF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a statement or branch on an exception path                 that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a statement or branch on an exception path that if executed guarantees that a value is null at this point, and that value that is guaranteed to be dereferenced (except on forward paths involving runtime exceptions). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The field is marked as nonnull, but isn&apos;t written to by the constructor. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The field is marked as nonnull, but isn&apos;t written to by the constructor. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_PARAM_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method passes a null value as the parameter of a method which     must be nonnull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_PARAM_VIOLATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_PARAM_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method passes a null value as the parameter of a method which must be nonnull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_PARAM_VIOLATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_RETURN_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may return a null value, but the method (or a superclass method       which it overrides) is declared to return @NonNull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_RETURN_VIOLATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NONNULL_RETURN_VIOLATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may return a null value, but the method (or a superclass method which it overrides) is declared to return @NonNull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NONNULL_RETURN_VIOLATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false, since the value being checked is guaranteed to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return false, since the value being checked is guaranteed to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt;  guarantees that a null value will be dereferenced, which would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt; guarantees that a null value will be dereferenced, which would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A reference value which is null on some exception control path is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A reference value which is null on some exception control path is dereferenced here. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method call passes a null value for a nonnull method parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method call passes a null value for a nonnull method parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A possibly-null value is passed at a call site where all known       target methods require the parameter to be nonnull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A possibly-null value is passed at a call site where all known target methods require the parameter to be nonnull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF_NONVIRTUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A possibly-null value is passed to a nonnull method parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF_NONVIRTUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_PARAM_DEREF_NONVIRTUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A possibly-null value is passed to a nonnull method parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_PARAM_DEREF_NONVIRTUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_OPTIONAL_RETURN_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The usage of Optional return type always mean that explicit null returns were not desired by design. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_OPTIONAL_RETURN_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_STORE_INTO_NONNULL_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that could be null is stored into a field that has been annotated as NonNull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_STORE_INTO_NONNULL_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_STORE_INTO_NONNULL_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that could be null is stored into a field that has been annotated as NonNull. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_STORE_INTO_NONNULL_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_UNWRITTEN_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The program is dereferencing a field that does not seem to ever have a non-null value written to it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_UNWRITTEN_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_UNWRITTEN_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The program is dereferencing a field that does not seem to ever have a non-null value written to it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_UNWRITTEN_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_BAD_EQUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method &lt;code&gt;equal(Object)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_BAD_EQUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_BAD_EQUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method &lt;code&gt;equal(Object)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_BAD_EQUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_LCASE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method called &lt;code&gt;hashcode()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_LCASE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_LCASE_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method called &lt;code&gt;hashcode()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_LCASE_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_LCASE_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method called &lt;code&gt;tostring()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_LCASE_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_LCASE_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a method called &lt;code&gt;tostring()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_LCASE_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_METHOD_CONSTRUCTOR_CONFUSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This regular method has the same name as the class it is defined in. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_METHOD_CONSTRUCTOR_CONFUSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_METHOD_CONSTRUCTOR_CONFUSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This regular method has the same name as the class it is defined in. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_METHOD_CONSTRUCTOR_CONFUSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_VERY_CONFUSING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_VERY_CONFUSING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_VERY_CONFUSING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The referenced methods have names that differ only by capitalization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_VERY_CONFUSING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_WRONG_PACKAGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method in the subclass doesn&apos;t override a similar method in a superclass because the type of a parameter doesn&apos;t exactly match the type of the corresponding parameter in the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_WRONG_PACKAGE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NM_WRONG_PACKAGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method in the subclass doesn&apos;t override a similar method in a superclass because the type of a parameter doesn&apos;t exactly match the type of the corresponding parameter in the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NM_WRONG_PACKAGE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Nm: Confusing name</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method assigns a literal boolean value (true or false) to a boolean variable inside       an if or while expression. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>QBA: Questionable Boolean Assignment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>481</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method assigns a literal boolean value (true or false) to a boolean variable inside an if or while expression. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>QBA: Questionable Boolean Assignment</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares two reference values using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RC_REF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares two reference values using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RC_REF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RC: Questionable use of reference equality rather than calling equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is checked here to see whether it is null, but this value can&apos;t be null because it was previously dereferenced and if it were null a null pointer exception would have occurred at the earlier dereference. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is checked here to see whether it is null, but this value can&apos;t be null because it was previously dereferenced and if it were null a null pointer exception would have occurred at the earlier dereference. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code here uses a regular expression that is invalid according to the syntax for regular expressions. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code here uses a regular expression that is invalid according to the syntax for regular expressions. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code here uses &lt;code&gt;File.separator&lt;/code&gt; where a regular expression is required. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code here uses &lt;code&gt;File.separator&lt;/code&gt; where a regular expression is required. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_POSSIBLE_UNINTENDED_PATTERN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A String function is being invoked and &quot;.&quot; is being passed to a parameter that takes a regular expression as an argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_POSSIBLE_UNINTENDED_PATTERN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RE_POSSIBLE_UNINTENDED_PATTERN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>185</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A String function is being invoked and &quot;.&quot; or &quot;|&quot; is being passed to a parameter that takes a regular expression as an argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RE_POSSIBLE_UNINTENDED_PATTERN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RE: Regular expressions</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_01_TO_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A random value from 0 to 1 is being coerced to the integer value 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_01_TO_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_01_TO_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A random value from 0 to 1 is being coerced to the integer value 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_01_TO_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_ABSOLUTE_VALUE_OF_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a hashcode and then computes the absolute value of that hashcode. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_ABSOLUTE_VALUE_OF_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_ABSOLUTE_VALUE_OF_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a hashcode and then computes the absolute value of that hashcode. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_ABSOLUTE_VALUE_OF_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a random signed integer and then computes the absolute value of that random integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a random signed integer and then computes the absolute value of that random integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invoked a compareTo or compare method, and checks to see if the return value is a specific value, such as 1 or -1. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invoked a compareTo or compare method, and checks to see if the return value is a specific value, such as 1 or -1. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_EXCEPTION_NOT_THROWN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates an exception (or error) object, but doesn&apos;t do anything with it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_EXCEPTION_NOT_THROWN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_EXCEPTION_NOT_THROWN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates an exception (or error) object, but doesn&apos;t do anything with it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_EXCEPTION_NOT_THROWN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value of this method should be checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value of this method should be checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value of this method should be checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value of this method should be checked. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RPC_REPEATED_CONDITIONAL_TEST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code contains a conditional test is performed twice, one right after the other (e.g., &lt;code&gt;x == 0 || x == 0&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RPC_REPEATED_CONDITIONAL_TEST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RpC: Repeated conditional test</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RPC_REPEATED_CONDITIONAL_TEST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code contains a conditional test is performed twice, one right after the other (e.g., &lt;code&gt;x == 0 || x == 0&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RPC_REPEATED_CONDITIONAL_TEST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RpC: Repeated conditional test</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a field; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a field; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a field with itself, and may indicate a typo or a logic error. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a field with itself, and may indicate a typo or a logic error. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_COMPUTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs a nonsensical computation of a field with another reference to the same field (e.g., x&amp;amp;x or x-x). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_COMPUTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_SELF_COMPUTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs a nonsensical computation of a field with another reference to the same field (e.g., x&amp;amp;x or x-x). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_SELF_COMPUTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a local variable, and there is a field with an identical name. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a local variable, and there is a field with an identical name. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a local variable with itself, and may indicate a typo or a logic error. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method compares a local variable with itself, and may indicate a typo or a logic error. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_COMPUTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs a nonsensical computation of a local variable with another reference to the same variable (e.g., x&amp;amp;x or x-x). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_COMPUTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_COMPUTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs a nonsensical computation of a local variable with another reference to the same variable (e.g., x&amp;amp;x or x-x). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_COMPUTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value stored in the previous switch case is overwritten here due to a switch fall through. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value stored in the previous switch case is overwritten here due to a switch fall through. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value stored in the previous switch case is ignored here due to a switch fall through to a place where     an exception is thrown. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value stored in the previous switch case is ignored here due to a switch fall through to a place where an exception is thrown. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_THREADLOCAL_DEADLY_EMBRACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but should probably be a static inner class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_THREADLOCAL_DEADLY_EMBRACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_THREADLOCAL_DEADLY_EMBRACE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but should probably be a static inner class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_THREADLOCAL_DEADLY_EMBRACE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIO_SUPERFLUOUS_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Type check performed using the instanceof operator where it can be statically determined whether the object is of the type requested. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIO_SUPERFLUOUS_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIO: Superfluous instanceof</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIO_SUPERFLUOUS_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Type check performed using the instanceof operator where it can be statically determined whether the object is of the type requested. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIO_SUPERFLUOUS_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIO: Superfluous instanceof</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BRSA_BAD_RESULTSET_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BRSA_BAD_RESULTSET_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_BAD_PREPARED_STATEMENT_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to a setXXX method of a prepared statement was made where the parameter index is 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_BAD_PREPARED_STATEMENT_ACCESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_BAD_PREPARED_STATEMENT_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to a setXXX method of a prepared statement was made where the parameter index is 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_BAD_PREPARED_STATEMENT_ACCESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_BAD_RESULTSET_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_BAD_RESULTSET_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_BAD_RESULTSET_ACCESS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STI_INTERRUPTED_ON_CURRENTTHREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the Thread.currentThread() call, just to call the interrupted() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STI_INTERRUPTED_ON_CURRENTTHREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STI: Suspicious Thread Interrupted</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STI_INTERRUPTED_ON_CURRENTTHREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the Thread.currentThread() call, just to call the interrupted() method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STI_INTERRUPTED_ON_CURRENTTHREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STI: Suspicious Thread Interrupted</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the Thread.interrupted() method on a Thread object that appears to be a Thread object that is not the current thread. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STI: Suspicious Thread Interrupted</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the Thread.interrupted() method on a Thread object that appears to be a Thread object that is not the current thread. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STI: Suspicious Thread Interrupted</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_METHOD_MUST_BE_PRIVATE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, and defines a method   for custom serialization/deserialization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_METHOD_MUST_BE_PRIVATE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_METHOD_MUST_BE_PRIVATE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, and defines a method for custom serialization/deserialization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_METHOD_MUST_BE_PRIVATE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_READ_RESOLVE_IS_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In order for the readResolve method to be recognized by the serialization mechanism, it must not be declared as a static method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_READ_RESOLVE_IS_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_READ_RESOLVE_IS_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>In order for the readResolve method to be recognized by the serialization mechanism, it must not be declared as a static method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_READ_RESOLVE_IS_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as carrying a type qualifier annotation is         consumed in a location or locations requiring that the value not         carry that annotation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as carrying a type qualifier annotation is consumed in a location or locations requiring that the value not carry that annotation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as carrying a type qualifier annotation is         compared with a value that doesn&apos;t ever carry that qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as carrying a type qualifier annotation is compared with a value that doesn&apos;t ever carry that qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that is annotated as possibility not being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that requires values denoted by that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that is annotated as possibility not being an instance of the values denoted by the type qualifier, and the value is guaranteed to be used in a way that requires values denoted by that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that is annotated as possibility being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that prohibits values denoted by that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value that is annotated as possibility being an instance of the values denoted by the type qualifier, and the value is guaranteed to be used in a way that prohibits values denoted by that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as not carrying a type qualifier annotation is guaranteed         to be consumed in a location or locations requiring that the value does         carry that annotation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value specified as not carrying a type qualifier annotation is guaranteed to be consumed in a location or locations requiring that the value does carry that annotation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is being used in a way that requires the value be annotation with a type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This anonymous class defined a method that is not directly invoked and does not override a method in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UMAC: Uncallable method of anonymous class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This anonymous class defined a method that is not directly invoked and does not override a method in a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UMAC: Uncallable method of anonymous class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UR_UNINIT_READ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This constructor reads a field which has not yet been assigned a value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UR_UNINIT_READ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UR: Uninitialized read of field in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UR_UNINIT_READ</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This constructor reads a field which has not yet been assigned a value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UR_UNINIT_READ&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UR: Uninitialized read of field in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method is invoked in the constructor of the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UR: Uninitialized read of field in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method is invoked in the constructor of the superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UR: Uninitialized read of field in constructor</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes toString on an (anonymous) array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes toString on an (anonymous) array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_TOSTRING_ON_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes toString on an array, which will generate a fairly useless result such as [C@16f0472. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_TOSTRING_ON_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_INVOKING_TOSTRING_ON_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code invokes toString on an array, which will generate a fairly useless result such as [C@16f0472. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_INVOKING_TOSTRING_ON_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>One of the arguments being formatted with a format string is an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>One of the arguments being formatted with a format string is an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USELESS_STRING: Useless/non-informative string generated</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_NULL_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>All writes to this field are of the constant value null, and thus all reads of the field will return null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_NULL_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_NULL_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>All writes to this field are of the constant value null, and thus all reads of the field will return null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_NULL_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_UNWRITTEN_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never written. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_UNWRITTEN_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_UNWRITTEN_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never written. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_UNWRITTEN_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code passes a primitive array to a function that takes a variable number of object arguments. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VA: Var arg problems</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code passes a primitive array to a function that takes a variable number of object arguments. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VA: Var arg problems</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VR_UNRESOLVABLE_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class makes a reference to a class or method that can not be     resolved using against the libraries it is being analyzed with. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VR: Version compatibility issue</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Correctness</category>
      <categoryDescription>FindBugs: Correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VR_UNRESOLVABLE_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class makes a reference to a class or method that can not be resolved using against the libraries it is being analyzed with. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VR: Version compatibility issue</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts a Collection to an abstract collection (such as &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, or &lt;code&gt;Map&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts a Collection to an abstract collection (such as &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, or &lt;code&gt;Map&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts an abstract collection (such as a Collection, List, or Set) to a specific concrete implementation (such as an ArrayList or HashSet). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts an abstract collection (such as a Collection, List, or Set) to a specific concrete implementation (such as an ArrayList or HashSet). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_UNCONFIRMED_CAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast is unchecked, and not all instances of the type casted from can be cast to the type it is being cast to. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_UNCONFIRMED_CAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_UNCONFIRMED_CAST</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This cast is unchecked, and not all instances of the type casted from can be cast to the type it is being cast to. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_UNCONFIRMED_CAST&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code performs an unchecked cast of the return value of a method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code performs an unchecked cast of the return value of a method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_VACUOUS_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>571</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return true (unless the value being tested is null). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_VACUOUS_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BC_VACUOUS_INSTANCEOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>571</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instanceof test will always return true (unless the value being tested is null). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BC_VACUOUS_INSTANCEOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BC: Bad casts of object references</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ESYNC_EMPTY_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>585</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code contains an empty synchronized block. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ESYNC_EMPTY_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ESync: Empty Synchronized blocks</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs an unsigned right shift, whose result is then cast to a short or byte, which discards the upper bits of the result. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BSHIFT: Bad shift</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code performs an unsigned right shift, whose result is then cast to a short or byte, which discards the upper bits of the result. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>BSHIFT: Bad shift</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CD_CIRCULAR_DEPENDENCY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a circular dependency with other classes. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CD: Circular Dependencies</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CD_CIRCULAR_DEPENDENCY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a circular dependency with other classes. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CD: Circular Dependencies</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CI_CONFUSED_INHERITANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is declared to be final, but declares fields to be protected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CI_CONFUSED_INHERITANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CI: Confused Inheritance</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.CI_CONFUSED_INHERITANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is declared to be final, but declares fields to be protected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.CI_CONFUSED_INHERITANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>CI: Confused Inheritance</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DB_DUPLICATE_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the same code to implement two branches of a conditional branch. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DB_DUPLICATE_BRANCHES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DB: Duplicate Branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DB_DUPLICATE_BRANCHES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the same code to implement two branches of a conditional branch. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DB_DUPLICATE_BRANCHES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DB: Duplicate Branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DB_DUPLICATE_SWITCH_CLAUSES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the same code to implement two clauses of a switch statement. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DB_DUPLICATE_SWITCH_CLAUSES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DB: Duplicate Branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DB_DUPLICATE_SWITCH_CLAUSES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the same code to implement two clauses of a switch statement. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DB_DUPLICATE_SWITCH_CLAUSES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DB: Duplicate Branches</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_IN_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This statement assigns to a local variable in a return statement. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_IN_RETURN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_IN_RETURN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This statement assigns to a local variable in a return statement. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_IN_RETURN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_OF_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code stores null into a local variable, and the stored value is not read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_OF_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_OF_NULL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code stores null into a local variable, and the stored value is not read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_OF_NULL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>563</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DLS: Dead local store</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_HARDCODED_ABSOLUTE_FILENAME</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code constructs a File object using a hard coded to an absolute pathname (e.g., &lt;code&gt;new File(&quot;/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment&quot;);&lt;/code&gt; (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_HARDCODED_ABSOLUTE_FILENAME&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_HARDCODED_ABSOLUTE_FILENAME</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code constructs a File object using a hard coded to an absolute pathname (e.g., &lt;code&gt;new File(&quot;/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment&quot;);&lt;/code&gt; (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_HARDCODED_ABSOLUTE_FILENAME&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be passing a non-serializable object to the ObjectOutput.writeObject method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be passing a non-serializable object to the ObjectOutput.writeObject method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_USELESS_SUBSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes substring(0) on a String, which returns the original value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_USELESS_SUBSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_USELESS_SUBSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes substring(0) on a String, which returns the original value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_USELESS_SUBSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DMI: Dubious method invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A Thread object is passed as a parameter to a method where a Runnable is expected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A Thread object is passed as a parameter to a method where a Runnable is expected. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_UNSUPPORTED_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>All targets of this method invocation throw an UnsupportedOperationException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_UNSUPPORTED_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_UNSUPPORTED_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>All targets of this method invocation throw an UnsupportedOperationException. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_UNSUPPORTED_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_DOESNT_OVERRIDE_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends a class that defines an equals method and adds fields, but doesn&apos;t define an equals method itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_DOESNT_OVERRIDE_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_DOESNT_OVERRIDE_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends a class that defines an equals method and adds fields, but doesn&apos;t define an equals method itself. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_DOESNT_OVERRIDE_EQUALS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_UNUSUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class doesn&apos;t do any of the patterns we recognize for checking that the type of the argument is compatible with the type of the &lt;code&gt;this&lt;/code&gt; object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_UNUSUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EQ_UNUSUAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>595</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class doesn&apos;t do any of the patterns we recognize for checking that the type of the argument is compatible with the type of the &lt;code&gt;this&lt;/code&gt; object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EQ_UNUSUAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Eq: Problems with implementation of equals()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FE_FLOATING_POINT_EQUALITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This operation compares two floating point values for equality. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FE_FLOATING_POINT_EQUALITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FE: Test for floating point equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FE_FLOATING_POINT_EQUALITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This operation compares two floating point values for equality. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FE_FLOATING_POINT_EQUALITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FE: Test for floating point equality</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>An argument not of type Boolean is being formatted with a %b format specifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>An argument not of type Boolean is being formatted with a %b format specifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FS: Format string problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>An inner class is invoking a method that could be resolved to either a inherited method or a method defined in an outer class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IA: Ambiguous invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>An inner class is invoking a method that could be resolved to either a inherited method or a method defined in an outer class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IA: Ambiguous invocation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IC_INIT_CIRCULARITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A circularity was detected in the static initializers of the two   classes referenced by the bug instance. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IC_INIT_CIRCULARITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IC: Initialization circularity</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IC_INIT_CIRCULARITY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A circularity was detected in the static initializers of the two classes referenced by the bug instance. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IC_INIT_CIRCULARITY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IC: Initialization circularity</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_IDIV_CAST_TO_DOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts the result of an integral division (e.g., int or long division) operation to double or float. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_IDIV_CAST_TO_DOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_IDIV_CAST_TO_DOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code casts the result of an integral division (e.g., int or long division) operation to double or float. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_IDIV_CAST_TO_DOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code performs integer multiply and then converts the result to a long. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code performs integer multiply and then converts the result to a long. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ICAST: Casting from integer values</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code computes the average of two integers using either division or signed right shift, and then uses the result as the index of an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code computes the average of two integers using either division or signed right shift, and then uses the result as the index of an array. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_BAD_CHECK_FOR_ODD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code uses x % 2 == 1 to check to see if a value is odd, but this won&apos;t work for negative numbers (e.g., (-5) % 2 == -1). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_BAD_CHECK_FOR_ODD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IM_BAD_CHECK_FOR_ODD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code uses x % 2 == 1 to check to see if a value is odd, but this won&apos;t work for negative numbers (e.g., (-5) % 2 == -1). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IM_BAD_CHECK_FOR_ODD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IM: Questionable integer math</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_REM_BY_1</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Any expression (exp % 1) is guaranteed to always return zero. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_REM_BY_1&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_BAD_REM_BY_1</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Any expression (exp % 1) is guaranteed to always return zero. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_BAD_REM_BY_1&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_VACUOUS_BIT_OPERATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This is an integer bit operation (and, or, or exclusive or) that doesn&apos;t do any useful work (e.g., &lt;code&gt;v &amp;amp; 0xffffffff&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_VACUOUS_BIT_OPERATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_VACUOUS_BIT_OPERATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This is an integer bit operation (and, or, or exclusive or) that doesn&apos;t do any useful work (e.g., &lt;code&gt;v &amp;amp; 0xffffffff&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_VACUOUS_BIT_OPERATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_VACUOUS_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is an integer comparison that always returns the same value (e.g., x &amp;lt;= Integer.MAX_VALUE). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_VACUOUS_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.INT_VACUOUS_COMPARISON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is an integer comparison that always returns the same value (e.g., x &amp;lt;= Integer.MAX_VALUE). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.INT_VACUOUS_COMPARISON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>INT: Suspicious integer expression</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends from a Servlet class, and uses an instance member variable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MTIA: Multithreaded Instance Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends from a Servlet class, and uses an instance member variable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MTIA: Multithreaded Instance Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends from a Struts Action class, and uses an instance member variable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MTIA: Multithreaded Instance Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class extends from a Struts Action class, and uses an instance member variable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MTIA: Multithreaded Instance Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_DEREFERENCE_OF_READLINE_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The result of invoking readLine() is dereferenced without checking to see if the result is null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_DEREFERENCE_OF_READLINE_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_DEREFERENCE_OF_READLINE_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The result of invoking readLine() is dereferenced without checking to see if the result is null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_DEREFERENCE_OF_READLINE_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This is a read of a field is never initialized within any constructor, and is therefore could be null after the object is initialized. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This is a read of a field is never initialized within any constructor, and is therefore could be null after the object is initialized. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The result of invoking readLine() is immediately dereferenced. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The result of invoking readLine() is immediately dereferenced. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_LOAD_OF_KNOWN_NULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The variable referenced at this point is known to be null due to an earlier    check against null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_LOAD_OF_KNOWN_NULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_LOAD_OF_KNOWN_NULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The variable referenced at this point is known to be null due to an earlier check against null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_LOAD_OF_KNOWN_NULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_METHOD_PARAMETER_RELAXING_ANNOTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method should always implement the contract of a method it overrides. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method should always implement the contract of a method it overrides. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_METHOD_RETURN_RELAXING_ANNOTATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A method should always implement the contract of a method it overrides. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_METHOD_RETURN_RELAXING_ANNOTATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value from a method is dereferenced without a null check, and the return value of that method is one that should generally be checked for null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The return value from a method is dereferenced without a null check, and the return value of that method is one that should generally be checked for null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt;  guarantees that a null value will be dereferenced, which would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt; guarantees that a null value will be dereferenced, which would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This parameter is always used in a way that requires it to be nonnull, but the parameter is explicitly annotated as being Nullable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This parameter is always used in a way that requires it to be nonnull, but the parameter is explicitly annotated as being Nullable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The program is dereferencing a public or protected field that does not seem to ever have a non-null value written to it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The program is dereferencing a public or protected field that does not seem to ever have a non-null value written to it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NS_DANGEROUS_NON_SHORT_CIRCUIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be using non-short-circuit logic (e.g., &amp;amp; or |) rather than short-circuit logic (&amp;amp;&amp;amp; or ||). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NS_DANGEROUS_NON_SHORT_CIRCUIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NS: Suspicious use of non-short-circuit boolean operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NS_DANGEROUS_NON_SHORT_CIRCUIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be using non-short-circuit logic (e.g., &amp;amp; or |) rather than short-circuit logic (&amp;amp;&amp;amp; or ||). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NS_DANGEROUS_NON_SHORT_CIRCUIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NS: Suspicious use of non-short-circuit boolean operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NS_NON_SHORT_CIRCUIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be using non-short-circuit logic (e.g., &amp;amp; or |) rather than short-circuit logic (&amp;amp;&amp;amp; or ||). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NS_NON_SHORT_CIRCUIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NS: Suspicious use of non-short-circuit boolean operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NS_NON_SHORT_CIRCUIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code seems to be using non-short-circuit logic (e.g., &amp;amp; or |) rather than short-circuit logic (&amp;amp;&amp;amp; or ||). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NS_NON_SHORT_CIRCUIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NS: Suspicious use of non-short-circuit boolean operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PS_PUBLIC_SEMAPHORES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class uses synchronization along with wait(), notify() or notifyAll() on itself (the this     reference). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PS_PUBLIC_SEMAPHORES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PS: Public Semaphores</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PS_PUBLIC_SEMAPHORES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class uses synchronization along with wait(), notify() or notifyAll() on itself (the this reference). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PS_PUBLIC_SEMAPHORES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PS: Public Semaphores</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>It is often a better design to return a length zero array rather than a null reference to indicate that there are no results (i.e., an empty list of results). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PZLA: Prefer zero length arrays to null to indicate no results</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>It is often a better design to return a length zero array rather than a null reference to indicate that there are no results (i.e., an empty list of results). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PZLA: Prefer zero length arrays to null to indicate no results</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.QF_QUESTIONABLE_FOR_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Are you sure this for loop is incrementing the correct variable?    It appears that another variable is being initialized and checked    by the for loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.QF_QUESTIONABLE_FOR_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>QF: Questionable for loops</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.QF_QUESTIONABLE_FOR_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Are you sure this for loop is incrementing the correct variable? It appears that another variable is being initialized and checked by the for loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.QF_QUESTIONABLE_FOR_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>QF: Questionable for loops</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a reference known to be non-null with another reference known to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a reference known to be non-null with another reference known to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant comparison of two references known to both be definitely null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant comparison of two references known to both be definitely null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant check of a known non-null value against the constant null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant check of a known non-null value against the constant null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant check of a known null value against the constant null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>476</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a redundant check of a known null value against the constant null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RCN: Redundant comparison to null</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.REC_CATCH_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>396</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This catch block for Exception also catches any   RuntimeException, which could mask programming errors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.REC_CATCH_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>REC: RuntimeException capture</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.REC_CATCH_EXCEPTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>396</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This catch block for Exception also catches any RuntimeException, which could mask programming errors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.REC_CATCH_EXCEPTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>REC: RuntimeException capture</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RI_REDUNDANT_INTERFACES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class declares that it implements an interface that is also implemented by a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RI_REDUNDANT_INTERFACES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RI: Redundant Interfaces</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RI_REDUNDANT_INTERFACES</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class declares that it implements an interface that is also implemented by a superclass. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RI_REDUNDANT_INTERFACES&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RI: Redundant Interfaces</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_CHECK_FOR_POSITIVE_INDEXOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method invokes String.indexOf and checks to see if the result is positive or non-positive. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_CHECK_FOR_POSITIVE_INDEXOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_CHECK_FOR_POSITIVE_INDEXOF</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method invokes String.indexOf and checks to see if the result is positive or non-positive. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_CHECK_FOR_POSITIVE_INDEXOF&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_DONT_JUST_NULL_CHECK_READLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The value returned by readLine is discarded after checking to see if the return value is non-null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_DONT_JUST_NULL_CHECK_READLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_DONT_JUST_NULL_CHECK_READLINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The value returned by readLine is discarded after checking to see if the return value is non-null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_DONT_JUST_NULL_CHECK_READLINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_REM_OF_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code computes a hashCode, and then computes the remainder of that value modulo another value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_REM_OF_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_REM_OF_HASHCODE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code computes a hashCode, and then computes the remainder of that value modulo another value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_REM_OF_HASHCODE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_REM_OF_RANDOM_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a random signed integer and then computes the remainder of that value modulo another value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_REM_OF_RANDOM_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_REM_OF_RANDOM_INT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code generates a random signed integer and then computes the remainder of that value modulo another value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_REM_OF_RANDOM_INT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED_INFERRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code calls a method and ignores the return value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_INFERRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_IGNORED_INFERRED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code calls a method and ignores the return value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_IGNORED_INFERRED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_DOUBLE_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a double assignment of a field; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_DOUBLE_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_FIELD_DOUBLE_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a double assignment of a field; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_FIELD_DOUBLE_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_DOUBLE_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a double assignment of a local variable; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_DOUBLE_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_DOUBLE_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a double assignment of a local variable; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_DOUBLE_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a local variable; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SA_LOCAL_SELF_ASSIGNMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a self assignment of a local variable; e.g. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SA_LOCAL_SELF_ASSIGNMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SA: Useless self-operation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_SWITCH_FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a switch statement where one case branch will fall through to the next case. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_SWITCH_FALLTHROUGH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_SWITCH_FALLTHROUGH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>484</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a switch statement where one case branch will fall through to the next case. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_SWITCH_FALLTHROUGH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_SWITCH_NO_DEFAULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a switch statement where default case is missing. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_SWITCH_NO_DEFAULT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SF_SWITCH_NO_DEFAULT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a switch statement where default case is missing. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SF_SWITCH_NO_DEFAULT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SF: Switch case falls through</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instance method writes to a static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ST: Misuse of static fields</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instance method writes to a static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ST: Misuse of static fields</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a private readResolve method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class defines a private readResolve method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The field is marked as transient, but the class isn&apos;t Serializable, so marking it as transient has absolutely no effect. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The field is marked as transient, but the class isn&apos;t Serializable, so marking it as transient has absolutely no effect. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Se: Incorrect definition of Serializable class</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is used in a way that requires it to be always be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is required to have that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is used in a way that requires it to be always be a value denoted by a type qualifier, but there is an explicit annotation stating that it is not known where the value is required to have that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is used in a way that requires it to be never be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is prohibited from having that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A value is used in a way that requires it to be never be a value denoted by a type qualifier, but there is an explicit annotation stating that it is not known where the value is prohibited from having that type qualifier. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TQ: Inconsistent use of type qualifier annotations</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UCF_USELESS_CONTROL_FLOW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a useless control flow statement, where control flow continues onto the same place regardless of whether or not the branch is taken. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UCF_USELESS_CONTROL_FLOW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UCF: Useless control flow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UCF_USELESS_CONTROL_FLOW</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a useless control flow statement, where control flow continues onto the same place regardless of whether or not the branch is taken. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UCF_USELESS_CONTROL_FLOW&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UCF: Useless control flow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a useless control flow statement in which control flow follows to the same or following line regardless of whether or not the branch is taken. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UCF: Useless control flow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a useless control flow statement in which control flow follows to the same or following line regardless of whether or not the branch is taken. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UCF: Useless control flow</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UOE_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) method on a final class that doesn&apos;t override the equals method in the Object class, effectively making the equals method test for sameness, like ==. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UOE: Use Object Equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UOE_USE_OBJECT_EQUALS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method invokes the .equals(Object o) method on a final class that doesn&apos;t override the equals method in the Object class, effectively making the equals method test for sameness, like ==. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UOE: Use Object Equals</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.USM_USELESS_ABSTRACT_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This abstract method is already defined in an interface that is implemented by this abstract       class. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USM: Useless method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.USM_USELESS_ABSTRACT_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This abstract method is already defined in an interface that is implemented by this abstract class. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USM: Useless method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.USM_USELESS_SUBCLASS_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This derived method merely calls the same superclass method passing in the exact parameters       received. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USM: Useless method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.USM_USELESS_SUBCLASS_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This derived method merely calls the same superclass method passing in the exact parameters received. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>USM: Useless method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UrF: Unread field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UrF: Unread field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never used. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UuF: Unused field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never used. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UuF: Unused field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never initialized within any constructor, and is therefore could be null after the object is constructed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never initialized within any constructor, and is therefore could be null after the object is constructed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>No writes were seen to this public/protected field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>No writes were seen to this public/protected field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UwF: Unwritten field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XFB_XML_FACTORY_BYPASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method allocates a specific implementation of an xml interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XFB_XML_FACTORY_BYPASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XFB: XML Factory Bypass</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Dodgy code</category>
      <categoryDescription>FindBugs: Dodgy code</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XFB_XML_FACTORY_BYPASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method allocates a specific implementation of an xml interface. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XFB_XML_FACTORY_BYPASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XFB: XML Factory Bypass</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>OpenJDK introduces a potential incompatibility. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LG: Logger problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>OpenJDK introduces a potential incompatibility. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LG: Logger problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OBL_UNSATISFIED_OBLIGATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OBL: Unsatisfied obligation to clean up stream or resource</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OBL_UNSATISFIED_OBLIGATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OBL: Unsatisfied obligation to clean up stream or resource</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OBL: Unsatisfied obligation to clean up stream or resource</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>OBL: Unsatisfied obligation to clean up stream or resource</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SKIPPED_CLASS_TOO_BIG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is bigger than can be effectively handled, and was not fully analyzed for errors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SKIPPED_CLASS_TOO_BIG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SKIPPED: Analysis skipped</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SKIPPED_CLASS_TOO_BIG</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is bigger than can be effectively handled, and was not fully analyzed for errors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SKIPPED_CLASS_TOO_BIG&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SKIPPED: Analysis skipped</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING1</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING1&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING1</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING1&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING3</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING3&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TESTING3</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This bug pattern is only generated by new, incompletely implemented bug detectors. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TESTING3&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UNKNOWN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A warning was recorded, but findbugs can&apos;t find the description of this bug pattern and so can&apos;t describe it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UNKNOWN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Experimental</category>
      <categoryDescription>FindBugs: Experimental</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UNKNOWN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A warning was recorded, but findbugs can&apos;t find the description of this bug pattern and so can&apos;t describe it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UNKNOWN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TEST: Testing prototype and incomplete bug pattern</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Internationalization</category>
      <categoryDescription>FindBugs: Internationalization</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_CONVERT_CASE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A String is being converted to upper or lowercase, using the platform&apos;s default encoding. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_CONVERT_CASE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Internationalization</category>
      <categoryDescription>FindBugs: Internationalization</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_CONVERT_CASE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A String is being converted to upper or lowercase, using the platform&apos;s default encoding. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_CONVERT_CASE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Internationalization</category>
      <categoryDescription>FindBugs: Internationalization</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_DEFAULT_ENCODING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_DEFAULT_ENCODING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Internationalization</category>
      <categoryDescription>FindBugs: Internationalization</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_DEFAULT_ENCODING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_DEFAULT_ENCODING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a classloader,  which needs permission if a security manage is installed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a classloader, which needs permission if a security manage is installed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_DO_INSIDE_DO_PRIVILEGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes a method that requires a security permission check. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DP_DO_INSIDE_DO_PRIVILEGED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DP_DO_INSIDE_DO_PRIVILEGED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code invokes a method that requires a security permission check. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DP_DO_INSIDE_DO_PRIVILEGED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DP: Use doPrivileged</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_REP2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>374</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code stores a reference to an externally mutable object into the   internal representation of the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_REP2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EI2: Storing reference to mutable object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_REP2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>374</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code stores a reference to an externally mutable object into the internal representation of the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_REP2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EI2: Storing reference to mutable object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_REP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>374</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Returning a reference to a mutable object value stored in one of the object&apos;s fields   exposes the internal representation of the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_REP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EI: Exposes internal representation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_REP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>374</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Returning a reference to a mutable object value stored in one of the object&apos;s fields exposes the internal representation of the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_REP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>EI: Exposes internal representation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_PUBLIC_SHOULD_BE_PROTECTED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>583</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A class&apos;s &lt;code&gt;finalize()&lt;/code&gt; method should have protected access,    not public. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_PUBLIC_SHOULD_BE_PROTECTED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.FI_PUBLIC_SHOULD_BE_PROTECTED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>583</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A class&apos;s &lt;code&gt;finalize()&lt;/code&gt; method should have protected access, not public. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.FI_PUBLIC_SHOULD_BE_PROTECTED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>FI: Incorrect use of finalizers</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_STATIC_REP2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code stores a reference to an externally mutable object into a static    field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_STATIC_REP2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.EI_EXPOSE_STATIC_REP2</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code stores a reference to an externally mutable object into a static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.EI_EXPOSE_STATIC_REP2&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_CANNOT_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or         by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_CANNOT_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_CANNOT_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_CANNOT_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_EXPOSE_REP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A public static method returns a reference to    an array that is part of the static state of the class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_EXPOSE_REP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_EXPOSE_REP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A public static method returns a reference to an array that is part of the static state of the class. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_EXPOSE_REP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_FINAL_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or         by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_FINAL_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_FINAL_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_FINAL_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_MUTABLE_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field references an array    and can be accessed by malicious code or         by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_MUTABLE_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_MUTABLE_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field references an array and can be accessed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_MUTABLE_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_MUTABLE_HASHTABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field references a Hashtable    and can be accessed by malicious code or         by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_MUTABLE_HASHTABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_MUTABLE_HASHTABLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field references a Hashtable and can be accessed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_MUTABLE_HASHTABLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_OOI_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field that is defined in an interface references a mutable    object such as an array or hashtable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_OOI_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_OOI_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A final static field that is defined in an interface references a mutable object such as an array or hashtable. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_OOI_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or    by accident. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_PKGPROTECT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_PKGPROTECT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_SHOULD_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or         by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_SHOULD_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_SHOULD_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_SHOULD_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Malicious code vulnerability</category>
      <categoryDescription>FindBugs: Malicious code vulnerability</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>218</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A mutable static field could be changed by malicious code or by accident from another package. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MS: Mutable static field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code contains a sequence of calls to a concurrent  abstraction             (such as a concurrent hash map). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AT: Possible atomicity violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code contains a sequence of calls to a concurrent abstraction (such as a concurrent hash map). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>AT: Possible atomicity violation</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DC_DOUBLECHECK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>609</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may contain an instance of double-checked locking. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DC_DOUBLECHECK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DC: Possible double check of field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DC_DOUBLECHECK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>609</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method may contain an instance of double-checked locking. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DC_DOUBLECHECK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DC: Possible double check of field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on a boxed primitive constant, such as an Boolean. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_BOOLEAN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on a boxed primitive constant, such as a Boolean. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_BOOLEAN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on a boxed primitive constant, such as an Integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on a boxed primitive constant, such as an Integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on interned String. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on interned String. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on an apparently unshared boxed primitive, such as an Integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code synchronizes on an apparently unshared boxed primitive, such as an Integer. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>DL: Unintended contention or possible deadlock due to locking on shared objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_MONITOR_WAIT_ON_CONDITION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;wait()&lt;/code&gt; on a       &lt;code&gt;java.util.concurrent.locks.Condition&lt;/code&gt; object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_MONITOR_WAIT_ON_CONDITION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_MONITOR_WAIT_ON_CONDITION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;wait()&lt;/code&gt; on a &lt;code&gt;java.util.concurrent.locks.Condition&lt;/code&gt; object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_MONITOR_WAIT_ON_CONDITION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_USELESS_THREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method creates a thread without specifying a run method either by deriving from the Thread class, or   by passing a Runnable object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_USELESS_THREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_USELESS_THREAD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method creates a thread without specifying a run method either by deriving from the Thread class, or by passing a Runnable object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_USELESS_THREAD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ESYNC_EMPTY_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>585</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code contains an empty synchronized block: &lt;code&gt;&lt;br&gt;synchronized() {}&lt;br&gt;&lt;/code&gt; Empty synchronized blocks are far more subtle and hard to use correctly than most people recognize, and empty synchronized blocks are almost never a better solution than less contrived solutions. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ESYNC_EMPTY_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ESync: Empty Synchronized blocks</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS2_INCONSISTENT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The fields of this class appear to be accessed inconsistently with respect   to synchronization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IS2_INCONSISTENT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS2_INCONSISTENT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The fields of this class appear to be accessed inconsistently with respect to synchronization. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IS2_INCONSISTENT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS_FIELD_NOT_GUARDED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is annotated with net.jcip.annotations.GuardedBy, but can be accessed in a way that seems to violate the annotation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IS_FIELD_NOT_GUARDED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS_FIELD_NOT_GUARDED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is annotated with net.jcip.annotations.GuardedBy or javax.annotation.concurrent.GuardedBy, but can be accessed in a way that seems to violate those annotations. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.IS_FIELD_NOT_GUARDED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS_INCONSISTENT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The fields of this class appear to be accessed inconsistently with respect   to synchronization. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IS_INCONSISTENT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The fields of this class appear to be accessed inconsistently with respect to synchronization. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IS: Inconsistent synchronization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JLM_JSR166_LOCK_MONITORENTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs synchronization an object that implements java.util.concurrent.locks.Lock. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JLM_JSR166_LOCK_MONITORENTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JLM_JSR166_LOCK_MONITORENTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs synchronization an object that implements java.util.concurrent.locks.Lock. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JLM_JSR166_LOCK_MONITORENTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs synchronization an object that is an instance of a class from the java.util.concurrent package (or its subclasses). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method performs synchronization an object that is an instance of a class from the java.util.concurrent package (or its subclasses). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;wait()&lt;/code&gt;, &lt;code&gt;notify()&lt;/code&gt; or &lt;code&gt;notifyAll()()&lt;/code&gt; on an object that also provides an &lt;code&gt;await()&lt;/code&gt;, &lt;code&gt;signal()&lt;/code&gt;, &lt;code&gt;signalAll()&lt;/code&gt; method (such as util.concurrent Condition objects). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;wait()&lt;/code&gt;, &lt;code&gt;notify()&lt;/code&gt; or &lt;code&gt;notifyAll()()&lt;/code&gt; on an object that also provides an &lt;code&gt;await()&lt;/code&gt;, &lt;code&gt;signal()&lt;/code&gt;, &lt;code&gt;signalAll()&lt;/code&gt; method (such as util.concurrent Condition objects). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>JLM: Synchronization on java.util.concurrent objects</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a non-volatile field. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a non-volatile field. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a non-volatile static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LI_LAZY_INIT_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a non-volatile static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LI_LAZY_INIT_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_UPDATE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LI_LAZY_INIT_UPDATE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.LI_LAZY_INIT_UPDATE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>543</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains an unsynchronized lazy initialization of a static field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.LI_LAZY_INIT_UPDATE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>LI: Unsynchronized Lazy Initialization</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method synchronizes on a field in what appears to be an attempt to guard against simultaneous updates to that field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ML: Synchronization on updated field (Mutable Lock)</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method synchronizes on a field in what appears to be an attempt to guard against simultaneous updates to that field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ML: Synchronization on updated field (Mutable Lock)</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ML_SYNC_ON_UPDATED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method synchronizes on an object    referenced from a mutable field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ML_SYNC_ON_UPDATED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ML: Synchronization on updated field (Mutable Lock)</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ML_SYNC_ON_UPDATED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method synchronizes on an object referenced from a mutable field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ML_SYNC_ON_UPDATED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ML: Synchronization on updated field (Mutable Lock)</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MSF_MUTABLE_SERVLET_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A web server generally only creates one instance of servlet or jsp class (i.e., treats the class as a Singleton), and will have multiple threads invoke methods on that instance to service multiple simultaneous requests. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MSF_MUTABLE_SERVLET_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MSF: Mutable servlet field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MSF_MUTABLE_SERVLET_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A web server generally only creates one instance of servlet or jsp class (i.e., treats the class as a Singleton), and will have multiple threads invoke methods on that instance to service multiple simultaneous requests. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MSF_MUTABLE_SERVLET_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MSF: Mutable servlet field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MWN_MISMATCHED_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Object.notify() or Object.notifyAll() without obviously holding a lock on the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MWN_MISMATCHED_NOTIFY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MWN: Mismatched wait() or notify()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MWN_MISMATCHED_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Object.notify() or Object.notifyAll() without obviously holding a lock on the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MWN_MISMATCHED_NOTIFY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MWN: Mismatched wait() or notify()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MWN_MISMATCHED_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Object.wait() without obviously holding a lock on the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MWN_MISMATCHED_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MWN: Mismatched wait() or notify()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.MWN_MISMATCHED_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Object.wait() without obviously holding a lock on the object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.MWN_MISMATCHED_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>MWN: Mismatched wait() or notify()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NN_NAKED_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to &lt;code&gt;notify()&lt;/code&gt; or &lt;code&gt;notifyAll()&lt;/code&gt;   was made without any (apparent) accompanying   modification to mutable object state. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NN_NAKED_NOTIFY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NN: Naked notify</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NN_NAKED_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A call to &lt;code&gt;notify()&lt;/code&gt; or &lt;code&gt;notifyAll()&lt;/code&gt; was made without any (apparent) accompanying modification to mutable object state. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NN_NAKED_NOTIFY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NN: Naked notify</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_SYNC_AND_NULL_CHECK_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>585</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Since the field is synchronized on, it seems not likely to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_SYNC_AND_NULL_CHECK_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NP_SYNC_AND_NULL_CHECK_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>585</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Since the field is synchronized on, it seems not likely to be null. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NP_SYNC_AND_NULL_CHECK_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>NP: Null pointer dereference</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NO_NOTIFY_NOT_NOTIFYALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;notify()&lt;/code&gt; rather than &lt;code&gt;notifyAll()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NO_NOTIFY_NOT_NOTIFYALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>No: Using notify() rather than notifyAll()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.NO_NOTIFY_NOT_NOTIFYALL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls &lt;code&gt;notify()&lt;/code&gt; rather than &lt;code&gt;notifyAll()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.NO_NOTIFY_NOT_NOTIFYALL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>No: Using notify() rather than notifyAll()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RS_READOBJECT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This serializable class defines a &lt;code&gt;readObject()&lt;/code&gt; which is   synchronized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RS_READOBJECT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RS: Class&apos;s readObject() method is synchronized</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RS_READOBJECT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This serializable class defines a &lt;code&gt;readObject()&lt;/code&gt; which is synchronized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RS_READOBJECT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RS: Class&apos;s readObject() method is synchronized</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The &lt;code&gt;putIfAbsent&lt;/code&gt; method is typically used to ensure that a         single value is associated with a given key (the first value for which put         if absent succeeds). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The &lt;code&gt;putIfAbsent&lt;/code&gt; method is typically used to ensure that a single value is associated with a given key (the first value for which put if absent succeeds). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>RV: Bad use of return value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RU_INVOKE_RUN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>572</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method explicitly invokes &lt;code&gt;run()&lt;/code&gt; on an object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RU_INVOKE_RUN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Ru: Method invokes run()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.RU_INVOKE_RUN</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>572</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method explicitly invokes &lt;code&gt;run()&lt;/code&gt; on an object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.RU_INVOKE_RUN&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Ru: Method invokes run()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SC_START_IN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The constructor starts a thread. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SC_START_IN_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SC: Constructor invokes Thread.start()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SC_START_IN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The constructor starts a thread. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SC_START_IN_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SC: Constructor invokes Thread.start()</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SP_SPIN_ON_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method spins in a loop which reads a field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SP_SPIN_ON_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SP: Method spins on field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SP_SPIN_ON_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method spins in a loop which reads a field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SP_SPIN_ON_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SP: Method spins on field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_STATIC_CALENDAR_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_STATIC_CALENDAR_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_STATIC_CALENDAR_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_STATIC_CALENDAR_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>366</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>STCAL: Static use of type Calendar or DateFormat</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SWL_SLEEP_WITH_LOCK_HELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Thread.sleep() with a lock held. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SWL_SLEEP_WITH_LOCK_HELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SWL: Sleep with lock held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SWL_SLEEP_WITH_LOCK_HELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method calls Thread.sleep() with a lock held. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SWL_SLEEP_WITH_LOCK_HELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SWL: Sleep with lock held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TLW_TWO_LOCK_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls notify() or notifyAll() while two locks   are held. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TLW: Wait with two locks held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TLW_TWO_LOCK_NOTIFY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code calls notify() or notifyAll() while two locks are held. (&lt;i&gt;FindBugs&amp;trade; Deprecated&lt;/i&gt;) (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TLW: Wait with two locks held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TLW_TWO_LOCK_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Waiting on a monitor while two locks are held may cause   deadlock. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TLW_TWO_LOCK_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TLW: Wait with two locks held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.TLW_TWO_LOCK_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Waiting on a monitor while two locks are held may cause deadlock. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.TLW_TWO_LOCK_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>TLW: Wait with two locks held</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UG_SYNC_SET_UNSYNC_GET</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains similarly-named get and set   methods where the set method is synchronized and the get method is not. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UG_SYNC_SET_UNSYNC_GET&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UG: Unsynchronized get method, synchronized set method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UG_SYNC_SET_UNSYNC_GET</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains similarly-named get and set methods where the set method is synchronized and the get method is not. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UG_SYNC_SET_UNSYNC_GET&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UG: Unsynchronized get method, synchronized set method</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UL_UNRELEASED_LOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method acquires a JSR-166 (&lt;code&gt;java.util.concurrent&lt;/code&gt;) lock, but does not release it on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UL_UNRELEASED_LOCK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UL: Lock not released on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UL_UNRELEASED_LOCK</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method acquires a JSR-166 (&lt;code&gt;java.util.concurrent&lt;/code&gt;) lock, but does not release it on all paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UL_UNRELEASED_LOCK&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UL: Lock not released on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method acquires a JSR-166 (&lt;code&gt;java.util.concurrent&lt;/code&gt;) lock, but does not release it on all exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UL: Lock not released on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method acquires a JSR-166 (&lt;code&gt;java.util.concurrent&lt;/code&gt;) lock, but does not release it on all exception paths out of the method. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UL: Lock not released on all paths</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UW_UNCOND_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.lang.Object.wait()&lt;/code&gt; which   is not guarded by conditional control flow. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UW_UNCOND_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UW: Unconditional wait</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UW_UNCOND_WAIT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.lang.Object.wait()&lt;/code&gt; which is not guarded by conditional control flow. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UW_UNCOND_WAIT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UW: Unconditional wait</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VO_VOLATILE_INCREMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code increments a volatile field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VO_VOLATILE_INCREMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VO: Use of volatile</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VO_VOLATILE_INCREMENT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code increments a volatile field. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VO_VOLATILE_INCREMENT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VO: Use of volatile</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VO_VOLATILE_REFERENCE_TO_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This declares a volatile reference to an array, which might not be what you want. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VO_VOLATILE_REFERENCE_TO_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VO: Use of volatile</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.VO_VOLATILE_REFERENCE_TO_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This declares a volatile reference to an array, which might not be what you want. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.VO_VOLATILE_REFERENCE_TO_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>VO: Use of volatile</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instance method synchronizes on &lt;code&gt;this.getClass()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WL: Possible locking on wrong object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This instance method synchronizes on &lt;code&gt;this.getClass()&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WL: Possible locking on wrong object</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WS_WRITEOBJECT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a &lt;code&gt;writeObject()&lt;/code&gt; method which is synchronized;   however, no other method of the class is synchronized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WS_WRITEOBJECT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WS: Class&apos;s writeObject() method is synchronized but nothing else is</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WS_WRITEOBJECT_SYNC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class has a &lt;code&gt;writeObject()&lt;/code&gt; method which is synchronized; however, no other method of the class is synchronized. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WS_WRITEOBJECT_SYNC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WS: Class&apos;s writeObject() method is synchronized but nothing else is</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WA_AWAIT_NOT_IN_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.util.concurrent.await()&lt;/code&gt;    (or variants)   which is not in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WA_AWAIT_NOT_IN_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Wa: Wait not in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WA_AWAIT_NOT_IN_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.util.concurrent.await()&lt;/code&gt; (or variants) which is not in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WA_AWAIT_NOT_IN_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Wa: Wait not in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WA_NOT_IN_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.lang.Object.wait()&lt;/code&gt;   which is not in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WA_NOT_IN_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Wa: Wait not in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Multithreaded correctness</category>
      <categoryDescription>FindBugs: Multithreaded correctness</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WA_NOT_IN_LOOP</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method contains a call to &lt;code&gt;java.lang.Object.wait()&lt;/code&gt; which is not in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WA_NOT_IN_LOOP&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Wa: Wait not in loop</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_BOXING_IMMEDIATELY_UNBOXED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A primitive is boxed, and then immediately unboxed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_BOXING_IMMEDIATELY_UNBOXED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_BOXING_IMMEDIATELY_UNBOXED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A primitive is boxed, and then immediately unboxed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_BOXING_IMMEDIATELY_UNBOXED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A primitive boxed value constructed and then immediately converted into a different primitive type (e.g., &lt;code&gt;new Double(d).intValue()&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>192</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A primitive boxed value constructed and then immediately converted into a different primitive type (e.g., &lt;code&gt;new Double(d).intValue()&lt;/code&gt;). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_UNBOXING_IMMEDIATELY_REBOXED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A boxed value is unboxed and then immediately reboxed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_UNBOXING_IMMEDIATELY_REBOXED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.BX_UNBOXING_IMMEDIATELY_REBOXED</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A boxed value is unboxed and then immediately reboxed. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.BX_UNBOXING_IMMEDIATELY_REBOXED&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_BOXED_PRIMITIVE_FOR_PARSING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A boxed primitive is created from a String, just to extract the unboxed primitive value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_BOXED_PRIMITIVE_FOR_PARSING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_BOXED_PRIMITIVE_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A boxed primitive is allocated just to call toString(). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_BOXED_PRIMITIVE_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_BOXED_PRIMITIVE_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A boxed primitive is allocated just to call toString(). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_BOXED_PRIMITIVE_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_FP_NUMBER_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using &lt;code&gt;new Double(double)&lt;/code&gt; is guaranteed to always result in a new object whereas       &lt;code&gt;Double.valueOf(double)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_FP_NUMBER_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_FP_NUMBER_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using &lt;code&gt;new Double(double)&lt;/code&gt; is guaranteed to always result in a new object whereas &lt;code&gt;Double.valueOf(double)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_FP_NUMBER_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NUMBER_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using &lt;code&gt;new Integer(int)&lt;/code&gt; is guaranteed to always result in a new object whereas       &lt;code&gt;Integer.valueOf(int)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NUMBER_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NUMBER_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using &lt;code&gt;new Integer(int)&lt;/code&gt; is guaranteed to always result in a new object whereas &lt;code&gt;Integer.valueOf(int)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NUMBER_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Bx: Questionable Boxing of primitive value</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BLOCKING_METHODS_ON_URL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The equals and hashCode method of URL perform domain name resolution, this can result in a big performance hit. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BLOCKING_METHODS_ON_URL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_BLOCKING_METHODS_ON_URL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The equals and hashCode method of URL perform domain name resolution, this can result in a big performance hit. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_BLOCKING_METHODS_ON_URL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_COLLECTION_OF_URLS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method or field is or uses a Map or Set of URLs. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_COLLECTION_OF_URLS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_COLLECTION_OF_URLS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>440</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method or field is or uses a Map or Set of URLs. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_COLLECTION_OF_URLS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_BOOLEAN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Creating new instances of &lt;code&gt;java.lang.Boolean&lt;/code&gt; wastes   memory, since &lt;code&gt;Boolean&lt;/code&gt; objects are immutable and there are   only two useful values of this type. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_BOOLEAN_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_BOOLEAN_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Creating new instances of &lt;code&gt;java.lang.Boolean&lt;/code&gt; wastes memory, since &lt;code&gt;Boolean&lt;/code&gt; objects are immutable and there are only two useful values of this type. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_BOOLEAN_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_GC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Code explicitly invokes garbage collection. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_GC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_GC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Code explicitly invokes garbage collection. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_GC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NEW_FOR_GETCLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method allocates an object just to call getClass() on it, in order to   retrieve the Class object for it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NEW_FOR_GETCLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NEW_FOR_GETCLASS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method allocates an object just to call getClass() on it, in order to retrieve the Class object for it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NEW_FOR_GETCLASS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NEXTINT_VIA_NEXTDOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>If &lt;code&gt;r&lt;/code&gt; is a &lt;code&gt;java.util.Random&lt;/code&gt;, you can generate a random number from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt; using &lt;code&gt;r.nextInt(n)&lt;/code&gt;, rather than using &lt;code&gt;(int)(r.nextDouble() * n)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NEXTINT_VIA_NEXTDOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_NEXTINT_VIA_NEXTDOUBLE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>If &lt;code&gt;r&lt;/code&gt; is a &lt;code&gt;java.util.Random&lt;/code&gt;, you can generate a random number from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt; using &lt;code&gt;r.nextInt(n)&lt;/code&gt;, rather than using &lt;code&gt;(int)(r.nextDouble() * n)&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_NEXTINT_VIA_NEXTDOUBLE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using the &lt;code&gt;java.lang.String(String)&lt;/code&gt; constructor wastes memory   because the object so constructed will be functionally indistinguishable   from the &lt;code&gt;String&lt;/code&gt; passed as a parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Using the &lt;code&gt;java.lang.String(String)&lt;/code&gt; constructor wastes memory because the object so constructed will be functionally indistinguishable from the &lt;code&gt;String&lt;/code&gt; passed as a parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Calling &lt;code&gt;String.toString()&lt;/code&gt; is just a redundant operation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_TOSTRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Calling &lt;code&gt;String.toString()&lt;/code&gt; is just a redundant operation. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_TOSTRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_VOID_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Creating a new &lt;code&gt;java.lang.String&lt;/code&gt; object using the   no-argument constructor wastes memory because the object so created will   be functionally indistinguishable from the empty string constant   &lt;code&gt;&quot;&quot;&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_VOID_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DM_STRING_VOID_CTOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>Creating a new &lt;code&gt;java.lang.String&lt;/code&gt; object using the no-argument constructor wastes memory because the object so created will be functionally indistinguishable from the empty string constant &lt;code&gt;&quot;&quot;&lt;/code&gt;. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DM_STRING_VOID_CTOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HSC_HUGE_SHARED_STRING_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A large String constant is duplicated across multiple class files. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HSC_HUGE_SHARED_STRING_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HSC: Huge String constants</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HSC_HUGE_SHARED_STRING_CONSTANT</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>A large String constant is duplicated across multiple class files. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HSC_HUGE_SHARED_STRING_CONSTANT&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HSC: Huge String constants</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IMA_INEFFICIENT_MEMBER_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method of an inner class reads from or writes to a private member variable of the owning class,       or calls a private method of the owning class. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IMA: Inefficient Member Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.IMA_INEFFICIENT_MEMBER_ACCESS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method of an inner class reads from or writes to a private member variable of the owning class, or calls a private method of the owning class. (&lt;i&gt;FindBugs&amp;trade; Experimental&lt;/i&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>IMA: Inefficient Member Access</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ITA_INEFFICIENT_TO_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the toArray() method of a collection derived class, and passes in a zero-length prototype array argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ITA_INEFFICIENT_TO_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ITA: Inefficient use of collection.toArray(new Foo[0])</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.ITA_INEFFICIENT_TO_ARRAY</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses the toArray() method of a collection derived class, and passes in a zero-length prototype array argument. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.ITA_INEFFICIENT_TO_ARRAY&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>ITA: Inefficient use of collection.toArray(new Foo[0])</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SBSC_USE_STRINGBUFFER_CONCATENATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method seems to be building a String using concatenation in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SBSC: String concatenation in loop using + operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SBSC_USE_STRINGBUFFER_CONCATENATION</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method seems to be building a String using concatenation in a loop. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SBSC_USE_STRINGBUFFER_CONCATENATION&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SBSC: String concatenation in loop using + operator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference   to the object which created it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference to the object which created it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC_ANON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference   to the object which created it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC_ANON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC_ANON</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference to the object which created it. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC_ANON&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference   to the object which created it except during construction of the inner object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class is an inner class, but does not use its embedded reference to the object which created it except during construction of the inner object. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SIC: Inner class could be made static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SS_SHOULD_BE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains an instance final field that    is initialized to a compile-time static value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SS_SHOULD_BE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SS: Unread field should be static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SS_SHOULD_BE_STATIC</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This class contains an instance final field that is initialized to a compile-time static value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SS_SHOULD_BE_STATIC&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SS: Unread field should be static</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UM_UNNECESSARY_MATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses a static method from java.lang.Math on a constant value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UM_UNNECESSARY_MATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UM: Unnecessary Math on constants</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UM_UNNECESSARY_MATH</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method uses a static method from java.lang.Math on a constant value. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UM_UNNECESSARY_MATH&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UM: Unnecessary Math on constants</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UPM_UNCALLED_PRIVATE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This private method is never called. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UPM_UNCALLED_PRIVATE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UPM: Private method is never called</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UPM_UNCALLED_PRIVATE_METHOD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This private method is never called. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UPM_UNCALLED_PRIVATE_METHOD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UPM: Private method is never called</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.URF_UNREAD_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.URF_UNREAD_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UrF: Unread field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.URF_UNREAD_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never read. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.URF_UNREAD_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UrF: Unread field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UUF_UNUSED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never used. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UUF_UNUSED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UuF: Unused field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.UUF_UNUSED_FIELD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This field is never used. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.UUF_UNUSED_FIELD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>UuF: Unused field</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WMI_WRONG_MAP_ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method accesses the value of a Map entry, using a key that was retrieved from a keySet iterator. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WMI_WRONG_MAP_ITERATOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WMI: Inefficient Map Iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Performance</category>
      <categoryDescription>FindBugs: Performance</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.WMI_WRONG_MAP_ITERATOR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>none</cweCategory>
      <impact>Low</impact>
      <impactDescription>Low</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This method accesses the value of a Map entry, using a key that was retrieved from a keySet iterator. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.WMI_WRONG_MAP_ITERATOR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>WMI: Inefficient Map Iterator</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_CONSTANT_DB_PASSWORD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>259</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a database connect using a hardcoded, constant password. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_CONSTANT_DB_PASSWORD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_CONSTANT_DB_PASSWORD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>259</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a database connect using a hardcoded, constant password. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_CONSTANT_DB_PASSWORD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_EMPTY_DB_PASSWORD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>259</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a database connect using a blank or empty password. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_EMPTY_DB_PASSWORD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.DMI_EMPTY_DB_PASSWORD</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>259</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code creates a database connect using a blank or empty password. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.DMI_EMPTY_DB_PASSWORD&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>Dm: Dubious method used</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HRS_REQUEST_PARAMETER_TO_COOKIE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>113</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code constructs an HTTP Cookie using an untrusted HTTP parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HRS_REQUEST_PARAMETER_TO_COOKIE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HRS: HTTP Response splitting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HRS_REQUEST_PARAMETER_TO_COOKIE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>113</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code constructs an HTTP Cookie using an untrusted HTTP parameter. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HRS_REQUEST_PARAMETER_TO_COOKIE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HRS: HTTP Response splitting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>113</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP response splitting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HRS: HTTP Response splitting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>113</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP response splitting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>HRS: HTTP Response splitting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PT_ABSOLUTE_PATH_TRAVERSAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>36</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as &quot;/abs/path&quot; that can resolve to a location that is outside of that directory. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PT_ABSOLUTE_PATH_TRAVERSAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PT: Path traversal</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PT_ABSOLUTE_PATH_TRAVERSAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>36</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as &quot;/abs/path&quot; that can resolve to a location that is outside of that directory. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PT_ABSOLUTE_PATH_TRAVERSAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PT: Path traversal</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PT_RELATIVE_PATH_TRAVERSAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>23</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as &quot;..&quot; that can resolve to a location that is outside of that directory. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PT_RELATIVE_PATH_TRAVERSAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PT: Path traversal</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.PT_RELATIVE_PATH_TRAVERSAL</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>23</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as &quot;..&quot; that can resolve to a location that is outside of that directory. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.PT_RELATIVE_PATH_TRAVERSAL&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>PT: Path traversal</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code creates an SQL prepared statement from a nonconstant String. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>89</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>The code creates an SQL prepared statement from a nonconstant String. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>SQL: Potential SQL Problem</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to JSP output, which allows for a cross site scripting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to JSP output, which allows for a cross site scripting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>81</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to a Server error page (using HttpServletResponse.sendError). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>81</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to a Server error page (using HttpServletResponse.sendError). (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>generic</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to Servlet output, which allows for a reflected cross site scripting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
    <com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
      <category>FindBugs: Security</category>
      <categoryDescription>FindBugs: Security</categoryDescription>
      <checkerSubcategoryId>
        <checkerName>FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER</checkerName>
        <domain>STATIC_JAVA</domain>
        <subcategory>none</subcategory>
      </checkerSubcategoryId>
      <cweCategory>79</cweCategory>
      <impact>Medium</impact>
      <impactDescription>Medium</impactDescription>
      <subcategoryLocalEffect></subcategoryLocalEffect>
      <subcategoryLongDescription>This code directly writes an HTTP parameter to Servlet output, which allows for a reflected cross site scripting vulnerability. (&lt;a href=&quot;/docs/en/findbugs/fb_checker_ref.html#FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER&quot; target=&quot;_blank&quot;&gt;From FindBugs&amp;trade; description&lt;/a&gt;)</subcategoryLongDescription>
      <subcategoryShortDescription>XSS: Cross site scripting vulnerability</subcategoryShortDescription>
    </com.coverity.ces.ws.testclient.CheckerPropertyDataObj>
  </checkerProperties>
</com.coverity.desktop.model.cim.cache.CheckerPropertiesCacheRecord>